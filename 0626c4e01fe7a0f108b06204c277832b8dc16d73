{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3c98fbbf_d938fef9",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2021-11-02T09:51:18Z",
      "side": 1,
      "message": "Section 12.12 in DSP0236_1.3.0 define \"Get Routing Table Entries\".\n\"This command can be used to request an MCTP bridge or bus owner to return data corresponding to its present routing table entries.\"\n\nGetRoutingTableEntries is used to communicate between mctp devices in mctp layer but not between pldm layer and mctp layer.\n\nMoreover, the current mctp-mux daemon just transfers/receives the pldm commands to/from destination, it does not support any mechanism to response routing table to pldm layer.\n\nI think we can use configuration file in this case. Mctp service will update the routing table to a configuration file. When there is a changed in the file PLDMd will access the file to retrieve the routing table.",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71b83296_735ee8c9",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-11-02T15:29:48Z",
      "side": 1,
      "message": "The design doc expects that mctp service is the topmost bus owner and should support \"Get Routing Table Entries\" because table12 in DSP0236_1.3.1 shows this command is Ma(Mandatory for Accept) for bus owner. However, as you mentioned that the current implementation of mctp-demux-deamon does not act as MCTP responder.\n\nI think pldmd can have a wrapper interface to abstract the method of getting EID table from MCTP service. One of possible implementation can be the method you suggested. It is also provide the flexibility to adopt to other new MCTP service implementation(e.g. in-kernel MCTP)",
      "parentUuid": "3c98fbbf_d938fef9",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2e907d9_a89e3a66",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2021-11-03T01:51:21Z",
      "side": 1,
      "message": "The current mctp-demux-deamon does act as MCTP responder, BMC can response GetRoutingTableEntries to other mctp devices and also itself. But GetRoutingTableEntries is MCTP command. It is handled by libmctp and routing table is managed in mctp layer. The problem is how libmctp response the routing table to pldmd?\n\nCurrently, mctp is trasporter for pldm message. it does not handle pldm message ( does not parse pldm message). So I think libmctp will not response for the request from libpldm.",
      "parentUuid": "71b83296_735ee8c9",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eef69810_241ff6fa",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-11-03T07:36:26Z",
      "side": 1,
      "message": "I found that both of the mctpd of in-kernel MCTP[1] and intel-BMC pmci[2] have implemented the D-Bus interface for MCTP endpoint enumeration(https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/MCTP). So I will update the description to use this D-Bus interface for getting EID list instead.\n\nBecause the mctp-demux-daemon doesn\u0027t implement this D-bus interface, I would like to follow your suggestion to have a configuration file for listing EIDs.\n\n[1]in-kernel MCTP(https://github.com/CodeConstruct/mctp)\n[2]intel-BMC mctpd(https://github.com/Intel-BMC/pmci/tree/master/mctpd)",
      "parentUuid": "d2e907d9_a89e3a66",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e430038_0f7c2cf9",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-02-13T16:52:46Z",
      "side": 1,
      "message": "updated",
      "parentUuid": "eef69810_241ff6fa",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3871165c_4e7f60c2",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2021-11-02T09:51:18Z",
      "side": 1,
      "message": "Currently, I saw that these json files are only used by pldm responder to response the PDRs to requester. I don\u0027t think these file is used to configure the terminus PDRs (Example the host).",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ac80eab_be2cc4f2",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-11-02T15:29:48Z",
      "side": 1,
      "message": "Yes, the current implementation needs to be enhanced to fulfill the gap of requirement. For example, the current implementation does not support to generate \"the numeric sensor PDR\" by json file.\n\nBecause the function of \"pldm sensor monitoring\" will be implemented by pldmd as well. The PDR generated by json files can be accessed by internal function calls directly.",
      "parentUuid": "3871165c_4e7f60c2",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e78d9626_6c14cd79",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2021-11-03T01:51:21Z",
      "side": 1,
      "message": "Yes, you are right. In that case, we will not use entity-manager to configure the static PLDM sensors.",
      "parentUuid": "4ac80eab_be2cc4f2",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1a76033_250c1e61",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-02-13T16:52:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e78d9626_6c14cd79",
      "revId": "0626c4e01fe7a0f108b06204c277832b8dc16d73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}