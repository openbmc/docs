{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c83a0ef5_aea63fcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-09-25T21:42:21Z",
      "side": 1,
      "message": "could this fit into the new daemon in https://gerrit.openbmc.org/c/openbmc/docs/+/74022/8/designs/inventory/gpio-based-hardware-inventory.md?",
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2acf8d26_338c3046",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-26T22:00:05Z",
      "side": 1,
      "message": "My understanding is the other daemon u mentioned is very generic daemon to handle creation and deletion of GPIO based fru entries, so it cannot generate the very specific events for cable usecase. Moreover, the requirement for runtime cable configuration doesn\u0027t seem to be good charter for that daemon.",
      "parentUuid": "c83a0ef5_aea63fcc",
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa76a324_732e1407",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-09-29T05:48:43Z",
      "side": 1,
      "message": "Looks good to me.",
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5e927db_0c31f7f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2024-09-29T09:16:45Z",
      "side": 1,
      "message": "Design doc looks good to me.",
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ace3ea3_16091b68",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-18T05:38:10Z",
      "side": 1,
      "message": "Can you please rather describe the file in jsonschema, and then use this as a concrete example? That way we have a proper specification for the code to implement, and aren\u0027t left at the whime of \"whatever the code does\"\n\nHowever, the proposal is that this lives in dbus-sensors, which are reactors to entity-manager configs. None (that I\u0027m aware) of consume a configuration file; all the configuration comes from EM. Why is this different?\n\nCan you unpack why the necessary cable config can\u0027t be described via EM?",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "694ac94d_ca393409",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-25T06:19:57Z",
      "side": 1,
      "message": "\u003e Can you please rather describe the file in jsonschema, and then use this as a concrete example? That way we have a proper specification for the code to implement, and aren\u0027t left at the whime of \"whatever the code does\"\n\nSure i can define a json schema.\n\n\u003e \n\u003e However, the proposal is that this lives in dbus-sensors, which are reactors to entity-manager configs. None (that I\u0027m aware) of consume a configuration file; all the configuration comes from EM. Why is this different?\n\nIf you believe that another repository or a new one would be more appropriate for this, we can add it there.\n\n\u003e \n\u003e Can you unpack why the necessary cable config can\u0027t be described via EM?\n\nThis configuration file will be stored in a writable filesystem section that is added at runtime. It specifies the cables that are expected to be connected during runtime, which is why it cannot be described via EM config.",
      "parentUuid": "8ace3ea3_16091b68",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8072fb0d_9f807ba5",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-28T01:04:41Z",
      "side": 1,
      "message": "\u003e If you believe that another repository or a new one would be more appropriate for this, we can add it there.\n\nWoah, hold up. I feel you\u0027re replying from an established position there. Let\u0027s unwind things a little bit. I\u0027m trying to understand what you\u0027re proposing. Please don\u0027t assume that I have a complete understanding of what you\u0027re doing and am requiring you to do something different.\n\nMaybe the config file is necessary, but it sure is unique for dbus-sensors, and I want to establish it\u0027s something that\u0027s actually required.\n\n\u003e This configuration file will be stored in a writable filesystem section that is added at runtime\n\nWhere does it come from? When does it get created or updated? How is this coordinated with the daemon process?",
      "parentUuid": "694ac94d_ca393409",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6eee66ae_7dd9fa01",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-28T06:46:57Z",
      "side": 1,
      "message": "\u003e \u003e If you believe that another repository or a new one would be more appropriate for this, we can add it there.\n\u003e \n\u003e Woah, hold up. I feel you\u0027re replying from an established position there. Let\u0027s unwind things a little bit. I\u0027m trying to understand what you\u0027re proposing. Please don\u0027t assume that I have a complete understanding of what you\u0027re doing and am requiring you to do something different.\n\u003e \n\u003e Maybe the config file is necessary, but it sure is unique for dbus-sensors, and I want to establish it\u0027s something that\u0027s actually required.\n\nSure.\n\n\u003e \n\u003e \u003e This configuration file will be stored in a writable filesystem section that is added at runtime\n\u003e \n\u003e Where does it come from? \n\nIt can be hosted at runtime by the user or it can be part of image itself, but mostly it handles the use-case where it will be hosted by the user.\n\n\u003e When does it get created or updated? \n\nIt can be created at runtime into a writable filesystem path such as /var/lib.\n\n\n\u003e How is this coordinated with the daemon process?\n\nThe daemon process will perform inotify watch on the config file path and watch for its presense/update.",
      "parentUuid": "8072fb0d_9f807ba5",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe282fd7_e236b02f",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-30T00:36:17Z",
      "side": 1,
      "message": "\u003e It can be hosted at runtime by the user or it can be part of image itself, but mostly it handles the use-case where it will be hosted by the user.\n\n\u003e It can be created at runtime into a writable filesystem path such as /var/lib.\n\nRight, but how does it get there? Does the user ssh in and drop it onto the system manually? Or something else?\n\n\u003e The daemon process will perform inotify watch on the config file path and watch for its presense/update.\n\nSure, I guess that\u0027s fine, though I\u0027d be interested in exploring whether we could use the usual D-Bus mechanisms (signals) for the same?",
      "parentUuid": "6eee66ae_7dd9fa01",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "addddf52_d73c89d4",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-30T06:13:08Z",
      "side": 1,
      "message": "\u003e \u003e It can be hosted at runtime by the user or it can be part of image itself, but mostly it handles the use-case where it will be hosted by the user.\n\u003e \n\u003e \u003e It can be created at runtime into a writable filesystem path such as /var/lib.\n\u003e \n\u003e Right, but how does it get there? Does the user ssh in and drop it onto the system manually? Or something else?\n\nFor runtime config, yes, user will ssh and drop the config file into the system.\n\n\u003e \n\u003e \u003e The daemon process will perform inotify watch on the config file path and watch for its presense/update.\n\u003e \n\u003e Sure, I guess that\u0027s fine, \n\nSure, i am in process of finishing a prototype implementation using inotify.\n\n\u003e though I\u0027d be interested in exploring whether we could use the usual D-Bus mechanisms (signals) for the same?\n\nIs there any existing service in openBMC which can watch for filesystem updates/changes, for example, when a new file gets added to some dir?",
      "parentUuid": "fe282fd7_e236b02f",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b4b975f_db0d4dd9",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-31T00:14:03Z",
      "side": 1,
      "message": "\u003e Is there any existing service in openBMC which can watch for filesystem updates/changes, for example, when a new file gets added to some dir?\n\nI was rather thinking of having the config represented in DBus rather than having a DBus signal relay an inotify event (if I\u0027ve interpreted your question right). I don\u0027t think that indirection is necessary, use inotify directly if that\u0027s what\u0027s necessary.",
      "parentUuid": "addddf52_d73c89d4",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a40f79e_bec297fb",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-31T18:10:57Z",
      "side": 1,
      "message": "\u003e \u003e Is there any existing service in openBMC which can watch for filesystem updates/changes, for example, when a new file gets added to some dir?\n\u003e \n\u003e I was rather thinking of having the config represented in DBus rather than having a DBus signal relay an inotify event (if I\u0027ve interpreted your question right). I don\u0027t think that indirection is necessary, use inotify directly if that\u0027s what\u0027s necessary.\n\nSure, will use inotify then.\n\nDo you have any suggestions on repo - dbus-sensors or something new or i shall open a TOF issue for that discussion?",
      "parentUuid": "4b4b975f_db0d4dd9",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54cde2a5_c522ac8a",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-10-31T23:53:33Z",
      "side": 1,
      "message": "I\u0027d like other dbus-sensors maintainers to chime in on this. I\u0027ll add them on review.",
      "parentUuid": "6a40f79e_bec297fb",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d6deea6_ee4ad23d",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-04T08:13:16Z",
      "side": 1,
      "message": "Coming in late here, but yes, EM reactors should not have a config file.  By definition, their \"config file\" lives in entity manager as an exposes record of a physical component.",
      "parentUuid": "54cde2a5_c522ac8a",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3f64b48_85b939da",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-05T16:19:50Z",
      "side": 1,
      "message": "EM can represent information which is true for a particular hardware design but it cannot represent information which is dynamic for a particular configuration (hence the proposal to use a config file).\n\nThe device has 24 leak detector ports.  Depending on which rack it is installed it (and how many devices are in that rack), anywhere between 0 and 24 can be \"expected\" to be connected.  This is not information EM can ever know.",
      "parentUuid": "3d6deea6_ee4ad23d",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc804fc_a6727468",
        "filename": "designs/cable-monitor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-24T00:18:55Z",
      "side": 1,
      "message": "\u003e EM can represent information which is true for a particular hardware design but it cannot represent information which is dynamic for a particular configuration (hence the proposal to use a config file).\n\u003e \n\u003e The device has 24 leak detector ports.  Depending on which rack it is installed it (and how many devices are in that rack), anywhere between 0 and 24 can be \"expected\" to be connected.  This is not information EM can ever know.\n\nThis sounds identical to how we handle fans today.  A baseboard has 8 fan ports, depending on the chassis instance, 0-8 of them might be populated and scanning.\n\nSounds very similar?",
      "parentUuid": "c3f64b48_85b939da",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "50a3b39fa197a9f1bf515af87c4cc4a443bc2aa1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}