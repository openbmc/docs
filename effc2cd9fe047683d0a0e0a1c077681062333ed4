{
  "comments": [
    {
      "key": {
        "uuid": "ec1bde15_0aa0d6d6",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "In general you have not followed the design document template.  Please use `pldm-stack.md` as a guide for expected major headings.",
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7764356d_0e7f9da7",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "Please fix the 80 character limit throughout this file.",
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "076b3157_39b1e69b",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "This is a grammatically awkward quoting.",
      "range": {
        "startLine": 11,
        "startChar": 450,
        "endLine": 11,
        "endChar": 465
      },
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c4bfce8_825edd36",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "I think you\u0027ve kind of round-about explained aspects of the daemon here.  I\u0027d like the components that make it up a little more explicitly broken out.\n\n1. proposed dbus interfaces\n2. entity manager config\n3. daemon\n\nDo you have a proposed repository that this daemon is going to reside at?  You should also probably document how this is going to be implemented in the IPMI providers (which ones?).",
      "range": {
        "startLine": 14,
        "startChar": 4,
        "endLine": 14,
        "endChar": 32
      },
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd294890_d8fb166d",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "I think this is where my complaints about free-form strings in your proposed dbus interface are coming from.  I still don\u0027t want free-form strings here.  Please use dbus enumerations.\n\nI expect you\u0027re going to have OEM-specific cables, so we don\u0027t need them all in xyz.openbmc_project.Inventory.Cable.CableType.  It is acceptable to create OEM interfaces of the same name, like com.google.Inventory.Cable.CableType and specify that the property must follow the schema `\u003cdomain\u003e.Inventory.Cable.CableType.\u003ctype\u003e`.",
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d82f7ecf_bcc11181",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "I don\u0027t understand syntactically what this is referring to.  It is as if you meant to have a list of interfaces at an object path, but you have interfaces in an interface.",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 37
      },
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc141537_1e8b9204",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "This makes no sense to me.  Why wouldn\u0027t you just have the IPMI provider collapse everything under a particular cable path element?  I don\u0027t understand why we need to be \"IPMI aware\" at a dbus level.",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 146
      },
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7b5e177_742b8460",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-03T16:32:31Z",
      "side": 1,
      "message": "I don\u0027t think that works, because even if we go with the hierarchical inventory, that overloads what it means to be contained by with what it means to be connected to.  Said another way, cables are not contained by the cards they\u0027re plugged into.\n\nThis is not to say I\u0027ve looked at this in depth enough propose a better solution, but when this stuff starts getting to Redfish, we\u0027re going to have a problem with overloading those two things.  Chu pinged me OOB to ask about this comment.  I haven\u0027t read the full design doc yet, and I\u0027m waiting on the formatting to be fixed before I do (no sense in reviewing it twice).",
      "parentUuid": "cc141537_1e8b9204",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 146
      },
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f277dadd_0398e247",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "Squeezed?",
      "range": {
        "startLine": 79,
        "startChar": 13,
        "endLine": 79,
        "endChar": 21
      },
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63005d16_39a5ee4d",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "This is illegal from a dbus perspective.  Interfaces cannot have slashes.  The dbus client library won\u0027t even let you do it.\n\nDon\u0027t try to invent new dbus mechanisms.  There are already properties, associations, subpaths, etc.",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 155
      },
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44046451_12ddae79",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-03T12:22:37Z",
      "side": 1,
      "message": "These sound like requirements not a description of testing.  Are you going to enhance openbmc-test-automation, are you going to mock, etc.?",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 90,
        "endChar": 48
      },
      "revId": "effc2cd9fe047683d0a0e0a1c077681062333ed4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}