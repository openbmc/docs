{
  "comments": [
    {
      "key": {
        "uuid": "dc334a00_2d7b6db9",
        "filename": "designs/dbus-mocking-integration-testing.md",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-11-10T21:54:09Z",
      "side": 1,
      "message": "I thought these were the bullets. :)",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 32
      },
      "revId": "fdc140904a189fd595b9e338c1f30a41750cafa6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53658ae3_3821778b",
        "filename": "designs/dbus-mocking-integration-testing.md",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-11-10T13:46:10Z",
      "side": 1,
      "message": "Curious why this in not a goal - the proposed design could work for solving the unit test problem (where the unit being tested is making D-Bus calls to another service and its reaction to the D-Bus response needs to be tested) as well?",
      "revId": "fdc140904a189fd595b9e338c1f30a41750cafa6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d8305ce_247150d9",
        "filename": "designs/dbus-mocking-integration-testing.md",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-11T16:24:02Z",
      "side": 1,
      "message": "My understanding is that this was an intern project that hasn\u0027t been worked on in over a year now.  I suspect you\u0027re not going to get any answer to this question.",
      "parentUuid": "53658ae3_3821778b",
      "revId": "fdc140904a189fd595b9e338c1f30a41750cafa6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6b1e959_bbf92175",
        "filename": "designs/dbus-mocking-integration-testing.md",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-11-17T01:41:56Z",
      "side": 1,
      "message": "Yes, this was an intern project and we haven\u0027t found someone to take it over yet, although I do still think it would be useful to the community.\n\nTo answer the question, the initial focus was on testing entire daemons rather than individual functions, since this would allow writing tests without having to modify the internals of any of the daemons, significantly reducing complexity. After that it could be expended to serve more needs",
      "parentUuid": "4d8305ce_247150d9",
      "revId": "fdc140904a189fd595b9e338c1f30a41750cafa6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e5bbccf_b952b704",
        "filename": "designs/dbus-mocking-integration-testing.md",
        "patchSetId": 6
      },
      "lineNbr": 191,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-20T22:17:43Z",
      "side": 1,
      "message": "I don\u0027t understand this.  What do systems with or without python support have to do with this kind of testing?",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 191,
        "endChar": 18
      },
      "revId": "fdc140904a189fd595b9e338c1f30a41750cafa6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3bcf6d2_2d3094ee",
        "filename": "designs/dbus-mocking-integration-testing.md",
        "patchSetId": 6
      },
      "lineNbr": 191,
      "author": {
        "id": 1000913
      },
      "writtenOn": "2020-11-20T22:22:32Z",
      "side": 1,
      "message": "There were some concerns about the dependency on python.\nThis comment: https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/37378/3/designs/dbus-mocking-integration-testing.md#80",
      "parentUuid": "9e5bbccf_b952b704",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 191,
        "endChar": 18
      },
      "revId": "fdc140904a189fd595b9e338c1f30a41750cafa6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "813d5141_aaad4847",
        "filename": "designs/dbus-mocking-integration-testing.md",
        "patchSetId": 6
      },
      "lineNbr": 191,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-11-23T15:14:20Z",
      "side": 1,
      "message": "There isn\u0027t any problem adding python as a dependency to a container image....in fact it is already a dependency in the container images we build to run the unit tests.\n\nPatrick did you intend to run these \"almost\" unit tests on the BMC itself?  If enabling that was the motivation for choosing sdbusplus over python-dbusmock then that is what we should write down here.",
      "parentUuid": "f3bcf6d2_2d3094ee",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 191,
        "endChar": 18
      },
      "revId": "fdc140904a189fd595b9e338c1f30a41750cafa6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2065a60_90d52ce1",
        "filename": "designs/dbus-mocking-integration-testing.md",
        "patchSetId": 6
      },
      "lineNbr": 191,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2020-11-24T06:41:25Z",
      "side": 1,
      "message": "That seemed like the concern. Or at least to run the unit tests in a simulated environment similar to your intended device. Presumably all with something like openembedded ptest.",
      "parentUuid": "813d5141_aaad4847",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 191,
        "endChar": 18
      },
      "revId": "fdc140904a189fd595b9e338c1f30a41750cafa6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}