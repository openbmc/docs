{
  "comments": [
    {
      "key": {
        "uuid": "184e378d_e81a6409",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-25T14:59:17Z",
      "side": 1,
      "message": "Add:\n- Redfish login responses have the Redfish `PasswordChangeRequired` message.\n- The `/login` URI responses have the `errorExtendedInfo` field.",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93b1f81b_6ed3e7f1",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-30T15:50:28Z",
      "side": 1,
      "message": "Change the name of the field to: extendedMessage",
      "parentUuid": "184e378d_e81a6409",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4e440ce_fc9ea88e",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2019-10-09T20:21:53Z",
      "side": 1,
      "message": "What\u0027s the difference between basic auth and using /login?",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e152d96_c83dfd8a",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-10T19:19:36Z",
      "side": 1,
      "message": "Two answers:\n - Basic Auth (https://en.wikipedia.org/wiki/Basic_access_authentication) performs one request without returning any session credentials to the caller. \n - Using the /login URI creates a session and returns session credentials which can then be used for subsequent requests.\n\nThis design point was added simply to clarify the design.  It could be enhanced if needed.\nThe BMCWeb implementation of Basic Auth is in https://github.com/openbmc/bmcweb/blob/master/include/token_authorization_middleware.hpp function performBasicAuth().  It could be re-structured so that an account that has an expired password and uses Basic Auth\n - will be limited to the ConfigureSelf privilege.\n - will get the same results (same auth and same messages) as from /login users.\n\nBut that would be more work.  Is this function needed? \u003c-- real question",
      "parentUuid": "b4e440ce_fc9ea88e",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f209fee7_7e050b30",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2019-10-18T19:46:27Z",
      "side": 1,
      "message": "So basic auth would be when users put the user and password in the URL? I think some of our external clients are going down the path of using that (we\u0027ve pointed to using it as valid in the cheatsheet.md) so seems like we would need a indication the password was expired?",
      "parentUuid": "2e152d96_c83dfd8a",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "859d8658_da90e405",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-24T15:57:55Z",
      "side": 1,
      "message": "Yep, and Redfish supports Basic Auth.  I\u0027ll add that as a requirement....sigh, and more implementation work...",
      "parentUuid": "f209fee7_7e050b30",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "002778c3_b517e854",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-24T21:13:17Z",
      "side": 1,
      "message": "Basic Auth will work as expected:\n- When the password is good, it will work exactly as before.\n- When the password is expired:\n  + if the access is authorized (limited to change password, and logout), it will work as before\n  + if the access is not authorized, you\u0027ll get the 403 Forbidden and:\n    - if using a Redfish API, you get the Redfish PasswordChangeRequired message.\n    - if using the legacy REST APIs, you\u0027ll get the an \"extendedMessage\" with details about the password being expired.\n   - otherwise, 403 Forbidden with no additional message\n(The implementation was easy!)",
      "parentUuid": "859d8658_da90e405",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "322c2323_d0c479f1",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2019-10-18T17:11:38Z",
      "side": 1,
      "message": "spelling",
      "range": {
        "startLine": 152,
        "startChar": 6,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aedb707_828495d1",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-24T15:57:55Z",
      "side": 1,
      "message": "yip",
      "parentUuid": "322c2323_d0c479f1",
      "range": {
        "startLine": 152,
        "startChar": 6,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c1098b7_5d9ba11c",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-25T14:59:17Z",
      "side": 1,
      "message": "Insert new paragraph here:\nTo clarify, when BMCWeb returns HTTP status 403 Forbidden -and- the session has the special PasswordChangeRequired condition, the HTTP response body may have additional information to help the user diagnose the problem.\n- For Redfish APIs (under the /redfish URI), the Redfish PasswordChangeRequired extended message is sent.\n- For APIs which return a JSON object (such as the DBus REST APIs), the HTTP response message body will contain a top-level JSON field: \"errorExtendedInfo\" \u003d \"The password for this account must be changed.  PATCH the \u0027Password\u0027 property for the account under URI: /redfish/v1/AccountService/Accounts/\u003caccountID\u003e\", with the appropriate accountID.\n- For other APIs, no additional information is sent.  Please note this is simply a straw-man design point which was added to help explain the design; such APIs can be enhanced as needed.",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c68ac407_a2c21ac6",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-30T15:50:28Z",
      "side": 1,
      "message": "Foir the non-Redfish case, change the name of the JSON field to: extendedMessage.\n(The Redfish API will use the Redfish PasswordChangeRequired extended message.)",
      "parentUuid": "0c1098b7_5d9ba11c",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b293dea_c1dc0853",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-03T14:48:52Z",
      "side": 1,
      "message": "Add new paragraph:\nThis is an alternate mechanism to cause the initial expired password.\nThe main idea is to disable the EXPIRED_PASSWORD image feature, which means the password will not be expired by default.  Then add a new service that runs before the system reaches the multi-user target which administratively expires the password if the BMC\u0027s file system looks like its first boot.  For example, if a network server has not written its persistent data to files.  \u003d\u003d\u003e That causes the password to be expired\n\nWhy? This way change the behavior in this edge case scenario:\n- The BMC is running an older version of OpenBMC.\n- The BMC still has its default password.\n- The BMC performs code update to a version of OpenBMC which implements this new design.\n\nThe new behavior will NOT expire the default password during the upgrade, whereas the EXPIRED_PASSWORD image feature would have expired the password.",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}