{
  "comments": [
    {
      "key": {
        "uuid": "184e378d_e81a6409",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-25T14:59:17Z",
      "side": 1,
      "message": "Add:\n- Redfish login responses have the Redfish `PasswordChangeRequired` message.\n- The `/login` URI responses have the `errorExtendedInfo` field.",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93b1f81b_6ed3e7f1",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-30T15:50:28Z",
      "side": 1,
      "message": "Change the name of the field to: extendedMessage",
      "parentUuid": "184e378d_e81a6409",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4e440ce_fc9ea88e",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2019-10-09T20:21:53Z",
      "side": 1,
      "message": "What\u0027s the difference between basic auth and using /login?",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c1098b7_5d9ba11c",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-25T14:59:17Z",
      "side": 1,
      "message": "Insert new paragraph here:\nTo clarify, when BMCWeb returns HTTP status 403 Forbidden -and- the session has the special PasswordChangeRequired condition, the HTTP response body may have additional information to help the user diagnose the problem.\n- For Redfish APIs (under the /redfish URI), the Redfish PasswordChangeRequired extended message is sent.\n- For APIs which return a JSON object (such as the DBus REST APIs), the HTTP response message body will contain a top-level JSON field: \"errorExtendedInfo\" \u003d \"The password for this account must be changed.  PATCH the \u0027Password\u0027 property for the account under URI: /redfish/v1/AccountService/Accounts/\u003caccountID\u003e\", with the appropriate accountID.\n- For other APIs, no additional information is sent.  Please note this is simply a straw-man design point which was added to help explain the design; such APIs can be enhanced as needed.",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c68ac407_a2c21ac6",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-30T15:50:28Z",
      "side": 1,
      "message": "Foir the non-Redfish case, change the name of the JSON field to: extendedMessage.\n(The Redfish API will use the Redfish PasswordChangeRequired extended message.)",
      "parentUuid": "0c1098b7_5d9ba11c",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b293dea_c1dc0853",
        "filename": "designs/expired-password.md",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-03T14:48:52Z",
      "side": 1,
      "message": "Add new paragraph:\nThis is an alternate mechanism to cause the initial expired password.\nThe main idea is to disable the EXPIRED_PASSWORD image feature, which means the password will not be expired by default.  Then add a new service that runs before the system reaches the multi-user target which administratively expires the password if the BMC\u0027s file system looks like its first boot.  For example, if a network server has not written its persistent data to files.  \u003d\u003d\u003e That causes the password to be expired\n\nWhy? This way change the behavior in this edge case scenario:\n- The BMC is running an older version of OpenBMC.\n- The BMC still has its default password.\n- The BMC performs code update to a version of OpenBMC which implements this new design.\n\nThe new behavior will NOT expire the default password during the upgrade, whereas the EXPIRED_PASSWORD image feature would have expired the password.",
      "revId": "92fc05233c5619ccc4f9c721036ac3916889ddbe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}