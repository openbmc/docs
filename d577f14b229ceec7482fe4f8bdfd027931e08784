{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f3e5a252_3f956ecc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T15:36:04Z",
      "side": 1,
      "message": "What is a recommended value?  Can you point to the documentation you pulled these recommended values from in your commit message?  clang-format maintains codes for multiple styles of formatting, so I\u0027d be surprised if there were just one \"recommended\" value.\n\nIf any of these values are just setting or keeping the defaults, why is it necessary to have them in this file?",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 10,
        "endChar": 36
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66a0e800_0d55d0ba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-07-11T21:50:58Z",
      "side": 1,
      "message": "My understanding was that this file contained the recommended style format for the OpenBMC community. Otherwise, why do we even have this file? I simply took my best guess to be consistent with the style previously presented in this file. I\u0027ll graciously make any changes based on constructive input.\n\nWhen I started this activity I ran:\n\n    clang-format -style\u003dllvm -dump-config \u003e .clang-format\n\nThis dumped out all available options with the llvm settings. Then I edited them to match the previous style. I believe this is what had been done before. I simply followed that pattern.",
      "parentUuid": "f3e5a252_3f956ecc",
      "range": {
        "startLine": 10,
        "startChar": 17,
        "endLine": 10,
        "endChar": 36
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4447005e_fd382725",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-06-28T20:53:34Z",
      "side": 1,
      "message": "There are a lot of changes proposed here.  We probably need to run this against a few bigger repositories and make sure the changes are pretty minor, or else we may need to tweak.",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16754183_7d67ec21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-07-05T15:06:57Z",
      "side": 1,
      "message": "Yeah wow, that is quite a few changes. Not sure what next step is here? We want Zane to run this against some of our bigger/popular repos? That seems like quite an ask for someone who\u0027s just trying to help out here with a doc update. As this is just a doc update, and it\u0027s up to the maintainers to pull into their repos, I\u0027m not sure the testing is really necessary.",
      "parentUuid": "4447005e_fd382725",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62421730_1a38f8ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T15:36:04Z",
      "side": 1,
      "message": "\u003e We want Zane to run this against some of our bigger/popular repos?\n\nThat\u0027d be a good start.\n\n\u003e That seems like quite an ask for someone who\u0027s just trying to help out here with a doc update.\n\nHow is this a docs update?  He\u0027s changing config files for compile time tooling.  If he had updated the coding standard with the things that this file conveys, I could see that argument being made, but as-written, it doesn\u0027t at all document why these changes are being made, or what effect they\u0027re going to have on our coding style.\n\nI\u0027m also not quite understanding the pushback;  It\u0027s a 5 minute task to apply this clang-format to a repo and push the patch.  In lieu of writing a lengthy commit message documenting why this change is needed (which for any other sort of code-changing commit we\u0027d generally require) pointing to a couple repos and showing \"These are the code formatting changes that get made\" seems reasonable to me.\n\nI applied this change to bmcweb, and it changed 13000 lines of code.\n\n\n\u003e That seems like quite an ask for someone who\u0027s just trying to help out here with a doc update.\n\nI don\u0027t know if we formally documented that anywhere, and IMO, it\u0027s up to the person submitting the change to ideally make the case that every repo in the codebase needs to change.",
      "parentUuid": "16754183_7d67ec21",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "592f70ce_a0c2719c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T15:47:00Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55106\n\nAre the changes it\u0027s making, and some things to note:\n\n1. This file makes us incompatible with clang-format-13, which is currently the standard in a lot of debian distros.  We should message that more heavily.\n\n2. The biggest change I see is in regards to the tabbing of lambdas, which, seems ok, but is going to cause mass merge conflicts on existing patches like it did a couple months ago when we changed the lambda formatting rules once.  The rollout of this should be discussed in the commit message.",
      "parentUuid": "62421730_1a38f8ce",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6010057f_b427377b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-07-05T22:18:52Z",
      "side": 1,
      "message": "\u003e I applied this change to bmcweb, and it changed 13000 lines of code.\n\nThis implies to me this is not just \"assigning the default\".  If the desire is to assign the defaults, that should be one commit.  If the desire is to change the coding standards, each of those should be a separate commit with ideally a corresponding update to the coding standard document.  If the standard is ambiguous, I\u0027d like to have those parts clearly differentiated so that we can discuss which direction we want to go.\n\n@Zane, can you elaborate more on what you were attempting to do here?",
      "parentUuid": "592f70ce_a0c2719c",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d329645c_9b703a1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-07-12T20:53:34Z",
      "side": 1,
      "message": "The Jenkins docker CI updated to clang-format-14. With the current .clang-format files in openpower-hw-diags and openpower-libhei, our CI runs all failed. This forced us to update the .clang-format file. If you do a quick search, you will see that many other OpenBMC projects had to do the same. Since I went through the exercise I thought I would contribute to the community with my \"best guess\" at these options in the hopes that it might safe someone else a lot of time. I know it did long ago when I started my projects.\n\nI should also note that this is document is not definitive. It never has been. They are simply suggested guidelines. In fact, we changed two of the options in my projects to align what my team prefers. I am sure bmcweb can do the same to minimize changes.",
      "parentUuid": "6010057f_b427377b",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48d08f85_b270615a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-07-13T12:03:45Z",
      "side": 1,
      "message": "\u003e this is document is not definitive. It never has been.\n\nI\u0027m curious why you think the project coding style guidelines are not definitive.  I\u0027m certain the intent was that they are definitive (otherwise why bother with maintaining them), so we should probably fix whatever phrasing led you to think this.",
      "parentUuid": "d329645c_9b703a1d",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "206bf5ca_e17fa29b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-07-13T12:06:18Z",
      "side": 1,
      "message": "\u003e  you will see that many other OpenBMC projects had to do the same\n\nI\u0027m not certain but I don\u0027t think this was because of the move to clang-14.  Rather, I recently made a change: https://gerrit.openbmc.org/c/openbmc/docs/+/53744 and people were picking that up.",
      "parentUuid": "48d08f85_b270615a",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08fff786_396f1798",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-07-13T15:35:03Z",
      "side": 1,
      "message": "This file isn\u0027t used in the Jenkins CI. Instead, it uses the .clang-format file in the root directory of the containing project, if that file exists. I never made any changes to the that file in my projects and yet my CI runs all started failing due to requirements imposed by the new clang-format-14.\n\nRegardless, I agree. I changed too much.",
      "parentUuid": "206bf5ca_e17fa29b",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b25e531c_5c6c788f",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T15:47:00Z",
      "side": 1,
      "message": "I see a bunch of options below where we\u0027re just imposing the defaults.  Is there value in that?  Especially for all the settings that are empty list, or \"None\" it seems like extra noise in the file.",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77542d53_ca0c0700",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-07-11T21:50:58Z",
      "side": 1,
      "message": "As stated in another comment, I am just following what had been done before.",
      "parentUuid": "b25e531c_5c6c788f",
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1a4b147_e73fd47a",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T20:30:25Z",
      "side": 1,
      "message": "Why did this change?\n\n\nI originally went through this file and wrote \"Why did this change\" on every parameter where its value was changed compared to the previous, but that was a little overkill.  I think the right approach would be getting the commit message updated with how you arrived at the decision that we needed some of these changes, and we can discuss.\n\nSo far as I can tell, this commit is changing 10s of parameters from their previous value, so I think some statement as to why would be warranted.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deea9767_fb8e461e",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-07-11T21:50:58Z",
      "side": 1,
      "message": "According to the documentation (https://releases.llvm.org/14.0.0/tools/clang/docs/ClangFormatStyleOptions.html), the possible values are Consecutive, AcrossEmptyLines, AcrossComments, and AcrossEmptyLinesAndComments. I am guessing this option used to be a boolean, but was later changed to the AlignConsecutiveStyle type. A boolean value may still be accepted to retain backwards compatibility.",
      "parentUuid": "c1a4b147_e73fd47a",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 27
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a234baeb_c59c673f",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T15:47:00Z",
      "side": 1,
      "message": "We don\u0027t use Java on the project, so it\u0027s not clear why these options are helpful.",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 107,
        "endChar": 27
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca38ca7e_fa37b19f",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-07-11T21:50:58Z",
      "side": 1,
      "message": "I agree. They were just added for completeness and can be removed. We could probably also remove BreakAfterJavaFieldAnnotations, InsertTrailingCommas, and SortJavaStaticImport.\n\nAlso, I didn\u0027t realize until after I had filled in everything that there is a separate `style/javascript/.clang-format` file.",
      "parentUuid": "a234baeb_c59c673f",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 107,
        "endChar": 27
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec08a6f4_e8a025dc",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T15:47:00Z",
      "side": 1,
      "message": "This change is one we were looking for the last time we reformatted the lambdas, and is probably overall a good change.",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 109,
        "endChar": 21
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4bebd8c_e889fa87",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-07-11T21:50:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ec08a6f4_e8a025dc",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 109,
        "endChar": 21
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14e7daa3_0b7dbfe4",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-05T15:47:00Z",
      "side": 1,
      "message": "How was this list chosen?  Considering our coding standard is to not use macros as a general rule, it seems odd we would have this.",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 188,
        "endChar": 17
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d83e7353_90a0030d",
        "filename": "style/cpp/.clang-format",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-07-11T21:50:58Z",
      "side": 1,
      "message": "This is left over from the llvm config. This probably should be an empty list. I don\u0027t recall why I left it this way.",
      "parentUuid": "14e7daa3_0b7dbfe4",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 188,
        "endChar": 17
      },
      "revId": "d577f14b229ceec7482fe4f8bdfd027931e08784",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}