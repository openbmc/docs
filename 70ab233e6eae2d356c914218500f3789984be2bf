{
  "comments": [
    {
      "key": {
        "uuid": "0d25c56f_374ba23e",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-06T16:06:04Z",
      "side": 1,
      "message": "Shouldn\u0027t this be configurable?  You might want to notify the host immediately but others might want to defer until the battery goes below N percent?\n\nOr, are you exposing information about your UPS such that the host can create similar Linux battery information like would happen on an ACPI-based system?",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 121,
        "endChar": 11
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82509378_6127eb9d",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-06T20:31:43Z",
      "side": 1,
      "message": "We\u0027ll notify the host both when AC is lost (this condition), and if/when the UPS battery becomes low.  The different types of OS\u0027es our systems support have different policies/implementations based on these 2 notifications - some may choose to start a timer when AC is lost, some may choose to power off immediately, etc.  So the host/partitions decide what shutdown actions to take (ie it\u0027s already in place), not the BMC.",
      "parentUuid": "0d25c56f_374ba23e",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 121,
        "endChar": 11
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f7def43_133f6d0b",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 121,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-06T21:37:36Z",
      "side": 1,
      "message": "I understand.\n\nI can\u0027t speak to your other operating systems, and I don\u0027t know if you\u0027ve already defined the firmware interfaces here, but any ACPI-based machine already has a way to expose batteries (and power supplies) through ACPI tables and UPower can already handle those as well.  You might want to look into how that is exposed and see if skiboot can plumb into those same Linux kernel APIs for your PowerKVM machines.\n\nIdeally the flow for all the battery information would be:\n\nBMC-attached-UPS -\u003e UPower on BMC -\u003e (small openbmc glue) -\u003e IPMI/PLDM -\u003e Host Firmware -\u003e Kernel on Host -\u003e UPower on Host --(on low battery)-\u003e systemd.\n\nIf you plug a UPS directly into your host the { kernel -\u003e upower -\u003e systemd } is already done.  Adding this little bit of plumbing in a standard way on the BMC side gives you the same configuration path that any \"standard\" Linux system has for deal with UPS brown/black-out conditions.",
      "parentUuid": "82509378_6127eb9d",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 121,
        "endChar": 11
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aa47084_50c0c0e3",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-06T16:06:04Z",
      "side": 1,
      "message": "Can you add some words to clarify the rationale here?",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 51
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4ccd3b9_ec540390",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-06T20:31:43Z",
      "side": 1,
      "message": "Sounds like a good idea.\n\nIf the host chose to shut off, and AC still hasn\u0027t came back, we don\u0027t want to automatically power the system back on again, only for it to power back off again (prevent thrashing).",
      "parentUuid": "6aa47084_50c0c0e3",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 51
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a0b0d34_441de66f",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 127,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-06T21:37:36Z",
      "side": 1,
      "message": "Got it.  As I mentioned elsewhere, this is in some regards IBM-specific policy.  Hopefully this is configurable or configurable-easily-added-later.  \n\nI believe we configure our systems to turn on immediately or with only a low battery charge (such as 5%) so we can get a DC up and running faster.",
      "parentUuid": "a4ccd3b9_ec540390",
      "range": {
        "startLine": 127,
        "startChar": 0,
        "endLine": 127,
        "endChar": 51
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c9f6cd6_e9745b69",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-06T16:06:04Z",
      "side": 1,
      "message": "What does \"Good\" mean here?  The UPower states are: { charging, discharging, empty, fully-charged, pending-charge, pending-discharge, unknown }.  Are you going to wait until the battery is \"fully-charged\" before you start powering on your server?",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 230,
        "endChar": 7
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9542b3be_2f49580c",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2021-12-06T20:31:43Z",
      "side": 1,
      "message": "Yes we\u0027ll wait until the battery is fully-charged (and AC has returned) before we start powering on again, eg to avoid thrashing.",
      "parentUuid": "2c9f6cd6_e9745b69",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 230,
        "endChar": 7
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef84a074_75c93f6d",
        "filename": "designs/power-recovery.md",
        "patchSetId": 6
      },
      "lineNbr": 230,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-06T21:37:36Z",
      "side": 1,
      "message": "I think I was missing some of the tie of these states to the proposed dbus interface.  I forgot there was a separate commit with those that was independent from what Shaun mentioned for UPower.",
      "parentUuid": "9542b3be_2f49580c",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 230,
        "endChar": 7
      },
      "revId": "70ab233e6eae2d356c914218500f3789984be2bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}