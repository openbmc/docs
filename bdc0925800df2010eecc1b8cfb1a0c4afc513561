{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d3cae09b_31e65de6",
        "filename": "designs/inventory/gpio-based-hardware-inventory.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-08-28T21:34:44Z",
      "side": 1,
      "message": "Some boards have a GPIO presence along with EEPROM available to the BMC. One potential is to have the GPIO optionally probe the board\u0027s presence even if that board\u0027s EEPROM is corrupted, so we could detect the difference between \"board not presence\" vs \"board eeprom corrupted\".\n\nThis feature could potentially probe said inventory with an \"unknown\" value.",
      "revId": "bdc0925800df2010eecc1b8cfb1a0c4afc513561",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e36acd_69c5c47c",
        "filename": "designs/inventory/gpio-based-hardware-inventory.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-08-29T09:31:34Z",
      "side": 1,
      "message": "I assume with \u0027board\u0027 you mean a compute blade or sled within a larger system.\n\n\u003e This feature could potentially probe said inventory with an \"unknown\" value.\n\nWhat do you mean by \u0027probe said inventory\u0027 ?\n\nDo you mean you want to set an \u0027unknown\u0027 value in that inventory?\n\nIf the presence gpio is telling us that the board is present, the entity is still present. So \u0027Present\u0027 would be \u0027true\u0027, right? It would not be \u0027unknown\u0027. \n\nOn which interface would you suggest to set which value?\n\n\nCan you provide an example EM configuration fragment to configure the feature you are describing?",
      "parentUuid": "d3cae09b_31e65de6",
      "revId": "bdc0925800df2010eecc1b8cfb1a0c4afc513561",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b008ae1_a253eff0",
        "filename": "designs/inventory/gpio-based-hardware-inventory.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-08-29T15:00:31Z",
      "side": 1,
      "message": "I don\u0027t think this is designed to set Present on the item with the Probe statement?",
      "parentUuid": "19e36acd_69c5c47c",
      "revId": "bdc0925800df2010eecc1b8cfb1a0c4afc513561",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "934b1589_7893b532",
        "filename": "designs/inventory/gpio-based-hardware-inventory.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-08-29T18:50:25Z",
      "side": 1,
      "message": "Let me use a real system as an example:\n\nWe have minerva board with the 6 fan control boards,\neach with presence GPIO pins: https://github.com/openbmc/linux/blob/dev-6.6/arch/arm/boot/dts/aspeed/aspeed-bmc-facebook-minerva.dts#L654 (PRSNT_FCB_[TOP|MIDDLE|BOTTOM]_[0|1]_N).\n\nBut we also have an EEPROM on these boards. So the primary inventory mechanism for this using EM is https://github.com/openbmc/entity-manager/blob/master/configurations/minerva_fanboard.json#L1280. It gets probed when the EEPROM is found and a valid FRUID is read.\n\nOne minor problem we have is to recognize the difference between a misplugged or faulty EEPROM of the fan-board vs a missing fan-board. So, I was seeing a potential here where we could mark this inventory as present but we also have an EM configuration for this.",
      "parentUuid": "3b008ae1_a253eff0",
      "revId": "bdc0925800df2010eecc1b8cfb1a0c4afc513561",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30b43fde_0d2faa58",
        "filename": "designs/inventory/gpio-based-hardware-inventory.md",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-08-29T18:53:35Z",
      "side": 1,
      "message": "In our example, your GPIO \"Exposes\" would be part of this chassis configuration https://github.com/openbmc/entity-manager/blob/master/configurations/minerva_cmm.json#L2.",
      "parentUuid": "934b1589_7893b532",
      "revId": "bdc0925800df2010eecc1b8cfb1a0c4afc513561",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d02ac1ae_a59ff0f6",
        "filename": "designs/inventory/gpio-based-hardware-inventory.md",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-08-28T21:34:44Z",
      "side": 1,
      "message": "Did you mean exposes?",
      "range": {
        "startLine": 141,
        "startChar": 64,
        "endLine": 141,
        "endChar": 70
      },
      "revId": "bdc0925800df2010eecc1b8cfb1a0c4afc513561",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c79d8863_3a696be5",
        "filename": "designs/inventory/gpio-based-hardware-inventory.md",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-08-29T09:31:34Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "d02ac1ae_a59ff0f6",
      "range": {
        "startLine": 141,
        "startChar": 64,
        "endLine": 141,
        "endChar": 70
      },
      "revId": "bdc0925800df2010eecc1b8cfb1a0c4afc513561",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94002ce9_5af169c1",
        "filename": "designs/inventory/gpio-based-hardware-inventory.md",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-08-29T09:37:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c79d8863_3a696be5",
      "range": {
        "startLine": 141,
        "startChar": 64,
        "endLine": 141,
        "endChar": 70
      },
      "revId": "bdc0925800df2010eecc1b8cfb1a0c4afc513561",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}