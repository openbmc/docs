{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "35601081_a57f02e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-27T21:07:13Z",
      "side": 1,
      "message": "(Giving a +1 to yourself isn\u0027t widely modeled behavior; I\u0027m not sure what it is intending to signify.)",
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3dd82c9_606a3271",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-28T01:15:40Z",
      "side": 1,
      "message": "I asked Alexander to write the doc and the contributed significant portions myself, so we\u0027re both +1\u0027ing this to acknowledge changes from each other.",
      "parentUuid": "35601081_a57f02e1",
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d371f7d_51a7bf72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-06-28T10:34:47Z",
      "side": 1,
      "message": "LGTM except some spelling mistakes.",
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30d7bd58_7097b40d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-02T00:48:22Z",
      "side": 1,
      "message": "I don\u0027t see anything I maintain here changing, so I\u0027m going to check out of this review and trust the folks that are reviewing it currently.\n\nIf there\u0027s anything specifically you\u0027d like my knowledge of, I\u0027m happy to check in on parts, but I\u0027m not an expert on our uart implementation.",
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdf3c3bd_bfcea226",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 299,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-06-28T10:34:47Z",
      "side": 1,
      "message": "behaviors*",
      "range": {
        "startLine": 299,
        "startChar": 53,
        "endLine": 299,
        "endChar": 64
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "551bc4ac_6ab84141",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 299,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-28T15:10:39Z",
      "side": 1,
      "message": "Let\u0027s not bicker over EN-US vs EN-UK spelling of words.  If someone wants to enable spellcheck and we pick one of these, I\u0027m fine with that, but otherwise, both spellings are equally valid.",
      "parentUuid": "cdf3c3bd_bfcea226",
      "range": {
        "startLine": 299,
        "startChar": 53,
        "endLine": 299,
        "endChar": 64
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6811c71c_a82e4013",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 319,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-06-28T10:34:47Z",
      "side": 1,
      "message": "behavior*",
      "range": {
        "startLine": 319,
        "startChar": 37,
        "endLine": 319,
        "endChar": 47
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfb42bb0_89534d46",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 319,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-28T15:10:39Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "6811c71c_a82e4013",
      "range": {
        "startLine": 319,
        "startChar": 37,
        "endLine": 319,
        "endChar": 47
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e66228bc_e8074bf9",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 363,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-06-28T10:34:47Z",
      "side": 1,
      "message": "behavior*",
      "range": {
        "startLine": 363,
        "startChar": 45,
        "endLine": 363,
        "endChar": 54
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f86fd396_5925d200",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 363,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-28T15:10:39Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "e66228bc_e8074bf9",
      "range": {
        "startLine": 363,
        "startChar": 45,
        "endLine": 363,
        "endChar": 54
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "728fb1de_910217cd",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 367,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-06-28T10:34:47Z",
      "side": 1,
      "message": "behavior*",
      "range": {
        "startLine": 367,
        "startChar": 29,
        "endLine": 367,
        "endChar": 38
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01d931fc_9aa3cd01",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 367,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-28T15:10:39Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "728fb1de_910217cd",
      "range": {
        "startLine": 367,
        "startChar": 29,
        "endLine": 367,
        "endChar": 38
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f56f2e7e_1a896279",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 370,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-06-28T10:34:47Z",
      "side": 1,
      "message": "behavior*",
      "range": {
        "startLine": 370,
        "startChar": 15,
        "endLine": 370,
        "endChar": 25
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9b633f5_db1e3be4",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 370,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-28T15:10:39Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "f56f2e7e_1a896279",
      "range": {
        "startLine": 370,
        "startChar": 15,
        "endLine": 370,
        "endChar": 25
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "566ff2f9_bc1a66ea",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 382,
      "author": {
        "id": 1001049
      },
      "writtenOn": "2024-06-28T10:34:47Z",
      "side": 1,
      "message": "accommodate*",
      "range": {
        "startLine": 382,
        "startChar": 59,
        "endLine": 382,
        "endChar": 70
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6990b61e_75ce48da",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 382,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-01T12:47:28Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "566ff2f9_bc1a66ea",
      "range": {
        "startLine": 382,
        "startChar": 59,
        "endLine": 382,
        "endChar": 70
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67a00547_6ca95b3a",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 407,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-27T21:07:13Z",
      "side": 1,
      "message": "I\u0027m having trouble reading where you decided to do a split vs combined bus.  I see some discussion on it above but I never really see the decision explicitly written.\n\nIt looks like from this you decided to do split busses?  Is that necessary; does it provide advantages?  It seems a bit awkward to me and a lot of extra work in the console server to maintain N independent bus names.  Generally we shouldn\u0027t be relying on bus names for process separation anyhow, so I\u0027m not really sure what it buys us.",
      "range": {
        "startLine": 407,
        "startChar": 30,
        "endLine": 407,
        "endChar": 35
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5de0f810_bb672f19",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 407,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-06-28T01:15:40Z",
      "side": 1,
      "message": "Alexander added mention of this down on lines 444-446.",
      "parentUuid": "67a00547_6ca95b3a",
      "range": {
        "startLine": 407,
        "startChar": 30,
        "endLine": 407,
        "endChar": 35
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ad76a84_f6f8a2f0",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 407,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-28T15:09:05Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "5de0f810_bb672f19",
      "range": {
        "startLine": 407,
        "startChar": 30,
        "endLine": 407,
        "endChar": 35
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f03c908_fa541e52",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-28T15:09:05Z",
      "side": 1,
      "message": "Why is that a good or bad thing?  We could similarly have a combined tree and not expose information about the mux right?  On the surface, this seems like complexity in the implementation side that is unnecessary (and in some cases actually non-preferred).",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1eed4be1_5e2b6cc7",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-01T12:47:28Z",
      "side": 1,
      "message": "In the combined tree, the mux topology is exposed since through the console\u0027s\ndbus name the object paths of all consoles connected to that mux are visible.\n\n```\nbusctl tree --user xyz.openbmc_project.Console.host1\n└─/xyz\n  └─/xyz/openbmc_project\n    └─/xyz/openbmc_project/console\n      ├─/xyz/openbmc_project/console/host1\n      └─/xyz/openbmc_project/console/host2\n```\n\nSo through this output we already know that there is 2 consoles connected to a mux.\n\nWhen there is an important reason,\na transition from split-tree to unified-tree can be done with low probability of regression.\n\nThe other direction would probably break some stuff (example below)\n```\nbusctl call xyz.openbmc_project.Console.host1 \\\n/xyz/openbmc_project/console/host2 \\\nxyz.openbmc_project.Console.Access Connect\n```\n\nWould not agree that there is much complexity on the implementation side.\n\nIt may have a higher resource consumption due to the additional dbus setup per-console. That is worrisome, but i would prefer\n\nconceptual integrity \u003e performance \n\nin those cases.\nFor me, being able to connect to one console via the dbus name of another console is definitely breaking conceptual integrity and creating n ways of doing something.",
      "parentUuid": "4f03c908_fa541e52",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1b83068_51ca4bd5",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-01T19:34:30Z",
      "side": 1,
      "message": "\u003e For me, being able to connect to one console via the dbus name of another console is definitely breaking conceptual integrity and creating n ways of doing something.\n\nWhat are we accomplishing by even using \"Console.host1\" as the busname?  There is no reason to do this.  Having bus-names and object paths matching up is really a foreign concept and not necessary.\n\nI think you mentioned backwards compatibility, but backwards compatibility _with what_?  The only thing I see is _maybe_ this one:\n\n```\nphosphor-host-ipmid/transporthandler.cpp\n1678:                    ctx, \"xyz.openbmc_project.Console.default\",\n1680:                    \"xyz.openbmc_project.Console.UART\", \"Baud\", baudRate))\n```",
      "parentUuid": "1eed4be1_5e2b6cc7",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5831b34_c46e59b2",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-01T20:59:36Z",
      "side": 1,
      "message": "It is really easy to depend upon things like a specific bus name existing.\n\nOn the other hand it can be really hard to find all those places where that happens. There is no search tool i know of that can find all the code that would break if we no longer have the console id as part of the bus name.\n\nEven github search cannot find all those places.\n\nSo i\u0027m for keeping the existing behavior and having the console-id be part of the bus name.\n\nAnd i\u0027m not looking forward to expanding the scope of this change even further and making who-knows-which changes in phosphor-host-ipmid,\nplus filling that maintainer in on all the details and *hoping* they will see it the same way.\n\nWhich alternative dbus name would you suggest?\n\nWe have to have n different dbus names anyways if there are n physical uart on a system, since the most recent design has 1 process per physical UART.\n\nSome alternatives:\n\n- [1] have only 1 obmc-console process in the whole BMC which is capable to handle    multiple physical uarts\n  and the muxes that may be behind those.\n  Something plain like ```xyz.openbmc_project.Console```\n\n- [2] have the physical UART provide the dbus name, e.g. ```xyz.openbmc_project.Console.TTYS0``` and then the individual consoles\n  are available via the object paths.\n\nSo option [1] can be ruled out immediately due to implementation difficulty.\n\nOption [2] may be ruled out since there may be still code depending on the console id being part of the bus name. \n\nAre there other options?",
      "parentUuid": "b1b83068_51ca4bd5",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb24c98a_b4b62cd1",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-02T00:28:53Z",
      "side": 1,
      "message": "\u003e We have to have n different dbus names anyways if there are n physical uart on a system, since the most recent design has 1 process per physical UART.\n\nThis is really the crux of the problem. The remaining argument in this document is about maintaining consistent behaviour.",
      "parentUuid": "b5831b34_c46e59b2",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9506988d_c560ad1c",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-02T18:20:35Z",
      "side": 1,
      "message": "It can be `xyz.openbmc_project.Console.\u003cPID\u003e` for all it matters.  These names are not important to the dbus architecture.  They just need to be unique.\n\nDon\u0027t we have per-TTY config files?  Or are we now going to a single big config file?  How does each process know which parts of the file it is responsible for?  Seems like we have to have some argument here that can be used for uniqueness.\n\n\u003e And i\u0027m not looking forward to expanding the scope of this change even further and making who-knows-which changes in phosphor-host-ipmid,\nplus filling that maintainer in on all the details and hoping they will see it the same way.\n\nIsn\u0027t this a 1 one line change?  If they don\u0027t accept the change, their code is broken, right?  I don\u0027t see the problem.  Let it be broken if they don\u0027t want to accept your string change, right?\n\nOr, like I\u0027ve mentioned before, maintain the \"old names\" as a backwards compatibility.  You can have N busnames in a single process on the same dbus connection.  We\u0027ve done exactly that many times before.",
      "parentUuid": "fb24c98a_b4b62cd1",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1262f6b2_882c0c96",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-03T01:41:14Z",
      "side": 1,
      "message": "\u003e It can be xyz.openbmc_project.Console.\u003cPID\u003e for all it matters. These names are not important to the dbus architecture. They just need to be unique.\n\nYes. However, this is not a new requirement. The _existing behaviour_ of obmc-console is to take a bus name with the console ID appended (as the console ID must be unique). The bus name scheme is not a change that Alexander is proposing. The concern that\u0027s being addressed is to find a sensible solution that _doesn\u0027t_ change that existing behaviour in the face of a UART mux.\n\n\u003e Don\u0027t we have per-TTY config files?\n\nYes\n\n\u003e Or are we now going to a single big config file?\n\nNo, there is still a per-TTY config file. However, if there\u0027s a mux behind that TTY, then the behaviour of the mux is specified in the config file for the TTY.\n\n\u003e You can have N busnames in a single process on the same dbus connection.\n\nThis is what I was proposing (the unified object tree). I prefer it, as it reduces the resources required by obmc-console-server (only 1 bus connection rather than N). However, as it\u0027s largely an implementation detail I left that decision to Alexander for now. I have no concerns with specifying the unified-tree approach here if that\u0027s your preference as well.",
      "parentUuid": "9506988d_c560ad1c",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee865876_1cf85c63",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-07-11T13:54:59Z",
      "side": 1,
      "message": "Is there any update here or anything that should be changed about the design?\nHow can we move forward?\n\nI believe evolving the current dbus representation in a backwards-compatible way is a reasonable choice.\n\nIf the bus names truly do not matter, changing them later on should not be an issue. If they do matter then we are not breaking things with this design.\n\n\u003e Isn\u0027t this a 1 one line change? If they don\u0027t accept the change, their code is broken, right? I don\u0027t see the problem. Let it be broken if they don\u0027t want to accept your string change, right?\n\nTheir code is broken because it expects the default console id. The user could have configured something else.\n\nSo to fix it and retrieve the baudrate we would have to go via the mapper if we do not hardcode any bus name. Then we would also have to decide for which console we want to request that baudrate. So it would be more than a 1 line patch and probably require some knowledge of ```phosphor-host-ipmid```. Like what the value is even used for.\n\nAlternatively we could add a meson option to ```phosphor-host-ipmid``` to configure the console id for that call. You see where i\u0027m going with this.",
      "parentUuid": "1262f6b2_882c0c96",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "627684f4_0a1b7ca1",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-18T21:43:40Z",
      "side": 1,
      "message": "I\u0027m fine if you want to keep the backwards compatible bus-names for the time being until we can figure out how to transition off of them.\n\nMy preference is to _not_ do the split dbus design though.  It\u0027s more work, sets people up for additional bad behaviors (of not using mapper), and is foreign to the way the rest of the processes work.\n\nIf you have to keep the split design in order to maintain backwards compatibility, I\u0027d like to see a remark here that we\u0027re doing it for a time for the backwards compatibility reasons and our intention is to fix up the users and move forward.",
      "parentUuid": "ee865876_1cf85c63",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c64ecae7_25d0c26b",
        "filename": "designs/uart-mux-support.md",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-07-19T01:14:05Z",
      "side": 1,
      "message": "Okay, let\u0027s update the words here to reflect the choice of the unified tree, and get the implementation reworked. Can you please do both, Alexander?",
      "parentUuid": "627684f4_0a1b7ca1",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 445,
        "endChar": 28
      },
      "revId": "66b857d8840f7cb158446a9422c4b948715f1887",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}