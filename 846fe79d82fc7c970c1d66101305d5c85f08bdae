{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8fedcbb8_603d2813",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-01-09T01:43:31Z",
      "side": 1,
      "message": "Man",
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb2570e3_c472dff1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-09T18:07:37Z",
      "side": 1,
      "message": "This is making an edit to an existing design, when for the scope (adding new IPCs to openbmc) it really needs its own design doc, specifically the requirements and alternatives considered sections need filled out that justify fuse, and talk through the full usage of FUSE in the lifecycle of openbmc.\n\nMy \"default\" implementation for a PLDM file transfer feature I would expect to be:\n1. Create a dbus interface that allows requesting a file\n2. Implement DBus interface in pldm\n3. Implement Dbus interface in bmcweb to host the redfish interface (ideally sharing the code we already use for existing dump types)\n\nI\u0027d like to see at least of a minimum analysis of why that path isn\u0027t possible/nonperformant/unmaintainable documented.\n\n\nI really think FUSE would be an interesting addition from a diagnostics perspective, but in terms of hosting an API that the rest of the system can use, we\u0027ve found the fileystem to be lacking in its ability to handle errors, pass concurrent requests, model complex systems, or handle non-blocking IO in a single threaded daemon.  If we have those concerns addressed, ideally that would show up in the new design under impacts, and the design section would call out how those things are managed.\n\nFWIW, firmware updates just moved its mechanism AWAY from the filesystem because of these problems, so proposing we implement something that looks very much like the old firmware update system that we just moved away from should probably be addressed head on in the design doc as well.",
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "956e6742_d2ef29bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-01-09T22:27:19Z",
      "side": 1,
      "message": "Thanks for your feedback. We will feedback after the internal discussion.",
      "parentUuid": "fb2570e3_c472dff1",
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9faf32a2_3e100988",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-02-28T09:18:31Z",
      "side": 1,
      "message": "After reconsideration the effects and looking at new FW update design, we decided to not involve libfuse, but propose a common File.Object D-Bus interface to allow apps to interact with files published by pldmd. Thanks for your feedbacks and information. Can you please help give your opinions about our update to the PS? The PS will now focus on PLDM implementation only, more about the flow to collect those files via Redfish will be in a separate patch after this is direction is approved.",
      "parentUuid": "956e6742_d2ef29bc",
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "050d426d_3f7d0d32",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 5
      },
      "lineNbr": 576,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-09T18:07:37Z",
      "side": 1,
      "message": "This is not the documentation for redfish.  This is the documentation for PLDM.",
      "range": {
        "startLine": 574,
        "startChar": 0,
        "endLine": 576,
        "endChar": 52
      },
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99bc246f_ceee1241",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 5
      },
      "lineNbr": 576,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-02-28T09:18:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "050d426d_3f7d0d32",
      "range": {
        "startLine": 574,
        "startChar": 0,
        "endLine": 576,
        "endChar": 52
      },
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6403d3ad_1174270e",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 5
      },
      "lineNbr": 592,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-09T18:07:37Z",
      "side": 1,
      "message": "Remove.  Task service versus normal call is an implementation detail that already exists in bmcweb.  We\u0027re not going to redesign TaskService as part of this design.",
      "range": {
        "startLine": 587,
        "startChar": 0,
        "endLine": 592,
        "endChar": 0
      },
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d8c432a_24af6741",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 5
      },
      "lineNbr": 592,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-02-28T09:18:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6403d3ad_1174270e",
      "range": {
        "startLine": 587,
        "startChar": 0,
        "endLine": 592,
        "endChar": 0
      },
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e473faba_9382b135",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 5
      },
      "lineNbr": 618,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-09T18:07:37Z",
      "side": 1,
      "message": "How does FUSE communicate to bmcweb?  bmcweb specifically can\u0027t do blocking io calls today without blocking other connections (see COMMON_ERRORS.md), of which a filesystem read would be a blocking call to FUSE.\n\nIf you plan to implement a solution to this (threads, uring, etc) that really should be discussed in a patchset.",
      "range": {
        "startLine": 618,
        "startChar": 0,
        "endLine": 618,
        "endChar": 41
      },
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "549557d8_058f320b",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 5
      },
      "lineNbr": 618,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-02-28T09:18:31Z",
      "side": 1,
      "message": "Removed libfuse involvement from the design.",
      "parentUuid": "e473faba_9382b135",
      "range": {
        "startLine": 618,
        "startChar": 0,
        "endLine": 618,
        "endChar": 41
      },
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba31d2fe_782a496a",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 5
      },
      "lineNbr": 668,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-09T18:07:37Z",
      "side": 1,
      "message": "How about an alternative that just uses the existing DBus mechanisms for IPC?",
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c55ebe7b_5652a83f",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 5
      },
      "lineNbr": 668,
      "author": {
        "id": 1001526
      },
      "writtenOn": "2025-02-28T09:18:31Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ba31d2fe_782a496a",
      "revId": "846fe79d82fc7c970c1d66101305d5c85f08bdae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}