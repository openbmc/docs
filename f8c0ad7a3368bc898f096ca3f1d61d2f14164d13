{
  "comments": [
    {
      "key": {
        "uuid": "f0c84546_620a5e8f",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2019-08-13T17:56:58Z",
      "side": 1,
      "message": "\"Certain browsers apply the HTTP transport protocol by default, \" ?\nSome browsers default to HTTPS-everywhere.",
      "range": {
        "startLine": 16,
        "startChar": 38,
        "endLine": 17,
        "endChar": 18
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e13a503_43f9bcfe",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000085
      },
      "writtenOn": "2019-08-13T17:56:58Z",
      "side": 1,
      "message": "a URL",
      "range": {
        "startLine": 17,
        "startChar": 33,
        "endLine": 17,
        "endChar": 39
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2afa6459_07a011e4",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-09T15:58:47Z",
      "side": 1,
      "message": "I would be happy if all browsers tried HTTPS first.  But, alas, this design must prescribe what happens if we get an HTTP request.",
      "parentUuid": "7e13a503_43f9bcfe",
      "range": {
        "startLine": 17,
        "startChar": 33,
        "endLine": 17,
        "endChar": 39
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1e57828_8fff9504",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-09-24T00:12:46Z",
      "side": 1,
      "message": "What browsers?  The only exception to a browser \"defaulting\" to HTTPS is when the HSTS header is applied correctly, which isn\u0027t really a default.\n\nIs there a common browser (I tried a quick search) that does HTTPS by default?",
      "parentUuid": "f0c84546_620a5e8f",
      "range": {
        "startLine": 16,
        "startChar": 38,
        "endLine": 17,
        "endChar": 18
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee0b3a3e_553e52ba",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-08-14T20:09:19Z",
      "side": 1,
      "message": "Here are much better references:\nRFC 6797 (\"HTTP Strict Transport Security (HSTS)\"), specifically section 7.2 (\"HTTP request type\") in https://tools.ietf.org/html/rfc6797\n\nhttps://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html\n\nBMCWeb follows OWASP practices and implements HSTS.\nhttps://github.com/openbmc/bmcweb/blob/master/DEVELOPING.md#web-security",
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf4fd063_052d3011",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-09-24T00:12:46Z",
      "side": 1,
      "message": "Might want to also add a link to the previous nginx implementation that did this already.",
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d753d8b7_6bb7d409",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-11-01T14:46:28Z",
      "side": 1,
      "message": "Good idea.  The nginx server was brought in by the meta-ibm layer and used as a reverse proxy, serving both BMCWeb and the phosphor-rest APIs.  Use of nginx was discontinued around 2/2019 for the OpenBMC 2.7 release, in favor of BMCWeb which is the only web serverÂ for release 2.7.\nYou can find one of the latest nginx configuration files here.\nhttps://github.com/openbmc/openbmc/blob/837851ae37a67b84f0f8c0fd310d33b5a731cc80/meta-ibm/recipes-httpd/nginx/files/nginx.conf",
      "parentUuid": "bf4fd063_052d3011",
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f762874_9bdc132b",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-09-24T00:12:46Z",
      "side": 1,
      "message": "Why is this one required?  URI \"/\" should be all that\u0027s needed, right?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 16
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b55de4ad_9667a211",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-11-01T14:46:28Z",
      "side": 1,
      "message": "I think so.  I don\u0027t know the answer.",
      "parentUuid": "3f762874_9bdc132b",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 16
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "895a2b1a_49eb314e",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-08-14T20:09:19Z",
      "side": 1,
      "message": "That is, implement HSTS Section 7.2 (\"HTTP request type\").\nPer the RFC, the Strict-Transport-Security HTTP Response Header Field should not be provided when the transport protocol is HTTP.",
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16b1fedf_fe9ac559",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-09-24T00:12:46Z",
      "side": 1,
      "message": "Replace with 404.  400 is really for requests for endpoints that exist, but had a malformed input.  The endpoints were truly \"not found\" in this case.",
      "range": {
        "startLine": 36,
        "startChar": 29,
        "endLine": 37,
        "endChar": 65
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ab8a121_e586e2f7",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-11-01T14:46:28Z",
      "side": 1,
      "message": "I can agree to that.  In this view, HTTP and HTTPS offer different endpoints.",
      "parentUuid": "16b1fedf_fe9ac559",
      "range": {
        "startLine": 36,
        "startChar": 29,
        "endLine": 37,
        "endChar": 65
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfbda1b0_f2f4a632",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-08-14T20:09:19Z",
      "side": 1,
      "message": "when `s/HTTP redirect/BMCWEB_ENABLE_HTTP_REDIRECT/` is used...",
      "range": {
        "startLine": 40,
        "startChar": 5,
        "endLine": 40,
        "endChar": 18
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf43fb1f_86072f8f",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-09T15:58:47Z",
      "side": 1,
      "message": "More detail is needed:\nOnly HTTP: URIs which exist on the server should be redirected 301 (moved permanently).\nThe HTTP: URIs which don\u0027t exist should get 401 (not found).\nFor example, we don\u0027t want to redirect http://bmc/non/existent/page to https://bmc/non/existent/page only to have https://bmc/non/existent/page return code 401.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 13
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "162cfdc2_f3509f4f",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-09-24T00:12:46Z",
      "side": 1,
      "message": "This section needs waaaaaaaaaaay more detail.  You\u0027ve described the external interfaces pretty well in the requirements.   This section is for \"here\u0027s how I intend to implement this in code\".\n\nSome things I would like to see addressed:\n1. Will you use socket files?  How will we disambiguate http from https sockets?\n2. Which service will handle these requests?\n3. How will we verify the security?\n4. What headers will be required of the HTTP connection (might be more of a requirement, but needs addressed)",
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46e70623_52e724a7",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-11-01T14:46:28Z",
      "side": 1,
      "message": "\u003cYa, we need a better design template\u003e I didn\u0027t get the idea this was for the internal design.  Also, I don\u0027t have anything to contribute here.  :-(",
      "parentUuid": "162cfdc2_f3509f4f",
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77b556e5_191e1a21",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-12-03T20:18:11Z",
      "side": 1,
      "message": "An idea from the email list is to use netcat (nc) as a trivial http server.  The nginx server could be used.\nI would advocate for a new per-connection service  A socket would be listening at port 80 (HTTP) and connected to a netcat-or-nginx-based service.  If the service sees a HTTP request message, it can respond with a 308 permanent redirect and an http message.",
      "parentUuid": "46e70623_52e724a7",
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94b48f38_393d712b",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-09-09T16:35:36Z",
      "side": 1,
      "message": "The question is which URIs to redirect?  Only `/` and `/index.html`?  All Web app URI?  All valid URIs including Redfish APIs?  Or a blanket redirect that does not even look at the URI?\n\nThere are two additional concerns:\n1. We don\u0027t want to encourage users to POST their secret password to create a session via the insecure http protocol.  For example, if we redirected POSTS to http://BMCIP/redfish/v1/SessionService/ to https, then the Redfish user might unknowingly disclose their password every time they create a new session.  We cannot stop them from doing so, but we can help them discontinue this practice if we fail to redirect.\n2. The security vulnerabilities surrounding redirection seem to involve modifying the URL (more than just changing the protocol to https).  The OWASP best practices (https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html and especially https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html#preventing-unvalidated-redirects-and-forwards) suggest we can be safe if we ensure the destination URL is valid.\n\nThat suggests we can safely forward all valid URIs including Redfish APIs (noting that the design of BMCWeb is such that the authorization check will happen as part of the subsequent HTTPS request).",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 4
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "596ea884_29669f82",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-09-24T00:12:46Z",
      "side": 1,
      "message": "Come on.......   You didn\u0027t consider any alternatives?",
      "parentUuid": "94b48f38_393d712b",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 4
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5c6a4fe_b30e474b",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-11-01T14:46:28Z",
      "side": 1,
      "message": "I didn\u0027t consider alternate external designs, and don\u0027t have a good feel for the internal design (that is, the best way to implement this).",
      "parentUuid": "596ea884_29669f82",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 4
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "080b81cb_46d0750b",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-09-24T00:12:46Z",
      "side": 1,
      "message": "Give this a better shot.  I can think of several impacts:\n1. There will be an extra port open in the BMC\n2. There will need to be additions to any test plan\n3. The BMC will now be hosting an unencrypted interface.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 5
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b2ba165_047d4eda",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-11-01T14:46:28Z",
      "side": 1,
      "message": "All good points.",
      "parentUuid": "080b81cb_46d0750b",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 5
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec57796a_7eda483d",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2019-09-24T00:12:46Z",
      "side": 1,
      "message": "Please make a better attempt here:\nWhat browsers are you going to test\nwhat URLs are you going to test\nAre you going to test security at all?\nAre you going to test response headers?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 69
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e4d16f_94f2fcc3",
        "filename": "designs/http-redirect.md",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-11-01T14:46:28Z",
      "side": 1,
      "message": "In general, the existing HTTPS tests for the items listed should be adapted (copied and modified) to test the HTTP interface.",
      "parentUuid": "ec57796a_7eda483d",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 69
      },
      "revId": "f8c0ad7a3368bc898f096ca3f1d61d2f14164d13",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}