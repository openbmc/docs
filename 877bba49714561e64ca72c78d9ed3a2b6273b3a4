{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a5aaefa_ad8cb5ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-14T22:02:13Z",
      "side": 1,
      "message": "While I agree with some of the checks enabled in this file, I don\u0027t see how checking this duplicate into the docs repo does anything but cause more chaos.\n\nMy recommendation for a path forward would be to enable one check that can be universally applied, then start pushing patches to add it to the various repos in the project.  Once a majority of those projects are tidy enabled (or are at least in review), we can update the existing file with that one check.\n\nFWIW, this is essentially what I\u0027ve been doing over time as I get spare cycles, starting with bmcweb, then going to EM, dbus-sensors, etc.",
      "revId": "877bba49714561e64ca72c78d9ed3a2b6273b3a4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "104bc690_91c5c892",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-15T04:39:48Z",
      "side": 1,
      "message": "Thanks. I am also going same direction. Additionally added  category name in the file , to indicate what are the clang-tidy checks applicable for the C++ . This one need inputs. That will help to developers , where to start. Currently all the category is disabled. \nIn future the after fixing the issues config file is going to be some thing like category enabled and only failing one disabled kind. This will help to keep concise version of .clang-tidy , and avoid unsupported checks in the newer version if any.\n\n\"bugprone-*,\n- bugprone-branch-clone,  ( failed one only added, that will help users which one need to enable.\"",
      "parentUuid": "1a5aaefa_ad8cb5ca",
      "revId": "877bba49714561e64ca72c78d9ed3a2b6273b3a4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b864f581_2f90c760",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-03T21:29:14Z",
      "side": 1,
      "message": "\u003e I don\u0027t see how checking this duplicate into the docs repo does anything but cause more chaos.\n\nYou continue to ignore that this file is a duplicate.  I won\u0027t comment any further until you\u0027ve resolved how you\u0027re going to merge this patch with the existing.",
      "parentUuid": "104bc690_91c5c892",
      "revId": "877bba49714561e64ca72c78d9ed3a2b6273b3a4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b7a9ed1_b1174749",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-03T21:29:14Z",
      "side": 1,
      "message": "I\u0027m going to check out of this patch.  As-written, I don\u0027t think _this patch_ moves clang-tidy forward on the project and would be an active step back for the repos I maintain, which are in the majority of the currently tidy-enabled repos on the project.  I\u0027ve made my suggestions on how I would roll out something like this, and been ignored.  The existing common file with one check STILL hasn\u0027t been rolled out to the project.  I will fully admit that part of this might be from having to triage VERY broken tidy builds last week and calls for help didn\u0027t get a lot of support.  I think there\u0027s one patch of Myungs that merged in bmcweb.\n\nJayanth, to be honest, I don\u0027t really trust you\u0027re interested in rolling this out or participating with the rest of the project, especially given you\u0027re _still_ duplicating the config file that was already proposed and accepted, without even acknowledging it.",
      "revId": "877bba49714561e64ca72c78d9ed3a2b6273b3a4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f99c1ce4_2bd31648",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2025-02-04T08:27:44Z",
      "side": 1,
      "message": "Since we are deviating from the initial direction, I don\u0027t see any added value in continuing this patch set. Instead, I would like to get feedback on an existing review that has already been pushed: https://gerrit.openbmc.org/c/openbmc/ipmi-fru-parser/+/76817/3/.clang-tidy. In this review, I added recommended categories to help users understand which categories OpenBMC is interested in, beyond enabling a simple check to verify if clang-tidy support is fully enabled as recommended by the team. If necessary, we can update the existing cpp-style document and  remove these updates added as part of this commit.",
      "parentUuid": "5b7a9ed1_b1174749",
      "revId": "877bba49714561e64ca72c78d9ed3a2b6273b3a4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}