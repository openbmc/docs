{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4e53bf40_bf86feb5",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-09-06T21:18:44Z",
      "side": 1,
      "message": "a leak?   missing detector?",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ea5742e_856ab7d5",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-11T18:25:49Z",
      "side": 1,
      "message": "I am specifically referring to a leak in conceptual terms, added some info on value for better clarification.",
      "parentUuid": "4e53bf40_bf86feb5",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9095d243_a1c44240",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-19T02:42:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ea5742e_856ab7d5",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12ed2ece_778f0b8d",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-09-06T21:18:44Z",
      "side": 1,
      "message": "digital or discrete?",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "097da0ea_a66ba6e7",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-11T18:25:49Z",
      "side": 1,
      "message": "Added some info on value for better clarification.",
      "parentUuid": "12ed2ece_778f0b8d",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8bbdc88_cdaa0998",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-09-06T21:18:44Z",
      "side": 1,
      "message": "the detector is to enable taking action vs taking action such as closing a valve right?\n\noh it looks like you are describing proposed actions to take when monitoring but didn\u0027t transition the requirements to be a monitoring application.\n\nafter reading the complete file it seems like you are combining the monitoring exposing the state of the sensor with the reaction such as initiating power off.",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5335cfd1_b1a15328",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-11T18:25:49Z",
      "side": 1,
      "message": "These are generic requirements and not in terms of specific implementation details. The design maps these requirements to how they would be fulfilled.",
      "parentUuid": "e8bbdc88_cdaa0998",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e260e3f5_1c9be2d1",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 37,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-19T02:42:26Z",
      "side": 1,
      "message": "Updated this requirement lately. Let me know if there are still any questions.",
      "parentUuid": "5335cfd1_b1a15328",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9b52fd8_ea2e2d76",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-09-06T21:18:44Z",
      "side": 1,
      "message": "this would be health of the sensor?",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2b2462e_885b35c4",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-11T18:25:49Z",
      "side": 1,
      "message": "Yes. This is covered in the D-Bus interfaces section.",
      "parentUuid": "e9b52fd8_ea2e2d76",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f390433_0980e4df",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-09-06T19:18:26Z",
      "side": 1,
      "message": "As mentioned in https://gerrit.openbmc.org/c/openbmc/docs/+/74022, that design and this design are pretty similar. \n\nI think this cable data would fit in entity-manager, in the config file of whichever FRU the GPIO is on.  You\u0027d need some daemon to do the presence detect and put something onto D-Bus that EM could probe, so it could create the cable inventory interfaces.",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69f8f344_048a11e8",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-10T00:49:09Z",
      "side": 1,
      "message": "\u003e I think this cable data would fit in entity-manager, in the config file of whichever FRU the GPIO is on.  \n\nYes, this design had a dependency on another design for this particular aspect. My ultimate goal was to move the cable GPIO information into the entity manager (as it will be done by other design) and only keep the Inventory Item-related dependency in this configuration. I can update this config to reflect that.\n\n\u003e You\u0027d need some daemon to do the presence detect and put something onto D-Bus that EM could probe, so it could create the cable inventory interfaces.\n\nThat would be handled by https://gerrit.openbmc.org/c/openbmc/docs/+/74022, i.e. it would do presence detect for fixed hardware inventory (for example gpio for all cables) and create inventory interfaces. The purpose of this daemon is to check the inventory against the runtime configuration (for example, what cables are expected to be connected) and generate alerts if any items are missing.",
      "parentUuid": "4f390433_0980e4df",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ebe999c_050ed401",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-11T18:09:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69f8f344_048a11e8",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26ca6bf4_b12ee18a",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-09-06T19:18:26Z",
      "side": 1,
      "message": "Ignoring the Target keyword for a moment, I think this could all be defined in entity-manager as it describes hardware.  Assuming EM ends up creating the cable object, you could use the same \u0027physical topology\u0027 (there\u0027s a design doc for it) tricks to automatically add associations.\n\nThe major reason is the JSON config file method may break when you have to support more than 1 system out of the same flash image.\n\nAs for the target, in EM you may not want to hardcode a target name, but you could just make it into an enum, like: Action: HardPowerOffRack.",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c685473c_751d2d0d",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-10T00:49:09Z",
      "side": 1,
      "message": "\u003e Ignoring the Target keyword for a moment, I think this could all be defined in entity-manager as it describes hardware.  Assuming EM ends up creating the cable object, you could use the same \u0027physical topology\u0027 (there\u0027s a design doc for it) tricks to automatically add associations.\n\nYes, as you mentioned my intent was to move this to EM as well once the gpio based HW inventory design was finalized. But i am fine to make that change now. Will add details on what Detector related configuration can be exposed based on cable PROBES, although cable DBUS objects for PROBE conditions will be defined by the GPIO based HW inventory design. \n\n\u003e \n\u003e The major reason is the JSON config file method may break when you have to support more than 1 system out of the same flash image.\n\nSounds good.\n\n\u003e \n\u003e As for the target, in EM you may not want to hardcode a target name, but you could just make it into an enum, like: Action: HardPowerOffRack.\n\nSure.",
      "parentUuid": "26ca6bf4_b12ee18a",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aef6ebf_62a66917",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-11T18:09:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c685473c_751d2d0d",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "618f0904_cd623099",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-09-06T21:18:44Z",
      "side": 1,
      "message": "the cooling zone?   I\u0027d expect the detector to establish the severity.   the impact of loosing the cooling zone and isolatio might drive how quickly you initiate shutdown/timeout or hard off )if you even have shutoff control)",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e2e07e6_1348e08f",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-11T18:25:49Z",
      "side": 1,
      "message": "Normally, detectors are placed in certain vicinity mechanically to create zones. \n\nThe second approach is just an alternative. The first approach is the one which will be used and let client decide on how they want to treat severity, they can either rely on zones or specific detectors.",
      "parentUuid": "618f0904_cd623099",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c558ef15_0a16f403",
        "filename": "designs/liquid-leak-detection.md",
        "patchSetId": 8
      },
      "lineNbr": 184,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-19T02:42:26Z",
      "side": 1,
      "message": "Updated the design lately, so this might not apply. Please check it and let me know. Thanks",
      "parentUuid": "2e2e07e6_1348e08f",
      "revId": "f45d90dec72f11b38d13572520176bf91040691b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}