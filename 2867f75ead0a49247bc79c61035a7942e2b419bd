{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ffcba72a_db157bd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-10-17T06:14:21Z",
      "side": 1,
      "message": "Have some comments/questions to understand the PLDM/Non-PLDM flow.",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ddebedb_28f0e5ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-28T06:06:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffcba72a_db157bd7",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1567ed43_2370ba47",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 201,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-10-17T06:14:21Z",
      "side": 1,
      "message": "How PLDM packages are to be handled is not very clear to me. I think there\u0027s some information in the \"Multi part Images\" section, but that doesn\u0027t answer all of the following questions I have:\n\n1) It seems like the design expects a RedfishTargetURI must be provided by the user. However, that is not mandatory and would likely not be provided when the FW package is PLDM based. How does Bmcweb connect to the PLDM service in this case. Since PLDM can determine existing SW versions based on the Type 5 spec, it could create multiple SW versions based on how many PLDM FW endpoints are found.\n- Is it the case that when no Target URI is provided, bmcweb will invoke StartUpdate on all services that implement this inteface and it is up to the service to determine whether the package is relevant or not (that sounds risky)?\n\n2) How about the case where the the PLDM FW package has component images for PLDM and non-PLDM devices (we do this at Nvidia and I believe are not the only ones doing this) - which service is supposed to parse out the PLDM and non-PLDM components (pldmd/bmcweb)? It seems like the EM confgs below help in this regard, but not sure how.",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44797a1a_9252f192",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 201,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-28T06:06:28Z",
      "side": 1,
      "message": "\u003e How PLDM packages are to be handled is not very clear to me. I think there\u0027s some information in the \"Multi part Images\" section, but that doesn\u0027t answer all of the following questions I have:\n\u003e \n\u003e 1) It seems like the design expects a RedfishTargetURI must be provided by the user. However, that is not mandatory and would likely not be provided when the FW package is PLDM based. How does Bmcweb connect to the PLDM service in this case. \u0027\n\nThe TargetURI needs to be supplied even for devices to be updated by PLDMd service.\n\n\u003e Since PLDM can determine existing SW versions based on the Type 5 spec, it could create multiple SW versions based on how many PLDM FW endpoints are found.\n\nI suppose you are referring to the downstream devices discovered by PLDMd. If yes, then yes, the SW versions for downstream devices will be created by PLDMd based on discovered devices.\n\n\u003e - Is it the case that when no Target URI is provided, bmcweb will invoke StartUpdate on all services that implement this inteface and it is up to the service to determine whether the package is relevant or not (that sounds risky)?\n\u003e \n\u003e 2) How about the case where the the PLDM FW package has component images for PLDM and non-PLDM devices (we do this at Nvidia and I believe are not the only ones doing this) - which service is supposed to parse out the PLDM and non-PLDM components (pldmd/bmcweb)? It seems like the EM confgs below help in this regard, but not sure how.\n\nThe FW package will be parsed by the CodeUpdater daemon and not BMCWeb. Depending upon the TargetURI, BMCWeb will send the Update request to the appropriate backend CodeUpdater daemon.",
      "parentUuid": "1567ed43_2370ba47",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ddc8a90_b41bf39a",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 201,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-10-28T07:21:35Z",
      "side": 1,
      "message": "1) I think we need a design that works without target URIs as well. We can propose that as a follow up - Tom Joseph/I will propose that.\n\n2) Consider a case where the FW package has 5 images - 3 PLDM and 2 non-PLDM. So in this case there would be three code updaters (1 PLDM and 2 for the non-PLDM). If my understanding correct so far? If so:\n\na) Will the Redfish user have to supply 5 Target URIs?\n\nb) Since three target URIs correspond to PLDM devices, will bmcweb make 3 start update D-Bus calls to PLDMD? If not, how will it consolidate and know to make only one call to PLDMD?\n\nc) Will Bmcweb use (yet to be added?) libpldm APIs for the FW update package parsing and splitting up into component image sections?",
      "parentUuid": "44797a1a_9252f192",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd246a6b_2aa29329",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 201,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-10-28T07:50:30Z",
      "side": 1,
      "message": "Also, 3) If Bmcweb is not parsing the package and the package has several PLDM + Non-PLDM images, will Bmcweb send the whole package to all code updaters? In that case the EM config becomes pointless. I think some amount of package parsing must be performed by bmcweb (using libpldm maybe).",
      "parentUuid": "4ddc8a90_b41bf39a",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4fcb1a8_4e5e4a69",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 201,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-11-07T18:20:34Z",
      "side": 1,
      "message": "This has been discussed via discord https://discord.com/channels/775381525260664832/778790638563885086/1303434176023892089, so marking this resolved. Please post any further general question related to design on discord as this PR is specifically for using PLDM image packaging for non-PLDM devices.",
      "parentUuid": "bd246a6b_2aa29329",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f63eb150_c2fa930f",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 220,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-10-17T06:14:21Z",
      "side": 1,
      "message": "How are the supposed to be used? Can you give an example for PLDM package containing both PLDM and non-PLDM component images?",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea08603a_5df67780",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 220,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-28T06:06:28Z",
      "side": 1,
      "message": "\u003e How are the supposed to be used? Can you give an example for PLDM package containing both PLDM and non-PLDM component images?\n\nPLDMd handles update for all PLDM devices. Since, PLDM image packaging is a standard and it is being used for other(non-PLDM) devices as well. Client needs to provide the appropriate TargetURIs to all Targets to which the image applies and BMCWeb will forward the request to appropriate backend CodeUpdater daemon (PLDMd and other non-PLDMd backends).",
      "parentUuid": "f63eb150_c2fa930f",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56039181_bda2a72c",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 220,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-11-07T18:20:34Z",
      "side": 1,
      "message": "Discussed via discord https://discord.com/channels/775381525260664832/778790638563885086/1303434176023892089, so marking this resolved.",
      "parentUuid": "ea08603a_5df67780",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "046febff_a9861cdc",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-10-17T06:14:21Z",
      "side": 1,
      "message": "configurations or component images?",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a37b9c3_ad8af520",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-28T06:06:28Z",
      "side": 1,
      "message": "Configurations, for example, CodeUpdater for CPLD will handle firmware EM configurations related to CPLDs.",
      "parentUuid": "046febff_a9861cdc",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "727c5895_64c5aaa6",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-11-07T18:20:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a37b9c3_ad8af520",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80ff857e_99611c32",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 242,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-10-17T06:14:21Z",
      "side": 1,
      "message": "What is the reason to do this mapping? Why did we pick only two descriptors from PLDM Type 5?",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ca63f0e_d8b0853c",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 242,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-10-28T06:06:28Z",
      "side": 1,
      "message": "\u003e What is the reason to do this mapping? Why did we pick only two descriptors from PLDM Type 5?\n\nFor non-PLDM devices these 2 fields seems to be sufficient to perform the image validation, as CodeUpdater daemon for non-PLDMd will use these values for image validation.\nFor PLDMd these values (from EM configuration) are not applicable as they would be fetched from downstream PLDM devices and used by PLDMd for image validation.",
      "parentUuid": "80ff857e_99611c32",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb0af89a_a38f0330",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 242,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2024-10-28T07:21:35Z",
      "side": 1,
      "message": "We can add more params as need be. We use UUID at Nvidia for the non-PLDM components.",
      "parentUuid": "7ca63f0e_d8b0853c",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a28896b9_aeb408b6",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 242,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-11-07T18:20:34Z",
      "side": 1,
      "message": "Yes, you can use more standard descriptors as you see fit. I have updated description mentioning that this is bare minimum required.",
      "parentUuid": "bb0af89a_a38f0330",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "148e3aa4_d209e126",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 242,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-11-08T00:26:37Z",
      "side": 1,
      "message": "@Deepak, I suppose you are referring to \"0x0002 – UUID\" in PLDM FW spec? If yes, then how is the UUID used in case of non-PLDM components? In mean since there is no downstream device to query from where do you get UUID for non-PLDM device to match the FW image?",
      "parentUuid": "a28896b9_aeb408b6",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfb715c2_1b28fc45",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 242,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2024-12-02T15:21:31Z",
      "side": 1,
      "message": "\u003e I suppose you are referring to \"0x0002 – UUID\" in PLDM FW spec?\n\nYes\n\n\u003e In mean since there is no downstream device to query from where do you get UUID \n\u003e for non-PLDM device to match the FW image?\n\nThe devices that can be updated in a non-PLDM could be programmed with UUID at the time of manufacturing. Another example, if I classify the OCP recovery as non-PLDM updater, DEVICE_ID supports a bunch of Initial Descriptor Type (PCI, IANA, UUID etc)\nhttps://www.opencompute.org/documents/ocp-recovery-document-1p0-final-1-pdf",
      "parentUuid": "148e3aa4_d209e126",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7f94244_f781687f",
        "filename": "designs/code-update.md",
        "patchSetId": 5
      },
      "lineNbr": 242,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-12-27T01:43:29Z",
      "side": 1,
      "message": "Thanks for the information.\n\nAs mentioned above, you can add more parameters to EM configuration as per your need. I am marking this as resolved, let me know if there are any other questions.",
      "parentUuid": "cfb715c2_1b28fc45",
      "revId": "2867f75ead0a49247bc79c61035a7942e2b419bd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}