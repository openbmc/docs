{
  "comments": [
    {
      "key": {
        "uuid": "4eeebbc0_405b7621",
        "filename": "designs/mctp.md",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2020-03-05T06:57:35Z",
      "side": 1,
      "message": "Since device discovery mechanisms can vary across bindings, I think this needs to be part of MCTP bindings (point 3 above)\n\nWe can have an api exposed by the libmctp to trigger a device discovery by MCTP OR Demux daemon and it returns the list of MCTP capable devices.",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 122,
        "endChar": 55
      },
      "revId": "389202ea57435318abf157da33c7ce3fe9b0c7a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0587f22a_5a96a33d",
        "filename": "designs/mctp.md",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-03-05T09:10:13Z",
      "side": 1,
      "message": "This is to support when \u0026 how to run the low level physical medium. i.e. Calling the things in loop etc will be done from here and then to advertise discovered devices in the daemon etc. \n\nWill rephrase accordingly",
      "parentUuid": "4eeebbc0_405b7621",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 122,
        "endChar": 55
      },
      "revId": "389202ea57435318abf157da33c7ce3fe9b0c7a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "320d724b_aa78d3a0",
        "filename": "designs/mctp.md",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2020-03-05T06:57:35Z",
      "side": 1,
      "message": "Might need another parameter to differentiate raw payload vs fd.",
      "range": {
        "startLine": 308,
        "startChar": 67,
        "endLine": 308,
        "endChar": 77
      },
      "revId": "389202ea57435318abf157da33c7ce3fe9b0c7a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3485b20c_6f794743",
        "filename": "designs/mctp.md",
        "patchSetId": 8
      },
      "lineNbr": 308,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-03-05T09:10:13Z",
      "side": 1,
      "message": "yes. Thought the param should be fine to indicate the same and cover the real in the interface",
      "parentUuid": "320d724b_aa78d3a0",
      "range": {
        "startLine": 308,
        "startChar": 67,
        "endLine": 308,
        "endChar": 77
      },
      "revId": "389202ea57435318abf157da33c7ce3fe9b0c7a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de728f7b_00563937",
        "filename": "designs/mctp.md",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2020-03-05T06:57:35Z",
      "side": 1,
      "message": "Same here; might need another parameter to differentiate raw payload v/s fd.",
      "range": {
        "startLine": 309,
        "startChar": 3,
        "endLine": 309,
        "endChar": 78
      },
      "revId": "389202ea57435318abf157da33c7ce3fe9b0c7a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8c04d3d_c35f68ba",
        "filename": "designs/mctp.md",
        "patchSetId": 8
      },
      "lineNbr": 309,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-03-05T09:10:13Z",
      "side": 1,
      "message": "agree",
      "parentUuid": "de728f7b_00563937",
      "range": {
        "startLine": 309,
        "startChar": 3,
        "endLine": 309,
        "endChar": 78
      },
      "revId": "389202ea57435318abf157da33c7ce3fe9b0c7a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd362234_8cd08d3d",
        "filename": "designs/mctp.md",
        "patchSetId": 8
      },
      "lineNbr": 323,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2020-03-05T06:57:35Z",
      "side": 1,
      "message": "Nit: NVMe-MI",
      "range": {
        "startLine": 323,
        "startChar": 3,
        "endLine": 323,
        "endChar": 7
      },
      "revId": "389202ea57435318abf157da33c7ce3fe9b0c7a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffcfe6d0_3bf20f3e",
        "filename": "designs/mctp.md",
        "patchSetId": 8
      },
      "lineNbr": 323,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-03-05T09:10:13Z",
      "side": 1,
      "message": "Proper one should be NVM Express Management Messages over MCTP. \nWill change to NVMeMmOverMCTP",
      "parentUuid": "cd362234_8cd08d3d",
      "range": {
        "startLine": 323,
        "startChar": 3,
        "endLine": 323,
        "endChar": 7
      },
      "revId": "389202ea57435318abf157da33c7ce3fe9b0c7a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}