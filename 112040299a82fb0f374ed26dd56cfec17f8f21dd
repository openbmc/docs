{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "60399402_8c70cb85",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 281,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "These are going to be done only with a bitbake PACKAGECONFIG and/or MACHINEFEATURE, right?",
      "range": {
        "startLine": 280,
        "startChar": 0,
        "endLine": 281,
        "endChar": 39
      },
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05816778_6885237a",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 287,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "I don\u0027t really like the way this is implemented.  It means that any service we(you?) decide should be active-bmc-only has to be added to the phosphor-state-manager recipe and/or bbappend.  Shouldn\u0027t we come up with a mechanism that this can be done in the source recipe?  Seems like this is a relatively simple bbclass and/or extension to the obmc-phosphor-systemd.bbclass?",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 287,
        "endChar": 39
      },
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f65d57f8_a4476781",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 316,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "phosphor-led-sysfs too?",
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "666b30be_694e498b",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 320,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "How do you stop entity-manager from probing your FRU EEPROMs behind the FSI? Is this handled by kernel bind calls preventing those i2c busses from showing up until it is active?\n\nDo you even use entity-manager here?  I didn\u0027t think entity-manager could handle the openpower-fru-parser content?",
      "range": {
        "startLine": 319,
        "startChar": 0,
        "endLine": 320,
        "endChar": 37
      },
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1df43ac4_217c54c0",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 356,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "What does \"BMC\" mean in column 3?  You can\u0027t have properties that are only on certain instances; they are either there or not.",
      "range": {
        "startLine": 355,
        "startChar": 0,
        "endLine": 356,
        "endChar": 100
      },
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f3ec2cd_d177876d",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 376,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "So?  Why does that mean you can\u0027t allow initiating a failover from the active?",
      "range": {
        "startLine": 375,
        "startChar": 65,
        "endLine": 376,
        "endChar": 63
      },
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f6a2e11_bf9890b8",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 394,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "This seems a little strange to me.  You have properties in the phosphor-state-manager application that are populated by the \"RBMC app\"?  Why aren\u0027t they just hosted there?  Generally having state written by another process isn\u0027t ideal.",
      "range": {
        "startLine": 393,
        "startChar": 0,
        "endLine": 394,
        "endChar": 62
      },
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa8992de_328982ce",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 397,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "What is \"SW App\"?",
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fea1189_17634bb5",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 552,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "nit: It\u0027s just webui-vue.",
      "range": {
        "startLine": 552,
        "startChar": 2,
        "endLine": 552,
        "endChar": 11
      },
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ee4b14d_cf81fa05",
        "filename": "designs/redundant-bmc.md",
        "patchSetId": 5
      },
      "lineNbr": 563,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-26T22:37:42Z",
      "side": 1,
      "message": "What is a \"log ID\"?\n\nHow do you handle logs deleted from one BMC being deleted from the other?",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 563,
        "endChar": 69
      },
      "revId": "112040299a82fb0f374ed26dd56cfec17f8f21dd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}