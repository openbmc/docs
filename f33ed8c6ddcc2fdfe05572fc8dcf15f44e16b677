{
  "comments": [
    {
      "key": {
        "uuid": "02b40f2c_a131ba81",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-05-12T02:26:04Z",
      "side": 1,
      "message": "Please rename file.  \"monitor\" is spelled wrong (nonitor).  Should probably be explicit that this is a bmc-health-monitor in the file name.",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af530716_28699570",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 4,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-05-12T02:26:04Z",
      "side": 1,
      "message": "nit: we haven\u0027t been particularly formal about this field but this looks different from what anyone else has done to identify their IRC handle.  I\u0027d suggest we use the same format as the MAINTAINERS which would be \u003cvijay!\u003e",
      "range": {
        "startLine": 4,
        "startChar": 37,
        "endLine": 4,
        "endChar": 43
      },
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01e3ca27_95c17669",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-05-12T02:26:04Z",
      "side": 1,
      "message": "nit: There was mentioned some desired to do these in ISO 8601 date format:\n\n2020-05-04",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa2d6354_4e5f743e",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-05-12T02:26:04Z",
      "side": 1,
      "message": "Can we get some more \"why\" here?  Why do we consider \"CPU usage\" a metric of BMC health?  Why does high utilization matter?  etc.",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc864596_61cfeb31",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-12T08:43:55Z",
      "side": 1,
      "message": "Why not let the kernel\u0027s OOM management handle this?",
      "range": {
        "startLine": 14,
        "startChar": 7,
        "endLine": 14,
        "endChar": 25
      },
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "648e6386_950df19c",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-12T08:43:55Z",
      "side": 1,
      "message": "Do you also foresee this being reported over Redfish (logservices for eg)?",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acd109bf_4eacd00c",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-12T08:43:55Z",
      "side": 1,
      "message": "do we have concrete use-cases here? why would other apps need this data?",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 61
      },
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0ebced8_acc99efc",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-05-12T02:26:04Z",
      "side": 1,
      "message": "Why not use existing Sensor interface definitions?",
      "range": {
        "startLine": 31,
        "startChar": 16,
        "endLine": 32,
        "endChar": 53
      },
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c985f35_69937925",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-05-12T02:26:04Z",
      "side": 1,
      "message": "Can we define what a \"window_size\" is?",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4df5106_eeda292d",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-05-12T02:26:04Z",
      "side": 1,
      "message": "I\u0027d like if we come up with a more consistent way to express these.  Is this just \"reboot.target\"?  Or is \"reboot\" some magic string?  How does someone identify what the possible values are here?",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6acffeb6_bbb27789",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-12T08:43:55Z",
      "side": 1,
      "message": "can\u0027t systemd do this based on cpu limits in an override file?",
      "range": {
        "startLine": 48,
        "startChar": 13,
        "endLine": 48,
        "endChar": 19
      },
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e16fa023_0d053845",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-05-12T08:43:55Z",
      "side": 1,
      "message": "How about using something like \u0027top\u0027 (for the logging part at least)? \n\nI wonder if systemd has something to offer, for eg using slices or resource-control?\n\nHow about https://github.com/lightyang/monit?",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2df64840_aa5415cc",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2020-05-12T23:45:51Z",
      "side": 1,
      "message": "For \"how to stage the health data\" FFDC stores dumps as files for transferring out of the BMC (rather than DBus objects), so that might be considered an alternative (for staging) too? This file-based approach may also be \"upgraded\" to file-based databases or structured files, and can be compressed, stored in the memory, partially streamed and synced with the host or some remote entity, or be managed by phosphor-ipmi-blobs-binarystore.\n\nFor \"how to get the data out of the BMC\" perhaps IPMI is needed when, for example, RedFish is not yet deployed. So IPMI might be another alternative for data transfer?",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92eb0a32_1fd1de6f",
        "filename": "designs/health-nonitor.md",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2020-05-12T23:45:51Z",
      "side": 1,
      "message": "I guess the impact may be divided into 2 parts, and it looks very similar to the situation with sensors:\n1) maintaining the DBus objects and\n2) collecting the health data.\n\nFor 1) the cost should be very low according to known benchmarking results and the fact that sensor daemons are already updating sensor-related DBus objects many times per second on the BMC right now.\nThe cost of 2) might depend on the cost of generating that particular monitoring data, and the cost might be high or low. For example: a high-cost metric would be \"list all files on the BMC whose size is larger than 500 KB\" or \"iterate through system logs and count the number of error messages that match a particular regex\". Fortunately the 2-step nature of the DBus object-based design means the delay would not affect the reading of the data but just the update; plus, the cost can be mitigated by designing carefully (such as allowing levels of detail, down-sampling) and allowing the metric to be updated less frequently. Or if the metric is an aggregate it may be easily updated by computing the deltas and not full updates, just like search indices trade rebuild cost with loss of freshness resulting from partial updates?\n\nSo overall the impacts should be small, if the health metrics are easy to collect.",
      "revId": "f33ed8c6ddcc2fdfe05572fc8dcf15f44e16b677",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}