{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3483b9d1_67c2b77c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "Hi Quang, thanks for iterating on this. I\u0027ve made some further comments.",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ae7f45e_46e4d7d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "Thank you. Added you as the contributor.",
      "parentUuid": "3483b9d1_67c2b77c",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e29608_9b33e410",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "You need a space after the `,`",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 9
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06438077_a9c7eb25",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "19e29608_9b33e410",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 9
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d035d7f_b1df1ec2",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "Thanks for adding the schema and an example. Great work.",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "365998bf_706d2572",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6d035d7f_b1df1ec2",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bb95980_c8001fad",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "I think this needs some refinement. The efficient way for this to be correct is that bmcweb register for `InterfacesAdded`, `InterfacesRemoved` and `NameOwnerChanged` signals from EntityManager to learn of new `HostInterface` configurations, and then query for any that have currently been exposed. This yields correctness in the face of arbitrary restart ordering of EntityManager and bmcweb.",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 153,
        "endChar": 45
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0a09967_db3f40f2",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1bb95980_c8001fad",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 153,
        "endChar": 45
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc5ec7b7_0af87fd2",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 160,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "Can you unpack this a bit further? Bootstrap accounts have an impact on platform security, so it\u0027s essential that their authentication is correct. The implementation bears some discussion.\n\nSo the intent is to depend on membership in specific subnets? Another approach might be to [create interface-specific sockets using `SO_BINDTODEVICE`](https://www.man7.org/linux/man-pages/man7/socket.7.html) and only allow the bootstrap accounts on those sockets (the latter feels to me like the most direct path to correctness, as it\u0027s the interface that\u0027s defined as associated with the host in the EM config).\n\nAlso, arguably, it should only be possible to create these accounts through something that\u0027s known to be a host interface. Are there changes required to `phosphor-host-ipmid` to manage that, if e.g. `phosphor-net-ipmid` is enabled?",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 160,
        "endChar": 8
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47d5b209_56196350",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 160,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "I intent not to depend on specific subnets but the IP address of the host interface itself and I do not see any use case which this method may expose any security risk. \n\nThe IP address of the host interface is only one for each host, it may change but it will be bond to the a specific ethernet interface or the MAC address which is already known in advance when we build the system.\n\nSince we read the IP address of the host interface by extracting the ethernet interface from `entity-manager` configuration and use that ethernet interface to search for its IP address via `xyz.openbmc_project.Network`. So even the IP address changes, we can still update it and use the correct host interface IP address.",
      "parentUuid": "fc5ec7b7_0af87fd2",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 160,
        "endChar": 8
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcb5e499_92c318a1",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 160,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-04T19:50:48Z",
      "side": 1,
      "message": "Made the same comment as @arj.\n\n\u003e I do not see any use case which this method may expose any security risk.\n\nWhat if the host interface has the same ip address as a non host interface?  That seems like a security risk.\n\n\u003e it may change but it will be bond to the a specific ethernet interface or the MAC address which is already known in advance when we build the system.\n\nThis isn\u0027t documented anywhere in your design.  When the system is built, how will those be assigned?",
      "parentUuid": "47d5b209_56196350",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 160,
        "endChar": 8
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "733398ab_d22152a7",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "So I suspect the work for this is actually in phosphor-user-manager, to listen to the signals emitted by phosphor-state-manager or x86-power-control.",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 169,
        "endChar": 53
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efa95b80_b42d4ce3",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "Acknowledged. Yes, `phosphor-user-manager` needs to listen to signals from `phosphor-state-manager` and `BMCWeb` to delete bootstrap account.",
      "parentUuid": "733398ab_d22152a7",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 169,
        "endChar": 53
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2d65445_6cedef34",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-04T19:50:48Z",
      "side": 1,
      "message": "Why is this necessary?  Can\u0027t the next call to SetBootStrapAccount just overwrite the credentials from the last boot?  Deleting the bootstrap account on shutdown would imply that we don\u0027t think the password itself is secure.  If we think that, we need to make it secure by design, not by deleting the password from an interface.\n\nI vote we just remove this from the design.  Detecting a host reset in a secure way that can\u0027t be faked by software is non-trivial, and doesn\u0027t add any value in this case, given that the host will likely be up for a long time, and therefore credentials will be valid for a long time.  Invalidating them on shutdown doesn\u0027t add additional security, and makes the solution more complex.",
      "parentUuid": "efa95b80_b42d4ce3",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 169,
        "endChar": 53
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f3c6953_0beceac9",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "Why is this worse than your proposed design?",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "beb9e8a7_d33764b1",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 180,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "Acknowledged. Added more detailed in Patchset 4.",
      "parentUuid": "0f3c6953_0beceac9",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70fd950a_501f0826",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "Why is this worse than your proposed design?",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8c8fe35_a5d28a4f",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "Acknowledged. Added more detailed in Patchset 4.",
      "parentUuid": "70fd950a_501f0826",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdae8b8f_32c301a4",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "Why is this worse than your proposed design? Also, I don\u0027t think this is a specific concern in the face of e.g. systemd\u0027s stable interface naming policies? Not to say someone won\u0027t add a specific udev rule that renames an interfaces, but that\u0027s kinda their fault if they break things that way?",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 186,
        "endChar": 40
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1eaa652_24e9f0b8",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "As I mentioned in comment in PS2, this method added complexity in implementation code but if all reviwers prefer it, I\u0027m ok with that decision.\n\nIf someone does somethings bad to break the system intentionally or inadvertently, that is nothing we can do to prevent; think about the scenario where someone brings down a service and ask why it not work.",
      "parentUuid": "fdae8b8f_32c301a4",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 186,
        "endChar": 40
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45286ecb_e59f6d9d",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-04T19:50:48Z",
      "side": 1,
      "message": "We should just be using systemd BindToDevice here, that way we\u0027re pushing the complexity to systemd to get right, and not relying on mac address or ip address, which might be duplicated between interfaces.  Ideally they wouldn\u0027t be, but if an attacker is trying to get in, they might duplicate them on purpose.",
      "parentUuid": "a1eaa652_24e9f0b8",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 186,
        "endChar": 40
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c061786_f1944537",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-03-29T09:47:31Z",
      "side": 1,
      "message": "Agree, as I mentioned in comments above, we can use `BindToDevice` to bypass using IP address for bootstrap account authentication as you and Andrew suggested.",
      "parentUuid": "45286ecb_e59f6d9d",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 186,
        "endChar": 40
      },
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38181c3e_20fe0411",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-05T03:53:41Z",
      "side": 1,
      "message": "Will this need changes to `phosphor-user-manager` such that we can ask it to delete all users who are members of a specific group?",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2bac76c_aa6ac576",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-20T09:19:22Z",
      "side": 1,
      "message": "Acknowledged. Yes, added this requirement.",
      "parentUuid": "38181c3e_20fe0411",
      "revId": "b84e5cac95d87c82a5fdefdea7940f8cf0cb3ee5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}