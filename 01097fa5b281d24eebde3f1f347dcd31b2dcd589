{
  "comments": [
    {
      "key": {
        "uuid": "a0a397d2_53a081c2",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2020-06-09T19:13:36Z",
      "side": 1,
      "message": "Instead of starting with sensor-correction as the primary use-case, I would go with a pure virtual sensor example airflow which is calculated from the fan speed.",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdaf7dbe_e5178bad",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0a397d2_53a081c2",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01ec8842_3630d39c",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2020-06-09T19:13:36Z",
      "side": 1,
      "message": "Virtual sensor examples:\n1. Airflow - function of Fan RPM reported in units of cubic-feet per second.\n2. Voltage delta between two ADC inputs. When the actual diff is what which should not cross a threshold.\n3. Power consumption when we have Energy/time.\n4. Tiogapass, inlet sensor skews in a cubic(?) way at low fan speeds. We would want to correct these values and have swampd use the corrected values instead of the raw ones read.",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09ad70c6_6d87855e",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01ec8842_3630d39c",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31233887_f8abe1ea",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-06-30T00:56:03Z",
      "side": 1,
      "message": "1. This sensor exists today in dbus-sensors, and has quite a bit of state for handling power state, fans that are dual rotor, and sensor error conditions.  Handling all those states properly in a generic case here would be difficult, if not impossible.\n2. This seems like a specific case that ADCSensor could simply have added to its implementation.  The current ADC sensor takes \"Index\": 0 to define which input to use, \"DiffIndex\": 1 could be added as an optional parameter to support differential mode.  In this way, for the ADCs that actually support differential measurement, ADCSensor can do that in the ADC preamp hardware, instead of relying on software.  In the proposal you\u0027ve given, you\u0027re locked into software only, and you will have unintended noise skew between samples when the readings change rapidly.  Double check with your hardware engineers if back to back samples are clean enough to be compared, and they didn\u0027t intend for you to use the differential mode.\n3. You haven\u0027t defined any integral operators, or defined how you would time bound them for what you would need that to do power consumption measurements from a current monitor.  With that said, I think that\u0027s much better done in code, in the relevant daemon that already knows the sample rate, and can update the value much more accurately.  Also, considering this would likely need to persist somewhere to be accurate between bmc reboots, again, the virtual sensor daemon seems like the wrong place to do doing that.\n4. (trying to remember thermodynamics class from college)  Yep, energy transfer from a flowing liquid is a 3rd order transfer function of the flow rate.  Of all these cases, this seems like the best fit for something like this proposal, but it seems easily solved in code with a declaration of 3 coefficients, as well as sensor names in a config file.  If you did that it would be, better documented (in code), and easier to debug.\n\nFor what it\u0027s worth I think adding code to the appropriate place is much easier in the long run (and more efficient).",
      "parentUuid": "01ec8842_3630d39c",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e7d1c54_3933c5b2",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2020-06-09T19:13:36Z",
      "side": 1,
      "message": "Reword: \"will allow to generate new virtual sensors which are defined to be specific manipulation/function of existing sensors.\"",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "879fcdc3_bd446f9a",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e7d1c54_3933c5b2",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e79a95c9_48fb5f70",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2020-06-09T19:13:36Z",
      "side": 1,
      "message": "eee",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 6
      },
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2312c178_523d1038",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-06-30T00:56:03Z",
      "side": 1,
      "message": "try a little bit here.  Some references on existing solutions?  A link to the wiki page for how fluid transfer is the cubic of the flow rate?",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c48d027_af63fd58",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2020-06-24T17:12:58Z",
      "side": 1,
      "message": "Do we consider chaining virtual sensors? For example physical sensor 1 and 2 generates virtual sensor 1 that we need, and we also need virtual sensor 2 generated from virtual sensor 1 and physical sensor 3. If we don\u0027t consider chaining at the moment, can we make a note to architecture the code so that it would be easy to be extended for chaining?",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6eed6ba_3fc09954",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "Every sensors would be calculated from it\u0027s give path of it\u0027s parameter. And I don\u0027t see any reason for chaining not work. It should work as expected.",
      "parentUuid": "0c48d027_af63fd58",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c33c3794_55ef08d9",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2020-06-26T23:25:33Z",
      "side": 1,
      "message": "If the chaining is POR in this design doc, we\u0027d probably better explicitly specify it; or deny it as POR on the other hand, because you may need make sure there\u0027s no loop in the chaining, since it\u0027s making implementation harder.",
      "parentUuid": "d6eed6ba_3fc09954",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47de8cce_e7247dca",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:34:34Z",
      "side": 1,
      "message": "I am not sure if I am understanding this completely. et me explain what I understand here, every sensors mentioned in a config file will have a dbus interface with initial values of zero. And this process will start monitoring every parameter provided if they are dbus path. If any sensor make changes in the given path will trigger in calculation of this new sensor so I don\u0027t see any chaining issues in implementation. \n\nPlease explain your thought, I might be missing some serious issues here.",
      "parentUuid": "c33c3794_55ef08d9",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b31d6fdc_c8ccd461",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2020-06-26T23:41:56Z",
      "side": 1,
      "message": "I see. Then we should explicitly specify that it\u0027s user\u0027s responsibilities not to create a loop , since it\u0027s a dead event loop which will consume all the resources? Again, from my other comment because I\u0027m not familiar with dbus monitoring event: Is there any performance impact on the virtual sensor? For example, if there are 3 normal sensors, there are 3 normal updates on dbus per polling cycle. Then if we add a virtual sensor aggregating these 3, will we have 6 updates on dbus per polling cycle?",
      "parentUuid": "47de8cce_e7247dca",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbd68fa8_8435f13c",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-29T19:50:25Z",
      "side": 1,
      "message": "Sure, I will add this chaining in this design document. Yes as per current design it may have 6 updates. I need to think on this while implementing.",
      "parentUuid": "b31d6fdc_c8ccd461",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1a13863_e2a8862c",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2020-06-29T20:19:15Z",
      "side": 1,
      "message": "Thanks for detailing this!",
      "parentUuid": "dbd68fa8_8435f13c",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8418be69_f3b8311a",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-06-30T00:56:03Z",
      "side": 1,
      "message": "This is 2X the dbus transactions on an already overworked bus.  This wont scale at all for systems with lots of sensors.",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1314d27f_b64d8b98",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2020-06-09T19:13:36Z",
      "side": 1,
      "message": "Units. Thresholds(?) define here or get from entity manager?",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87dad484_6798b5b5",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1314d27f_b64d8b98",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "620f36fa_fd65c895",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-06-30T00:56:03Z",
      "side": 1,
      "message": "Entity manager has a very similar sensor for calculating exit air temp, and does so by simply requiring the sensor names as input.  Are there enough cases to really need a new daemon and justify the dbus overhead that having a separate virtual sensor daemon creates?  I\u0027m imagining a system that I\u0027ve tuned, with every sensor having some kind of simple offset.  Sensor-\u003evirtual-\u003edbus for every single one seems like a lot of extra overhead.",
      "parentUuid": "1314d27f_b64d8b98",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88ffecfd_5ad3cb27",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2020-06-09T19:13:36Z",
      "side": 1,
      "message": "Remove.",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ffe18e7_3286df73",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88ffecfd_5ad3cb27",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7203069_82234435",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2020-06-24T17:12:58Z",
      "side": 1,
      "message": "Do we prefer the variables to have dollar sign before them? Do we need to support parentheses and functions like max(), min()? One of my concerns with JSON config file is that we may be trying to implement a script language parser in every daemon reading them. And one of my asks on sensor aggregation is to get the maximum temperature reading among dozens of them to save sensor number, especially for IPMI sensor space. In this design, Do we consider the functionality to hide them in dbus when superseded by a virtual sensor?",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89ac83b3_356f03e1",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "We can certainly support max/min in algorithm and currently we will not be supporting hiding other sensors from dbus as we get values from there only. But it can be extended to support that. As I can understand that we don\u0027t want some original sensors in our SDR.",
      "parentUuid": "f7203069_82234435",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa2416e8_67150c09",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-06-30T00:56:03Z",
      "side": 1,
      "message": "If you\u0027re going to define a DSL, you need to do a better job of specifying the syntax rules for it.  What types are allowed?  Only int, or bool as well?  What operators are allowed?  What\u0027s the operator precedence?  What precision are the numbers calculated?  Does it support float values?  Strings?",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a9590c4_5519d016",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2020-06-09T19:13:36Z",
      "side": 1,
      "message": "\"Val\": \"/xyz/openbmc_project/sensor/temperature/\"Inlet_Temp\"",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33aafb24_77edcbb8",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2020-06-24T17:12:58Z",
      "side": 1,
      "message": "Agree. I\u0027d like the virtual sensor not bidden to individual sensors.",
      "parentUuid": "1a9590c4_5519d016",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc40aea_6cc18c46",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "I have made this also as a parameter.",
      "parentUuid": "1a9590c4_5519d016",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a91ddc1_126c52d3",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-06-30T00:56:03Z",
      "side": 1,
      "message": "What is the behavior if a sensor doesn\u0027t exist?",
      "parentUuid": "1a9590c4_5519d016",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "822026f8_64a753d2",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-06-30T00:56:03Z",
      "side": 1,
      "message": "Lots of questions still.  How do you plan to hide the \"real\" sensor values from user-facing interfaces?  Have you done any performance benchmarking to show this is possible?",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80f3bc56_60bbb09d",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2020-06-24T17:12:58Z",
      "side": 1,
      "message": "I\u0027m too familiar with stuffs with dbus; does that mean if we drop the \u0027Path\u0027 parameter in the design, either we have to specify which sensor change event to listen to, or we are getting much more sensor update frequency with this virtual sensor due to listening to update events of multiple sensors?",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5be095d_54a545d8",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000539
      },
      "writtenOn": "2020-06-24T17:14:09Z",
      "side": 1,
      "message": "Sry, I meant \u0027not too familiar\u0027...",
      "parentUuid": "80f3bc56_60bbb09d",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20d58dab_07c4d381",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2020-06-26T23:17:04Z",
      "side": 1,
      "message": "So now path has been covered in parameter itself. Every parameter would be considered as either path or absolute value.",
      "parentUuid": "80f3bc56_60bbb09d",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67e8117e_35759e7c",
        "filename": "designs/virtual-sensors.md",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-06-30T00:56:03Z",
      "side": 1,
      "message": "With respect, you can do better than this.  Off the top of my head:\n1. You\u0027re creating an arbitrary expression parser.  It will need to be fuzzed.\n2. You need a test for each possible operator, as well as operator chaining order.\n3. You will need to simulate sensors in error states.\n4. You will need to simulate overflows.\n5. You will need to test that webui, Redfish, rest-dbus, and others don\u0027t display the child sensors that make up your \"virtual sensor\".\n6. You will need to performance test it with reasonable numbers of sensors running through it.",
      "revId": "01097fa5b281d24eebde3f1f347dcd31b2dcd589",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}