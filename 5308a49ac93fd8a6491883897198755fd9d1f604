{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "97c9dcee_3fe234be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-04-29T02:21:41Z",
      "side": 1,
      "message": "I\u0027m looking for a +1 from Ed on this... is there still work being done here?",
      "revId": "5308a49ac93fd8a6491883897198755fd9d1f604",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45d53422_d7b01257",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-23T17:03:38Z",
      "side": 1,
      "message": "Yep, still being reworked for:\n1. Security: Users able to write any data they want, including data that doesn\u0027t conform to the spec opens OpenBMC to security holes and doesn\u0027t match up with the security standards we follow (which require input validation).\n2. Maintainability.  The initial round of patches require hardcoding a specific system worth of endpoints.  This needs thought put around how each individual system can declare their own rules around what is writable and what isn\u0027t (probably through per-system PrivilegeRegistry.\n3. Configurability, we need to assess what level of per-system configuration we need for this such that it can apply to more than just one system, as well as assess whether we need a global disable.\n4. Conformance/Standards compliance, we need to get the relevant schemas updated in DMTF redfish to allow for writing data to them, which probably needs a proposal to DMTF to precede this.  Most of the schemas being written in the initial patchset are marked read-only.\n5. Testing, and how exactly it\u0027ll be executed, including security testing.  (presumably using the existing robot test framework but that\u0027s TBD).\n\nJosh and I have discussed this at length in chat, which wasn\u0027t captured well here.  Sorry for that, yes, this is still being worked.",
      "parentUuid": "97c9dcee_3fe234be",
      "revId": "5308a49ac93fd8a6491883897198755fd9d1f604",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "280696a8_aa05ef9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-14T08:09:03Z",
      "side": 1,
      "message": "feel free to reopen when you are ready to proceed. last indication I had was that there were reworks to be done on this design still but that was back in July with no further update since. ",
      "revId": "5308a49ac93fd8a6491883897198755fd9d1f604",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7955e5b_85bd6799",
        "filename": "designs/external-storer.md",
        "patchSetId": 10
      },
      "lineNbr": 106,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-04T18:28:13Z",
      "side": 1,
      "message": "Could you explain why this design chooses LogService?",
      "range": {
        "startLine": 106,
        "startChar": 2,
        "endLine": 106,
        "endChar": 13
      },
      "revId": "5308a49ac93fd8a6491883897198755fd9d1f604",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "650f0dcb_8e7edcab",
        "filename": "designs/external-storer.md",
        "patchSetId": 10
      },
      "lineNbr": 106,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T22:51:46Z",
      "side": 1,
      "message": "LogServices is the first, of hopefully many, integration hooks to be provided. LogServices had the greatest need for our initial implementation. Other than that, there\u0027s no reason why it was singled out for special treatment. ExternalStorer is intended to be generic enough to adapt to all endpoints that need it.",
      "parentUuid": "a7955e5b_85bd6799",
      "range": {
        "startLine": 106,
        "startChar": 2,
        "endLine": 106,
        "endChar": 13
      },
      "revId": "5308a49ac93fd8a6491883897198755fd9d1f604",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e570a237_6465ce98",
        "filename": "designs/external-storer.md",
        "patchSetId": 10
      },
      "lineNbr": 164,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-04T18:28:13Z",
      "side": 1,
      "message": "How is this design related to the circular buffer that Brandon proposes? Is this covered somewhere?",
      "range": {
        "startLine": 164,
        "startChar": 3,
        "endLine": 164,
        "endChar": 15
      },
      "revId": "5308a49ac93fd8a6491883897198755fd9d1f604",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd5a0b56_f7ba67a1",
        "filename": "designs/external-storer.md",
        "patchSetId": 10
      },
      "lineNbr": 164,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T22:51:46Z",
      "side": 1,
      "message": "I\u0027m not sure of this circular buffer. I do plan to add a FIFO for automatically removing old entries as new entries fill up the maximum allowed storage space, though. The API document talks more about this.",
      "parentUuid": "e570a237_6465ce98",
      "range": {
        "startLine": 164,
        "startChar": 3,
        "endLine": 164,
        "endChar": 15
      },
      "revId": "5308a49ac93fd8a6491883897198755fd9d1f604",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}