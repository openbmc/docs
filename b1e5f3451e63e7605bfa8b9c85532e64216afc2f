{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "190fd421_9d7b5886",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-15T20:13:16Z",
      "side": 1,
      "message": "Please wrap 50/72 as the developing guide asks.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03907f36_66b8efee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-01-16T21:08:44Z",
      "side": 1,
      "message": "To confirm-- the issue is that the lines of my body were wrapping *too early*, not that they had too many characters, correct?\n\nThanks for the heads up, I think I had only been watching to make sure I didn\u0027t go over the 50/72 boundaries when I made my last change.",
      "parentUuid": "190fd421_9d7b5886",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a36bf9c_3714c268",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-01-16T22:00:40Z",
      "side": 1,
      "message": "Usually your editor can be configured to automatically wrap the text at the required column. Failing that there\u0027s always [fold](https://www.man7.org/linux/man-pages/man1/fold.1.html).",
      "parentUuid": "03907f36_66b8efee",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e78607d_29da87ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-01-17T16:09:40Z",
      "side": 1,
      "message": "That\u0027s a very useful command I didn\u0027t know about, thanks! Can you tell me what editor you prefer that has word wrapping where you can define the column to wrap on?\n\nI\u0027ve been using Notepad++. It does have word-wrap functionality, but not column-definable out of the box.",
      "parentUuid": "7a36bf9c_3714c268",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbd9ee35_bb845a25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-01-17T16:23:42Z",
      "side": 1,
      "message": "(Removing \u0027resolved\u0027 flag to keep replies open...)",
      "parentUuid": "1e78607d_29da87ef",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83b669ea_ed334998",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-01-17T16:55:54Z",
      "side": 1,
      "message": "I\u0027m not sure if git defaults to vim for commit messages or if it just does for me because I use (neo)vim for everything, but that is easy to configure to handle the 50/72 lengths, including reformatting paragraphs or the whole thing with \u0027gw\u0027.",
      "parentUuid": "bbd9ee35_bb845a25",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47ed1056_68526eed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-01-17T18:11:37Z",
      "side": 1,
      "message": "I\u0027ve got some novice level experience with vim, but hadn\u0027t tried setting a word-wrap with there, and I haven\u0027t tried neovim yet. Good info, thanks!",
      "parentUuid": "83b669ea_ed334998",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26f1d665_fe2eaede",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "47ed1056_68526eed",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a93aded_d83dc568",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "IMO, this design is communicating data with uboot, therefore it goes in a daemon that communicates with uboot, https://github.com/openbmc/phosphor-u-boot-env-mgr which also has the advantage that the existing code will now be better maintained.  Even if none of the code is in common, sharing the repo with all uboot communication code is organizationally much better in my opinion, because it adds to the idea that solutions are generic, not platform specific.  Keep in mind, phosphor-u-boot-env-mgr has less executable code than this design document has words, so getting it maintained and used shouldn\u0027t be a huge burden to put on the authors of this document.\n\nI don\u0027t really buy into the idea that HPe platforms are so unique that they require yet another daemon to communicate data from uboot into dbus.  Maybe it operates in some unique ways using some unique ram regions but it\u0027s still transferring data uboot-\u003edbus, and should share the code that already exists, even if it\u0027s only in name. \"If the HPe u-boot node exists\" seems like something that the code could trivially branch on and be added to by others later.\n\nIn addition, this document needs unified with https://gerrit.openbmc.org/c/openbmc/docs/+/65678\n\nWhich still has a number of open comments from core maintainers, and has an author comment that says:\n\n\u003e I\u0027m now planning to update this proposal to discuss creating a \u0027u-boot-env FRU-alternative\u0027 daemon (non-HPE-specific) in Entity-Manager that would make use of the phosphor-u-boot-env-mgr service (if exists) to move HW identifying data to D-Bus.\"\n\nHopefully it\u0027s easy to see why I\u0027m confused why there\u0027s yet another design doc for what amounts to the same feature.\n\nGiven how long this design has been in-progress, I\u0027m assuming this implementation already exists in a fork somewhere?  To be clear, working code isn\u0027t a prerequisite for a design approval, but if it exists, providing a pointer to it would likely answer quite a few questions better than text descriptions, and give us something to point to when making specific suggestions about dbus interfaces.",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fce7cff0_6d577e6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T00:29:16Z",
      "side": 1,
      "message": "\u003e IMO, this design is communicating data with uboot, therefore it goes in a daemon that communicates with uboot, https://github.com/openbmc/phosphor-u-boot-env-mgr\n\nLet\u0027s hold up there. I think there\u0027s a bit more nuance to it than that. The environment is not the only method via which u-boot exchanges data with other parts of the system. The devicetree is another, and its purpose is to describe the hardware. Modifying devicetrees at runtime is expected practice - firmware often generates them at runtime.\n\nThe purpose of the u-boot environment is to allow configuration of the behaviour of u-boot. Ideally it shouldn\u0027t have a purpose beyond that.\n\nThe complete list of properties that HPE are concerned with are enumerated in the document:\n\n1. `server_id` (platform model id)\n2. `pca_part_number` (baseboard part no)\n3. `pca_serial_number` (baseboard serial no)\n4. `part_number` (platform product no, set at assembly by factory)\n5. `serial_number` (system serial no, assigned at assembly by factory)\n6. `mac0` (if present: MAC address for dedicated BMC network interface)\n7. `mac1` (if present: MAC address for secondary network interface that may or may not be shared with host)\n\nThe network device schema provides the [`local-mac-address` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter4-device-bindings.rst#local-mac-address-property), addressing `mac0` (6) and `mac1` (7).\n\nThe [`model` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst?plain\u003d1#L39) should encode `pca_part_number` (2) if this is where the GXP SoC is situated. Under that assumption the [`serial-number` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst?plain\u003d1#L53) addresses `pca_serial_number` (3). The baseboard model should be what\u0027s driving the EM configs, it represents the hardware that\u0027s present.\n\nAs an alternative regarding 1, IBM, for example, embed the platform model string in the `model` property:\n\nhttps://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/boot/dts/aspeed/aspeed-bmc-ibm-rainier.dts?h\u003dv6.7#n11\n\nThis method might be used to expose `server_id` (1) or possibly `part_number` (4), but really I think we need to have the EM config probe on the baseboard if that\u0027s where the GXP SoC is situated.\n\nInformation should be placed where it\u0027s designed to go. As far as I\u0027m concerned, that\u0027s the devicetree for the properties discussed above, with the caveat that it may be necessary to put the MAC addresses into the u-boot environment for the purpose of enabling networking in u-boot.\n\nIf we have to use the environment to convey some of the information that doesn\u0027t fit anywhere else, then so be it. But I think the design point is feasible using specified properties in the devicetree for their designated purpose.\n\n\u003e I don\u0027t really buy into the idea that HPe platforms are so unique that they require yet another daemon to communicate data from uboot into dbus\n\nI don\u0027t think the design-point of hosting specific data from the devicetree is unexpected. HPE might be the first people to hit on it, but it\u0027s certainly more broadly applicable. It\u0027s not code that is specific to a HPE platform design. It has broader utility.\n\n\u003e In addition, this document needs unified with https://gerrit.openbmc.org/c/openbmc/docs/+/65678\n\n+1, I\u0027ve been confused by this several times.",
      "parentUuid": "1a93aded_d83dc568",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c021be83_8107b1a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T01:20:42Z",
      "side": 1,
      "message": "\u003e \u003e IMO, this design is communicating data with uboot, therefore it goes in a daemon that communicates with uboot, https://github.com/openbmc/phosphor-u-boot-env-mgr\n\u003e \n\u003e Let\u0027s hold up there. I think there\u0027s a bit more nuance to it than that. The environment is not the only method via which u-boot exchanges data with other parts of the system. The devicetree is another, and its purpose is to describe the hardware. Modifying devicetrees at runtime is expected practice - firmware often generates them at runtime.\n\nAt no point did I say that the environment is the _only_ way u-boot communicates with userspace.\n\n\u003e \n\u003e The purpose of the u-boot environment is to allow configuration of the behaviour of u-boot. Ideally it shouldn\u0027t have a purpose beyond that.\n\nCool.\n\n\u003e \n\u003e The complete list of properties that HPE are concerned with are enumerated in the document:\n\u003e \n\u003e 1. `server_id` (platform model id)\n\u003e 2. `pca_part_number` (baseboard part no)\n\u003e 3. `pca_serial_number` (baseboard serial no)\n\u003e 4. `part_number` (platform product no, set at assembly by factory)\n\u003e 5. `serial_number` (system serial no, assigned at assembly by factory)\n\u003e 6. `mac0` (if present: MAC address for dedicated BMC network interface)\n\u003e 7. `mac1` (if present: MAC address for secondary network interface that may or may not be shared with host)\n\u003e \n\u003e The network device schema provides the [`local-mac-address` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter4-device-bindings.rst#local-mac-address-property), addressing `mac0` (6) and `mac1` (7).\n\u003e \n\u003e The [`model` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst?plain\u003d1#L39) should encode `pca_part_number` (2) if this is where the GXP SoC is situated. Under that assumption the [`serial-number` property](https://github.com/devicetree-org/devicetree-specification/blob/main/source/chapter3-devicenodes.rst?plain\u003d1#L53) addresses `pca_serial_number` (3). The baseboard model should be what\u0027s driving the EM configs, it represents the hardware that\u0027s present.\n\u003e \n\u003e As an alternative regarding 1, IBM, for example, embed the platform model string in the `model` property:\n\u003e \n\u003e https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/boot/dts/aspeed/aspeed-bmc-ibm-rainier.dts?h\u003dv6.7#n11\n\u003e \n\u003e This method might be used to expose `server_id` (1) or possibly `part_number` (4), but really I think we need to have the EM config probe on the baseboard if that\u0027s where the GXP SoC is situated.\n\u003e \n\u003e Information should be placed where it\u0027s designed to go. As far as I\u0027m concerned, that\u0027s the devicetree for the properties discussed above, with the caveat that it may be necessary to put the MAC addresses into the u-boot environment for the purpose of enabling networking in u-boot.\n\n\u003e \n\u003e If we have to use the environment to convey some of the information that doesn\u0027t fit anywhere else, then so be it. But I think the design point is feasible using specified properties in the devicetree for their designated purpose.\n\u003e \n\u003e \u003e I don\u0027t really buy into the idea that HPe platforms are so unique that they require yet another daemon to communicate data from uboot into dbus\n\u003e \n\u003e I don\u0027t think the design-point of hosting specific data from the devicetree is unexpected. HPE might be the first people to hit on it, but it\u0027s certainly more broadly applicable. It\u0027s not code that is specific to a HPE platform design. It has broader utility.\n\n\nI wasn\u0027t very clear I guess.  I have no problem with the information being placed in devicetree, that seems like a reasonable thing to do, for all the reasons you mentioned, I would just like to see that preboot (uboot for now) to userspace communications are done in the same daemon, and the interfaces are such that someone with access to a mainboard could reasonably construct a proper probe statement.\n\n\u003e \n\u003e \u003e In addition, this document needs unified with https://gerrit.openbmc.org/c/openbmc/docs/+/65678\n\u003e \n\u003e +1, I\u0027ve been confused by this several times.\n\n+2ing this, so it doesn\u0027t get lost in the thread.",
      "parentUuid": "fce7cff0_6d577e6d",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75f58ef9_28c8b2a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T02:06:54Z",
      "side": 1,
      "message": "\u003e I would just like to see that preboot (uboot for now) to userspace communications are done in the same daemon\n\nMy immediate feeling is that is too ill-defined to say no to stuff people propose for it, and that it would become a maintenance concern. It\u0027s already covering the u-boot environment (which Linux has no visibility of) and the devicetree (which Linux _does_ have visibility of). I don\u0027t feel like that is particularly coherent.\n\n\u003e and the interfaces are such that someone with access to a mainboard could reasonably construct a proper probe statement.\n\nCan you unpack what your expectations are here? Where\u0027s the line for \"reasonably construct\"?",
      "parentUuid": "c021be83_8107b1a0",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98f7aef1_2010f90a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Will follow up on this point on Discord, but I\u0027ve gotten the \u0027okay\u0027 for to have folks from HPE (starting with myself, expanding roster as needed) agree to take on a maintainer role for phosphor-u-boot-env-mgr and to base the device-tree -\u003e d-bus daemon we\u0027d like to use from there. The more we\u0027ve looked into it, the more sense it seems to make to keep this daemon associated with u-boot-specific code.\n\n---------------------------------------------------------\n\nRe: 2 design doc versions-- \n\nShort Summary: The linked doc was initially described (perhaps incorrectly) as a generalized \u0027file system -\u003e d-bus\u0027 design, and described an existing (but no longer relevant) Gerrit submission that enables the existing fru-device daemon in Entity-Manager to source data from device-tree/chosen nodes.\n\nThe other doc (this one) started as an OEM/HPE-specific \u0027how HPE will leverage the system in the first doc to read from device-tree/chosen nodes\u0027 design. After much community discussion, this doc slowly transformed from something HPE-specific into a more generalized \u0027device-tree -\u003e D-bus\u0027 design with applications outside of HPE systems. I think the old doc can be deleted at this point.\n\n-----------------\nA rough ordering of events w/ links:\n\n1. Submitted fru-device daemon code changes to Gerrit for handling device-tree/chosen nodes. Was described to OBMC community as an \u0027arbitrary file system -\u003e d-bus daemon\u0027 -- this got a fair bit of pushback, largely relating to the \u0027arbitrary file systems\u0027 description. This was corrected to narrow focus on \u0027device-tree nodes\u0027 in later discussions.  Gerrit code submission @ https://gerrit.openbmc.org/c/openbmc/entity-manager/+/65669\n\n2. Was asked to submit a design document for the above changes. Submitted the doc @ https://gerrit.openbmc.org/c/openbmc/docs/+/65678 (originally focused on describing the already-submitted code, and describing the reasoning for it)\n\t\n3. Submitted an additional \u0027OEM/HPE\u0027 version of the doc to https://gerrit.openbmc.org/c/openbmc/docs/+/66369 (current doc), intending for the \u0027generalized\u0027 doc to describe a generic method for \u0027arbitrary file system -\u003e dbus\u0027 handling, with the OEM/HPE version giving deeper HPE-specific background, plus going into detail about HPE\u0027s specific needs and requirements, along with info on how the \u0027general\u0027 system would be applied to device-tree nodes for HPE\u0027s HW requirements.\n\t\n4. Based on community discussions, the  document was changed from a \"arbitrary file system -\u003e d-bus daemon\" to instead discuss an \"HPE FRU -\u003e d-bus daemon\" hosted in the phosphor-u-boot-env-mgr subproject instead of in entity-manager\n\t\n5. After further discussion, got pushback about the \u0027d-bus chain getting long\u0027 (likely due to a convoluted suggestion on my end re: using code in Entity-Manager to decide if an HPE-specific daemon in phosphor-u-boot-env-mgr should be started).\n\t \n6. I realized the community didn\u0027t consider \u0027device-tree -\u003e dbus\u0027 to be as objectionable as an \u0027arbitrary file system -\u003e d-bus daemon\u0027 so a rebranding of existing code/plans happened around here. \n\n7. Based on community discussion, I decided to switch design focus to \u0027device-tree -\u003e d-bus daemon\u0027 and started deciding on which fields were necessary + low hanging fruit that made sense to include\n\t\n8. After more community discussion, we decided that the OEM/HPE doc had been edited down into a general use doc, so it was moved out of the OEM/HPE subdirectories and rebranded to the doc we\u0027re on now.\n\nOther than the discussion history in it, I think the original doc is irrelevant at this point, and can be removed to future avoid confusion.\n\nI\u0027m still considering creating an additional document (once all this stuff is settled) in the future that gives some kind of general purpose \u0027here\u0027s things to consider and look at when thinking about a new daemon for entity-manager HW ID\u0027 doc in the future -- largely because of how confusing I found things at first.\n\nIf/when that happens, such a doc would include info like existing daemons, and design preferences like how we\u0027d prefer one channel per daemon, or to keep daemons associated with their data sources -- both of which are seemingly violated by current fru-device daemon implementation in the Entity-Manager subproject. Things like that definitely caused plenty of extra confusion on my end early on.",
      "parentUuid": "75f58ef9_28c8b2a5",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e50e929b_bd497691",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98f7aef1_2010f90a",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c91da47d_513a6d9a",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "This sounds very similar to the Tyan file format (which FRU device handles) or the VPD IBM parser design.  Could you please add those into your background?  Ideally also with details on why this design is taking a different approach.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 65
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f17ea75f_86d4b8b7",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 13,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c91da47d_513a6d9a",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 65
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a54c7df_66df8232",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 57,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "I\u0027m not quite understanding this section.  If there are portions that are required to make this work that cannot be open sourced, what\u0027s the point of this design?  If nobody can build a GXP OpenBMC image that works, why open source just a portion?  Just keep the proprietary implementation, support it, and call it done.  Calling something \"OpenBMC\" without open sourcing the code to actually make it work it doesn\u0027t seem appropriate, or useful to a user.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b51f0fc_44b51256",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T00:29:16Z",
      "side": 1,
      "message": "I\u0027m an open source enthusiast as much as any other, but I think we need to be a bit pragmatic here. Is it ideal? No. Is the bootblock required by their secure-boot architecture? Yes. Are there other similarities in the ecosystem? Well, the Aspeed boot ROM isn\u0027t open source either (this would be useful just for inspection purposes).\n\nLet\u0027s acknowledge that HPE are making pretty good progress with making the *rest* of their BMC stack open source. I prefer progress over perfection.",
      "parentUuid": "2a54c7df_66df8232",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b5a2d4f_292beedd",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 57,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T01:20:42Z",
      "side": 1,
      "message": "\u003e I\u0027m an open source enthusiast as much as any other, but I think we need to be a bit pragmatic here. Is it ideal? No. Is the bootblock required by their secure-boot architecture? Yes. Are there other similarities in the ecosystem? Well, the Aspeed boot ROM isn\u0027t open source either (this would be useful just for inspection purposes).\n\nRight, but I can do a build with the ROM as part of it.  Maybe I misunderstood, so let me ask the pointed question:\n\nWhen this design doc is done, can I build a bmc that boots on an HPE platform and see this feature function as intended?  From the sounds of this text block the answer is no, but given the above that we\u0027re comparing to the aspeed boot rom, which I CAN build and run (even if it\u0027s a binary blob), that\u0027s a different consideration entirely.\n\n\u003e \n\u003e Let\u0027s acknowledge that HPE are making pretty good progress with making the *rest* of their BMC stack open source. I prefer progress over perfection.\n\nAbsolutely.  I mentioned on discord that this point is probably out of scope for this design discussion.  Resolving in this context.",
      "parentUuid": "8b51f0fc_44b51256",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a56a2b2_8becf789",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 57,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T02:06:54Z",
      "side": 1,
      "message": "As I understand it, you can take HPE\u0027s OpenBMC tree, build it and boot it on one of their supported platforms, so long as you\u0027ve done the appropriate key management magic to allow booting your firmware build.\n\nThat\u0027s based on the statement by Jean-Marie at OSFC here, at about 3m50s:\n\nhttps://www.osfc.io/2023/talks/provision-open-source-firmware-system-at-scale/",
      "parentUuid": "6b5a2d4f_292beedd",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e64842f0_8bbbb827",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 61,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Getting this into an upstream uboot or openbmc uboot would presumably be a prerequisite of acceptance of this design?  has that discussion been started?  Can you link it?",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 61,
        "endChar": 58
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93257197_2e7edac7",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 61,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "In the short term, an HPE-fork of OpenBMC will include recipes to point to the public HPE-fork of u-boot (currently needed for more than just this HW identification bit), \n\nIn the longer term, there\u0027s an ongoing effort to boot HPE hardware on top of the latest \u0027official\u0027 u-boot code with minimal changes on top, and we plan to work on upstreaming that once it\u0027s ready to go.",
      "parentUuid": "e64842f0_8bbbb827",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 61,
        "endChar": 58
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7684dbb9_0bd5b018",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Why is openbmc pointing at this u-boot fork?\n\nhttps://github.com/openbmc/openbmc/blob/8a4267b756cd3dadf58a01d1c96764f8d80077ee/meta-hpe/meta-gxp/recipes-bsp/u-boot/u-boot-common-gxp_2020.10.inc#L12C1-L13C1\n\npresumably HPe would need to follow the process that Nuvoton and Aspeed did, and get it included in https://github.com/openbmc/u-boot  Have you discussed that with Joel?\n\nAs written this seems like it\u0027s in direct contradiction of\nhttps://github.com/openbmc/docs/blob/master/meta-layer-guidelines.md\n\nTrying to propose \"generic\" solutions that apply to everything when the underlying implementation seems like we\u0027re making a huge amount of technical debt.\n\nThe fact that HPe is both a system manufacturer, and makes its own BMC was maybe why this was allowed?",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82e72ade_4bd701fc",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 124,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "HPE has a lot of working hardware on OBMC based on internal proof of concept code that wasn\u0027t originally built with upstreaming acceptance in mind. A few of us have been put to the task of porting whatever we can to from \u0027proof of concept\u0027 to \u0027upstream ready\u0027 with an aim of reducing the difference between mainstream code and internal dev builds as much as possible.\n\nIn the shorter term, I believe the plan is to have a public HPE fork of OpenBMC available on Github with a handful of recipes added that point to any HPE-specific repos with components that haven\u0027t gone through the OBMC acceptance processes. \n\nIn the longer term, we\u0027re going to be working to upstream whatever we can, with an ultimate hope of not needing an HPE-specific fork(s) anymore. We\u0027ll be looking to knock off training wheels by removing recipes for forked components when and where we can over time.\n\nIn the medium-longer term for u-boot, there is an effort to work out a \u0027minimal\u0027 set of changes that will allow HPE hardware to boot on top of mainstream u-boot that I believe has been seeing progress. The current plan is to eventually upstream that effort once it\u0027s ready.",
      "parentUuid": "7684dbb9_0bd5b018",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89209727_502dc791",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 128,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "In the past we haven\u0027t put manufacturer specific daemons in entity-manager.  the IBM VPD is parsed by its own repo.  Any reason we\u0027d put it in EM this time around?  If we\u0027re changing that, should we move the IBM daemon into EM?\n\nThe doc you reference still has quite a few open comments, and is really difficult to reconcile with this design.",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 81
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3b14b9b_ccf34323",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 128,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T00:29:16Z",
      "side": 1,
      "message": "This wouldn\u0027t be a manufacturer-specific daemon. It would be a small amount of code exposing the root `model` and `serial-number` devicetree properties on D-Bus that is applicable on almost any system.",
      "parentUuid": "89209727_502dc791",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 81
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c19ecf9_3b7d5783",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 128,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Looking like we\u0027ll probably be hosting this proposed daemon in phosphor-uboot-env-mgr after all. \n\nThe more I\u0027ve looked into that option after it was last suggested, the more it seems like it makes sense to separate these d-bus daemons according to the data source this way.",
      "parentUuid": "d3b14b9b_ccf34323",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 81
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b18051fe_7962dff2",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 128,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c19ecf9_3b7d5783",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 81
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7fcf0b3_e571f130",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "This seems like an issue in naming.\n\nEntity manager files are intended to represent what physically exists on a component such that it\u0027s not debatable what the interfaces are, and those without OpenBMC experience can write config files.\n\nxyz.openbmc_project.Inventory.Decorator.Compatible doesn\u0027t represent anything about the physical board, and means nothing in the real world without knowing exactly how the software is configured.  I suspect we would need naming that conveys something to the effect of: \"HPe format FRU manufacturer field equals X\"\n\nThus we\u0027re not relying on a particular distro/software config to write those Compatible flags, which would require the EM config writer to understand a lot more about how OpenBMC is structured, and whos probe elements might be subjective.\n\nYou\u0027ll notice the existing FRU device entries follow this \"IPMI FRU Manufacturer field equals X\" pattern.  An example of an IBM OEM parser is below.\n\nhttps://github.com/openbmc/entity-manager/blob/8d2ed842534cc63b446321faa17b5d400350f6a3/configurations/rainier_1s4u_chassis.json#L24C23-L24C23\n\nthat example then publishes xyz.openbmc_project.Inventory.Decorator.Compatible as a result.  Your design is inverting that.  At a minimum we need to use something other than Compatible as the EM probe, so we don\u0027t have a disconnect between which object owns the Compatible interface.",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 38
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb229664_474521e5",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T00:29:16Z",
      "side": 1,
      "message": "\u003e xyz.openbmc_project.Inventory.Decorator.Compatible doesn\u0027t represent anything about the physical board, and means nothing in the real world without knowing exactly how the software is configured. I suspect we would need naming that conveys something to the effect of: \"HPe format FRU manufacturer field equals X\"\n\nWhat about https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml ?\n\nIt lives in the `Decorator` namespace, but it does all the things we need it to do.",
      "parentUuid": "b7fcf0b3_e571f130",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 38
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a052fd6_f30e2efb",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T01:20:42Z",
      "side": 1,
      "message": "Decorator.Asset again, doesn\u0027t mean anything in the real world, so when we do board ports, people will need to go look up what exists.\n\nHow about something like:\nSpiFlashFru(Model \u003d )\n\nThe physical board has a fru field in flash, which is what we\u0027re technically probing on, and exists in the real world.  \"devicetree\" doesn\u0027t exist to a hardware engineer, so I\u0027m intentionally avoiding using it as an interface name.",
      "parentUuid": "fb229664_474521e5",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 38
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eb13944_5da0899d",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T02:06:54Z",
      "side": 1,
      "message": "\u003e \"devicetree\" doesn\u0027t exist to a hardware engineer, so I\u0027m intentionally avoiding using it as an interface name.\n\nSure, I don\u0027t think it\u0027s necessary to include implementation details such as \"devicetree\" in an interface name.\n\n\u003e The physical board has a fru field in flash, which is what we\u0027re technically probing on, and exists in the real world.\n\nThat\u0027s not what this document asserts though. From the description in \"Background and References\":\n\n\u003e For GXP-based Gen 11 HPE platforms, proprietary HPE-controlled bootblock firmware communicates with a secure element to provide necessary VPD. This process uses a driver whose implementation is strictly license-controlled and cannot be publicly released. The open source portions of the boot chain must adapt to the bootblock\u0027s reserved memory application binary interface (ABI) for providing VPD from the secure element.\n\nand \n\n\u003e Additionally, code in u-Boot gathers MAC addresses for the BMC\u0027s network interfaces, along with retrieving a \u0027server_id\u0027 value from an embedded CPLD-based memory device. This value is unique to each model of HPE platform, and will be used for platform-wide identification. In comparison, the data in the aforementioned blob may be used for recognizing finer details like specific board revisions for a given platform.\n\nThis suggests we should have something like `SecureElement(Model \u003d )` for the baseboard, or `CPLD(Model \u003d )` for the platform?\n\nThat _would_ tend to make it HPE-specific, but you\u0027re kinda forcing that by trying to strip out any abstraction?",
      "parentUuid": "1a052fd6_f30e2efb",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 38
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd710179_135c7c99",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "I\u0027m currently leaning towards \u0027BMCPrebootContext\u0027 that was suggested as a \u0027generic\u0027 name in the discord chat, especially since it\u0027ll still apply even if the device-tree is altered from somewhere other than u-boot.\n\nThat still sound good to everyone?",
      "parentUuid": "1eb13944_5da0899d",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 38
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8ee602b_1addb644",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd710179_135c7c99",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 134,
        "endChar": 38
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dba13ab_7fc05810",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 138,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Please wrap your document on 80 character boundaries.  There are lots of issues, this is only one.  Please fix all of them.\n\nI\u0027m assuming it wasn\u0027t intentional for these to be headings.  They appear to be text.",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 138,
        "endChar": 94
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9764c9e1_859751f5",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 138,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "I did intentionally turn these into headings that could be referenced via links -- based on a suggestion I got previously -- and found that wrapping the characters at the 80 character boundaries broke for the heading format for longer \u0027titles.\u0027\n\nI found at least one other accepted design doc (the only one I checked with a more complex list of \u0027alternatives\u0027 like the ones here) that used the same formatting.\n\nI\u0027ve also since discovered I can add line-breaks that don\u0027t break formatting with \u003cbr/\u003e, so I\u0027ve added that to the next draft.",
      "parentUuid": "5dba13ab_7fc05810",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 138,
        "endChar": 94
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "066e75f1_3127ba2b",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 138,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9764c9e1_859751f5",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 138,
        "endChar": 94
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86bc574f_247f6187",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 146,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Agreed.",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 51
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c9376fa_5ffaaff7",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 196,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Would increase code reuse and testing.",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d524474_15ecf50f",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 196,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3c9376fa_5ffaaff7",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "369fce52_4a57a163",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 199,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "What does this mean?  The \"preferred\" design has the same chain length, right?  It just puts a new daemon in the entity-manager repo instead of reusing an existing one?",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 199,
        "endChar": 74
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3d72002_c2e50d2b",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 199,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "I\u0027ve gone ahead and overhauled how this \u0027alternative\u0027 is described since we\u0027re actually looking to rely on phosphor-uboot-env-mgr now -- but I think part of the original complaint I got was re: having an HPE-only daemon in phosphor-uboot-env-mgr and trying to figure out how to make sure the daemon would only fire off on HPE machines and not waste cycles on non-HPE systems. \n\nThere may have been a suggestion to have behavior in the HPE daemon change based on what was read onto d-bus from the existing fru-device daemon, which may have been part of the \"chain is getting uncomfortably long\" comments.",
      "parentUuid": "369fce52_4a57a163",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 199,
        "endChar": 74
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8a89e90_66271955",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 199,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3d72002_c2e50d2b",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 199,
        "endChar": 74
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "809fc311_7eb9a6f3",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 201,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Why is this a con?  Saving cycles doesn\u0027t seem like a bad thing, even if it isn\u0027t important?",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 201,
        "endChar": 12
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffbf8490_af993508",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 201,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "809fc311_7eb9a6f3",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 201,
        "endChar": 12
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3693a99b_64c91477",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 209,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Better abstraction is another pro.",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6488aa5_649b5cd3",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 209,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3693a99b_64c91477",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5beb64d7_066667df",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 214,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "?  what does this mean?  I\u0027m really not sure why the location of the code would change how things are able to be leveraged?",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 214,
        "endChar": 58
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "532b95b0_f499d1d4",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 214,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:23:54Z",
      "side": 1,
      "message": "In addition, remove the mention of GPIO-\u003edbus daemon.  Such a daemon has been discussed so many times that there\u0027s a doc on why it\u0027s not going to be permitted.",
      "parentUuid": "5beb64d7_066667df",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 214,
        "endChar": 58
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "591a03a8_8d647c5b",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 214,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T00:29:16Z",
      "side": 1,
      "message": "See https://github.com/openbmc/docs/blob/master/anti-patterns.md#dbus-interface-representing-gpios",
      "parentUuid": "532b95b0_f499d1d4",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 214,
        "endChar": 58
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65548ce6_533c1d65",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 214,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Thanks for the heads up -- removed.",
      "parentUuid": "591a03a8_8d647c5b",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 214,
        "endChar": 58
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "838d8795_656a91ee",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 214,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65548ce6_533c1d65",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 214,
        "endChar": 58
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6d2601e_b8f6c668",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 216,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "I\u0027m not really following how this is different aside from where you\u0027re putting the new daemon.  FWIW, putting all uboot communication code in the same place seems like it would save significant dependencies?\n\nIf I\u0027m understanding the design correctly, this alternative would be my preference.",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 216,
        "endChar": 132
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "413c7dc5_0fe2a762",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 216,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Good point. This \u0027alternative\u0027 has now been removed since the design is now aiming to land a non-HPE-specific daemon in phosphor-u-boot-env-mgr.",
      "parentUuid": "a6d2601e_b8f6c668",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 216,
        "endChar": 132
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5251b4e_f104363c",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 216,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "413c7dc5_0fe2a762",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 216,
        "endChar": 132
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fafb049_9455cb86",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/docs/+/65678 still lists \n\n\u003e This proposal aims to leverage\n[phosphor-u-boot-enviornmental-manager](https://github.com/openbmc/phosphor-u-boot-env-mgr)\u0027s\nu-Boot -\u003e D-Bus data transfer functionality in order to bridge the gap from\nu-Boot to make passed-through HW data available on D-Bus, where it can be acted\nupon by Entity-Manager processes.\n\n\nPresumably that needs updated and synced up with this one?\n\n\nFWIW, I\u0027m having a lot of trouble syncing those two documents in my head.  They\u0027re effectively solving the same problem, were written by the same author, and have tons of overlap between them, while not being consistent in what they say the implementation is.\n\nCan we combine them please into a single \"Here\u0027s how to detect HPe hardware\" document so that we have one consistent source for how this is designed?",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c92def4_1eec8a5e",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Absolutely. I\u0027ve attempted to give a brief history of that doc and this one in another comment, but essentially, that one started out as a \"general file system -\u003e dbus\" design doc, and this doc started as a \"HPE-specific use of general file system to read from device-tree/chosen -\u003e dbus\" design doc.\n\n(in retrospect, if I would have called it a devicetree -\u003e dbus doc from the start, which is what we were looking to do with device-tree/chosen at the time, I think I would have gotten less initial pushback).\n\nAt some point, this doc had enough HPE-specific stuff stripped out in revisions to just call it a \u0027generalized\u0027 version. \n\nA new HPE-specific doc about adding HPE-specific fields is likely to come in the future. I\u0027m thinking I\u0027m just going to mark the other doc as \u0027closed\u0027 to avoid future confusion.",
      "parentUuid": "4fafb049_9455cb86",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d85bfedd_ddea7fd7",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c92def4_1eec8a5e",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c49ad47_eaf07704",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 222,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Why not just enable phosphor uboot env manager by default?  Seems similar to what we\u0027re already proposing, just we\u0027re instead putting code in EM.",
      "range": {
        "startLine": 221,
        "startChar": 36,
        "endLine": 222,
        "endChar": 11
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1449af_6f7de6a1",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 222,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "This definitely makes more sense to me now, especially since this is no longer an HPE-specific daemon being proposed to be hosted in phosphor-uboot-env-mgr",
      "parentUuid": "0c49ad47_eaf07704",
      "range": {
        "startLine": 221,
        "startChar": 36,
        "endLine": 222,
        "endChar": 11
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1454f95_d9e41dc6",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 222,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de1449af_6f7de6a1",
      "range": {
        "startLine": 221,
        "startChar": 36,
        "endLine": 222,
        "endChar": 11
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe7e11e_c6a81303",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 228,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "not sure I agree with this, and as worded, \"feeling messy\" isn\u0027t very easy to connect with given its so abstract.\n\n\nAt the end of the day, SOME daemon needs to translate the raw data structures into high level DBus interfaces.  This can be:\n\nEntity-manager.  Given the fact that entity-manager doesn\u0027t currently talk directly to hardware, this seems ill advised, and would cause worse failure modes (failure to get uboot data would cause failure of all EM configs).\n\nphosphor-u-boot-env-mgr.  This would be my preference, given it already has a design for exposing uboot information to DBus.  Even if the code doesn\u0027t currently do it exactly the way we want, having all the uboot-\u003edbus communication code in one place seems like a good idea.  I would advise enabling this daemon by default, similar to what the \"put this in entity-manager\" approach is wanting\n\nNew daemon in entity-manager repo.  I\u0027m not sure entity-manager is the right fit here, as I\u0027m not really sure what code this implementation and entity-manager would share.  Large amounts of shared code instead of copied code would be the only reason I would support this, but I don\u0027t really see it.  Most of the code in EM is specific to EM.",
      "range": {
        "startLine": 227,
        "startChar": 3,
        "endLine": 228,
        "endChar": 60
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8de8f18f_3485293f",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 228,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T00:29:16Z",
      "side": 1,
      "message": "It was on the basis that it is an alternative to fru-device, which also lives in the EM repo, and it doesn\u0027t have anywhere near the complexity of something like the IBM VPD stuff.",
      "parentUuid": "4fe7e11e_c6a81303",
      "range": {
        "startLine": 227,
        "startChar": 3,
        "endLine": 228,
        "endChar": 60
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a55b2a2_c484cc05",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 228,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T01:20:42Z",
      "side": 1,
      "message": "\u003e It was on the basis that it is an alternative to fru-device, which also lives in the EM repo, and it doesn\u0027t have anywhere near the complexity of something like the IBM VPD stuff.\n\nmy key point is that I would like to see like communication paths put in the same daemon.  communicating u-boot -\u003e userspace seems like a class of communication that organizationally should live together.\n\nAs far as where it specifically lives, if we really want EM, I\u0027m fine with that, but lets start by moving phosphor-uboot-env manager in, and go from there.",
      "parentUuid": "8de8f18f_3485293f",
      "range": {
        "startLine": 227,
        "startChar": 3,
        "endLine": 228,
        "endChar": 60
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf9bf55d_d7bfc023",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 228,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-07T02:06:54Z",
      "side": 1,
      "message": "I guess this comes back to my concerns about a pre-boot communications daemon in https://gerrit.openbmc.org/c/openbmc/docs/+/66369/comments/1a93aded_d83dc568",
      "parentUuid": "9a55b2a2_c484cc05",
      "range": {
        "startLine": 227,
        "startChar": 3,
        "endLine": 228,
        "endChar": 60
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f55d3df_abced098",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 228,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "The more I\u0027ve thought about it, the more I find myself thinking the suggestion to host this daemon in phosphor-u-boot-env-mgr makes sense, since from the OBMC kernel\u0027s perspective, a flat device tree is  being handed off from u-boot.\n\nI believe there was a comment thread somewhere that asked if folks from HPE would be willing to step up as maintainers for that repo, and I\u0027ve gotten the \u0027okay\u0027 to agree to that, if there\u0027s still interest. \n\nI\u0027ll bring it up on Discord for community discussion,",
      "parentUuid": "cf9bf55d_d7bfc023",
      "range": {
        "startLine": 227,
        "startChar": 3,
        "endLine": 228,
        "endChar": 60
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "646c55c2_e2d9c708",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 228,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f55d3df_abced098",
      "range": {
        "startLine": 227,
        "startChar": 3,
        "endLine": 228,
        "endChar": 60
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d93193b_4984cf6e",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 245,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "Still need to answer who will maintain this code.  Presumably the existing entity-manager maintainers don\u0027t have a GXP system, so is someone from HPe getting added to reviews for correctness?  Please get that person added as a reviewer and start doing code reviews of EM patchsets.",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eac0146_5358c418",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 245,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "I\u0027ve updated the organizational section to discuss the use of phosphor-u-boot-env-mgr, and having HPE maintainers (starting with myself) on board.",
      "parentUuid": "3d93193b_4984cf6e",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "701a8cf1_b8baa1a6",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 245,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-25T16:05:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2eac0146_5358c418",
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bc856c6_d2a5a7f4",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 252,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T20:13:19Z",
      "side": 1,
      "message": "That\u0027s not really what this section is for.  Are you going to write:\n\nUnit tests?\nFunctional tests?\nManual tests?\n\nYou\u0027ve called out which platform you plan on testing on, which is good, lets just get the next level of detail on how you intend to test this.",
      "range": {
        "startLine": 249,
        "startChar": 0,
        "endLine": 252,
        "endChar": 56
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90c0b607_c80a051c",
        "filename": "designs/entity-manager-hw-detect-via-device-tree.md",
        "patchSetId": 18
      },
      "lineNbr": 252,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2024-03-21T16:13:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9bc856c6_d2a5a7f4",
      "range": {
        "startLine": 249,
        "startChar": 0,
        "endLine": 252,
        "endChar": 56
      },
      "revId": "b1e5f3451e63e7605bfa8b9c85532e64216afc2f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}