{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f8faad6_74d134bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-08-30T14:53:49Z",
      "side": 1,
      "message": "Adding Nan Zhou, Nancy Yuen, Richard Hanley to help with the review, thanks!",
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb112a84_12e1306b",
        "filename": "designs/redfish-spdm-attestation.md",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-09-02T05:56:04Z",
      "side": 1,
      "message": "Where is the device specific information coming from?\nIs it from entity-manager\u0027s json config, or from other daemons that manage devices supporting SPDM?",
      "range": {
        "startLine": 148,
        "startChar": 64,
        "endLine": 149,
        "endChar": 24
      },
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64c06246_aee60aa2",
        "filename": "designs/redfish-spdm-attestation.md",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-09-05T08:49:40Z",
      "side": 1,
      "message": "It should be other daemons that manage devices supporting SPDM. As explained earlier, we do not provide a generic SPDM daemon implementation. We intend to provide a library to help with implementing the SPDM daemon as it really depends on the what device it is and how it is connected to the BMC (via, PCIe, or MCTP) when it comes to device initialization and transport layer initialization.",
      "parentUuid": "cb112a84_12e1306b",
      "range": {
        "startLine": 148,
        "startChar": 64,
        "endLine": 149,
        "endChar": 24
      },
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c51e2131_956325a0",
        "filename": "designs/redfish-spdm-attestation.md",
        "patchSetId": 4
      },
      "lineNbr": 149,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-09-05T10:04:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64c06246_aee60aa2",
      "range": {
        "startLine": 148,
        "startChar": 64,
        "endLine": 149,
        "endChar": 24
      },
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "334d652a_bef0a967",
        "filename": "designs/redfish-spdm-attestation.md",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2023-09-11T19:19:31Z",
      "side": 1,
      "message": "entity-manager is the standard way to do both of these in OpenBMC.  it\u0027s important to include entity-manager and maybe example of how it fits in, for the rest of users who could adopt this.\n\nWhat you describe here is essentially a prober.  And the subsequent points sound like the corresponding reactor.",
      "range": {
        "startLine": 148,
        "startChar": 1,
        "endLine": 151,
        "endChar": 24
      },
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8294c3e_00def06f",
        "filename": "designs/redfish-spdm-attestation.md",
        "patchSetId": 4
      },
      "lineNbr": 156,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-09-02T05:56:04Z",
      "side": 1,
      "message": "Is this expected to be done in this daemon or other daemons that manages the device?",
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c03aa49a_4850bbb0",
        "filename": "designs/redfish-spdm-attestation.md",
        "patchSetId": 4
      },
      "lineNbr": 156,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-09-05T08:49:40Z",
      "side": 1,
      "message": "This should be done in this SPDM daemon. Typically, this SPDM daemon will call to libspdm library to construct SPDM protocol messages, which will further call into transport layer send/receive function to exchange messages between BMC and the device.\n\nTo be clarified, the SPDM daemon can be an independent daemon or it can be a service provided by the device management daemon. In this design, we do not force it into one way or another. Instead, we intend to provide a library to help implement the feature needed by this SPDM daemon.",
      "parentUuid": "e8294c3e_00def06f",
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a80f33f8_0fdc7332",
        "filename": "designs/redfish-spdm-attestation.md",
        "patchSetId": 4
      },
      "lineNbr": 156,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-09-05T10:04:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c03aa49a_4850bbb0",
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6936a07_6e29e841",
        "filename": "designs/redfish-spdm-attestation.md",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2023-09-11T19:19:31Z",
      "side": 1,
      "message": "System isn\u0027t a good descriptor.  Since the cert manager is using /xyz/openbmc_project/certs, maybe this can be something like \u0027/xyz/openbmc_device_certs\u0027",
      "range": {
        "startLine": 189,
        "startChar": 13,
        "endLine": 189,
        "endChar": 20
      },
      "revId": "1d47fc466f7145ab5ad584b7f00479fd43804cae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}