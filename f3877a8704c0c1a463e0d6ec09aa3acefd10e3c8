{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3eaf9899_342c20b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-03-09T14:08:31Z",
      "side": 1,
      "message": "Adding Matt as one of the phosphor-logging maintainers (who was missing from the review).",
      "revId": "f3877a8704c0c1a463e0d6ec09aa3acefd10e3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f2602b2_980922f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-09T21:42:18Z",
      "side": 1,
      "message": "Thanks for proposing this!\n\nAt a core level, this design doesn\u0027t seem workable.  It pushes Redfish specifics throughout the system, doesn\u0027t integrate with the existing EventService or logging registry implementations, makes no mention of how message registries are constructed, and is missing large details about how this feature will work.  Even the code samples are incomplete.  If you really think this design is workable, it would be best to document a solution that:\n\n1. Creates a correct message registry from the existing phosphor-dbus-logging events.  If you\u0027re completely replacing the events or mapping them to the existing registry, that needs discussed in much more detail about how that works, and what part in the system owns that mapping.  Each individual daemon mapping logging-id to redfish id is error prone, and difficult to maintain.\n2. Doesn\u0027t require every daemon to understand the full structure of Redfish URIs, given they don\u0027t have dependencies for parsing dbus entries in to http uris and Ids.  in bmcweb, we quite often have to change the ID generation scheme for a collection, and every collection uses a different ID generation scheme, so it\u0027s not clear to me how this would work at any kind of scale.\n\nLooking forward to seeing your additions.",
      "revId": "f3877a8704c0c1a463e0d6ec09aa3acefd10e3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a76ff542_4d474399",
        "filename": "architecture/redfish-logging-in-bmcweb.md",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-09T21:42:18Z",
      "side": 1,
      "message": "We definitely shouldn\u0027t be pushing ResourceEvent items anywhere outside of bmcweb.  Doing this requires ALL daemons in the bmc to understand how to construct a Redfish URI and ID, which changes over time, and is largely specified by code, so the likelihood that individual daemons can get it correct over time is basically nil.  It should also be noted that a redfish resource is not generated by a single dbus interface or object in all cases, so for any non trivial example, this doesnt work.\n\nI suspect what we need to do is add a mapping from phosphor-logging event, into either a new \"OpenbmcDbus\" registry, or new entries within the existing message registry.",
      "range": {
        "startLine": 178,
        "startChar": 24,
        "endLine": 178,
        "endChar": 37
      },
      "revId": "f3877a8704c0c1a463e0d6ec09aa3acefd10e3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f17dc27_cfe30ed5",
        "filename": "architecture/redfish-logging-in-bmcweb.md",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-03-09T14:07:11Z",
      "side": 1,
      "message": "This is not workable.  I don\u0027t want to see details of Redfish spread across every application.  There is no reason for any particular daemon to be tied to any particular management protocol.  Otherwise, we\u0027re going to start seeing IPMI_ARGS and PLDM_ARGS and ...\n\nIn my opinion, the REDFISH_MESSAGE_ID should be able to be generated from the phosphor-logging event type.  The MESSAGE_ARGS should simply be _all_ of the arguments of the phosphor-logging event type.",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 179,
        "endChar": 76
      },
      "revId": "f3877a8704c0c1a463e0d6ec09aa3acefd10e3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e5756d6_f97f0f83",
        "filename": "architecture/redfish-logging-in-bmcweb.md",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-09T21:42:18Z",
      "side": 1,
      "message": "I see no mention of how the message registry for this will be constructed, and the code samples have significant missing code.  Please add a real example, including constructing the message args.",
      "revId": "f3877a8704c0c1a463e0d6ec09aa3acefd10e3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}