{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ddd3a211_16c7131e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-19T21:08:11Z",
      "side": 1,
      "message": "@deepak.kodihalli.83@gmail.com @rushtotom@gmail.com Why was this design changed again? Why was the design with common code-updater-manager dropped?",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d76ed147_38e849c7",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 379,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-20T01:42:25Z",
      "side": 1,
      "message": "I couldn\u0027t review this code as there are merge conflicts on this patch and @unive.tien.wiwynn@gmail.com is working on fixing the conflicts. But agree if there is an Implementation issue in the patch, it should be fixed.\n\nFor example, implementation shouldn\u0027t violate spec for \"NOTE: A single FD is only permitted to have one update flow ongoing, while a UA may have multiple flows simultaneously in process if they are to multiple FDs.\"\n\n@unive.tien.wiwynn@gmail.com Please make sure the implementation takes care of this spec restriction and StartUpdate returns Unavailable error if there is an Update already in Progress for an FD.",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a512009d_2b5ad9b5",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 379,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-09-09T18:26:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d76ed147_38e849c7",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44fea52d_b799236e",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 381,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-19T21:39:22Z",
      "side": 1,
      "message": "I can understand you have a use case for multi-part image but PLDM spec also supports single component/device update. We cannot drop that usecase. You can add your usecase as an addition.\n\nPlease refer to discord discussion and response from @deepak.kodihalli.83@gmail.com here \n\nhttps://discord.com/channels/775381525260664832/778790638563885086/1404645377470107898\n\n\"Component image ordering may not apply to some users if their devices don\u0027t have multiple component images. It should be possible to turn off/on either component level StartUpdate or top-level StartUpdate.\"",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bab69ec_a35c3460",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 381,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-21T06:25:00Z",
      "side": 1,
      "message": "We are not dropping the single component update use-case. @rushtotom@gmail.com please call that out explicitly here.",
      "parentUuid": "44fea52d_b799236e",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe8a1d97_43485955",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 381,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-09-09T18:26:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "6bab69ec_a35c3460",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7964ff1_c94408ca",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 382,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-19T21:39:22Z",
      "side": 1,
      "message": "Just asked you to add the Application level updater as an addition on a reply on your last proposal. Please check that response.",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "487b7caf_3f70ff97",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 382,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-09-09T18:26:44Z",
      "side": 1,
      "message": "The design doc is updated to handle multipart image without targets.",
      "parentUuid": "a7964ff1_c94408ca",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5f36494_0837bbb1",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 385,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-19T21:39:22Z",
      "side": 1,
      "message": "Why was the main option of code-update-manager dropped in the recent version of design and moved to PLDMd?",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1089020_c26219b6",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 385,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-21T06:25:00Z",
      "side": 1,
      "message": "The design doc has been trimmed down to handle the two new requirements you see in the patch for PLDM devices. PLDM itself is a multipart orechestrator for PLDM devices. We\u0027d like to make that work in pldmd regardless of non-pldm device images.\n\nFor handling mix of non-pldm and pldm images in the same package, one option is pldmd. The other option is new orchestrator. There wasn\u0027t much feedback/interest in mixing non-pldm/pldm images so we will follow up on that via ML discussion.",
      "parentUuid": "b5f36494_0837bbb1",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f08f4361_e17c1de4",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 385,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-21T22:02:26Z",
      "side": 1,
      "message": "Whats \"ML discussion\"?",
      "parentUuid": "d1089020_c26219b6",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c19941e_e520e48a",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 385,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-22T06:45:12Z",
      "side": 1,
      "message": "Mailing List",
      "parentUuid": "f08f4361_e17c1de4",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf428143_2caba512",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 385,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-28T06:15:20Z",
      "side": 1,
      "message": "Done as the doc now focuses on bundle update with no targets specified.",
      "parentUuid": "6c19941e_e520e48a",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a40b7b5_c034deb1",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 390,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-19T21:39:22Z",
      "side": 1,
      "message": "How would BMCWeb know where to pass the image? Keep in mind that your design need to co-exist with device/component level update as that is supported by PLDM firmware update spec.",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64f05fff_b91b891f",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 390,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-21T06:25:00Z",
      "side": 1,
      "message": "@rushtotom@gmail.com we need to add some options here:\n1) Bmcweb and pldmd use build time flags to enable only one of app-level update and component-level update.\n\n2) Pldmd uses a build time flags to enable only one of app-level update and component-level update. Bmcweb handles this by having a code path for 0 targets specified + only one object implementing StartUpdate (Rajeev has a patch for this).\n\n3) New PDI - we had this before but got pushbac; let\u0027s add this option and point to PDI patch. If bmcweb finds this interface on an object AND no targets are specified then it sends FW image to this target via StartUpdate API.\n\n3 is most elegant and I would prefer that and then 2.\n\nRegardless of the above, when a single target is specified, existing design should be used (call this out in the patch here).\n\nWhat this proposal is not solving yet (and incremental updates should be fine because even the existing design solved only component level update)\n- Multiple Targets\n- Mix on PLDM and Non-PLDM components in PLDM package",
      "parentUuid": "9a40b7b5_c034deb1",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1a334e7_79a9a989",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 390,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-21T22:02:26Z",
      "side": 1,
      "message": "\u003e @rushtotom@gmail.com we need to add some options here:\n\u003e 1) Bmcweb and pldmd use build time flags to enable only one of app-level update and component-level update.\n\u003e \n\u003e 2) Pldmd uses a build time flags to enable only one of app-level update and component-level update. Bmcweb handles this by having a code path for 0 targets specified + only one object implementing StartUpdate (Rajeev has a patch for this).\n\nWe cannot have the assumption in BMCWeb code \"one object implementing StartUpdate\" as this is the common daemon. In future, if there is a usecase to develop Mulitpart-updater that co-exist with Component level updater then this assumption will break and will cause more pain.\n\n\u003e \n\u003e 3) New PDI - we had this before but got pushbac; let\u0027s add this option and point to PDI patch. If bmcweb finds this interface on an object AND no targets are specified then it sends FW image to this target via StartUpdate API.\n\nDesign was in review and was going through review iterations. As part of my last review feedback i had given comments on how to fix/update verbatim of pros and cons stuff with bunch of other questions, after that in my last review design was completely changed. Related to PDI interface https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/78905/comment/2b6c9e71_81d90665/, refer to my last comment. I had clearly mentioned that based on alignment on design (which was in progress) we can come back and brainstorm more on this .\n\n\u003e \n\u003e 3 is most elegant and I would prefer that and then 2.\n\nI would prefer New PDI interface. You can revive that PR for further discussions on the interface.",
      "parentUuid": "64f05fff_b91b891f",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abe16284_7e5b64ce",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 390,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-22T06:52:46Z",
      "side": 1,
      "message": "2) is not an assumption, it\u0027s a conditional check, but I agree PDI is cleaner. As noted elsewhere design has been trimmed down to tackle key gaps first (the two added in the requirements) and we can work on other issues incrementally. Don\u0027t want to boil the ocean with this proposal.",
      "parentUuid": "e1a334e7_79a9a989",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c91b4727_8d5292a2",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 390,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-09-09T18:26:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abe16284_7e5b64ce",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adf984d1_6478e8df",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 406,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-19T21:39:22Z",
      "side": 1,
      "message": "Looks like you are folding the code-update-manager for multipart image into PLDMd. Why is that?",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44c06189_ba2b4270",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 406,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-21T06:25:00Z",
      "side": 1,
      "message": "I don\u0027t think we should be bring in mixing of non-PLDM and PLDM component images in a single bundle usecase now. Let\u0027s solve that incremantally. As noted above:\n\nThe design doc has been trimmed down to handle the two new requirements you see in the patch for PLDM devices. PLDM itself is a multipart orechestrator for PLDM devices. We\u0027d like to make that work in pldmd regardless of non-pldm device images.\n\nFor handling mix of non-pldm and pldm images in the same package, one option is pldmd. The other option is new orchestrator. There wasn\u0027t much feedback/interest in mixing non-pldm/pldm images so we will follow up on that via ML discussion.",
      "parentUuid": "adf984d1_6478e8df",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7dbe138_a7d5d866",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 406,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-09-09T18:26:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44c06189_ba2b4270",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85f0d6fe_afb8d310",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 412,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-08-19T21:39:22Z",
      "side": 1,
      "message": "Why it has to be PLDMd?",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9a56651_aa099475",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 412,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-21T06:25:00Z",
      "side": 1,
      "message": "I don\u0027t think we should be bring in mixing of non-PLDM and PLDM component images in a single bundle usecase now. Let\u0027s solve that incremantally. As noted above:\n\nThe design doc has been trimmed down to handle the two new requirements you see in the patch for PLDM devices. PLDM itself is a multipart orechestrator for PLDM devices. We\u0027d like to make that work in pldmd regardless of non-pldm device images.\n\nFor handling mix of non-pldm and pldm images in the same package, one option is pldmd. The other option is new orchestrator. There wasn\u0027t much feedback/interest in mixing non-pldm/pldm images so we will follow up on that via ML discussion.",
      "parentUuid": "85f0d6fe_afb8d310",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2351d4a5_571735c9",
        "filename": "designs/code-update.md",
        "patchSetId": 20
      },
      "lineNbr": 412,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-09-09T18:26:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9a56651_aa099475",
      "revId": "80fd227434d613de0ed387a2b8d3f7d98f9eecc5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}