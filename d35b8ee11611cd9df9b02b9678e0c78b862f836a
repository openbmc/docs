{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "42286a6c_5cc8c1b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001330
      },
      "writtenOn": "2022-01-25T05:35:18Z",
      "side": 1,
      "message": "Thank you for your review Andrew and Matt. I have uploaded a new patchset to address your comments. This should provide a more details context of the proposal with examples. \n\nRequesting a review. This was a bigger change but I will be more engaging on reviews going forth. ",
      "revId": "d35b8ee11611cd9df9b02b9678e0c78b862f836a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc7dd7db_f823e8e7",
        "filename": "designs/phosphor-logging-namespaces.md",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-01-26T16:46:39Z",
      "side": 1,
      "message": "What if the persistent location was just deduced from the namespace name?\n\nlike namespace gpu0 would always be stored in /var/lib/phosphor-logging/errors/gpu0?",
      "range": {
        "startLine": 122,
        "startChar": 7,
        "endLine": 122,
        "endChar": 66
      },
      "revId": "d35b8ee11611cd9df9b02b9678e0c78b862f836a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc350264_04016457",
        "filename": "designs/phosphor-logging-namespaces.md",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1001330
      },
      "writtenOn": "2022-01-26T18:27:50Z",
      "side": 1,
      "message": "Yes that can be done too. Giving this to the user gives a flexibility?",
      "parentUuid": "cc7dd7db_f823e8e7",
      "range": {
        "startLine": 122,
        "startChar": 7,
        "endLine": 122,
        "endChar": 66
      },
      "revId": "d35b8ee11611cd9df9b02b9678e0c78b862f836a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43ce497e_31c013c6",
        "filename": "designs/phosphor-logging-namespaces.md",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-01-26T16:46:39Z",
      "side": 1,
      "message": "I don\u0027t see how a namespaced event log would be created still?",
      "revId": "d35b8ee11611cd9df9b02b9678e0c78b862f836a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06f56dd5_36e192c6",
        "filename": "designs/phosphor-logging-namespaces.md",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1001330
      },
      "writtenOn": "2022-01-26T18:27:50Z",
      "side": 1,
      "message": "Matt, would the para from 138 to 167 above answer your question? The namespace event logs created in the para are `/xyz/openbmc_project/logging/gpu0/entry/1` which would at location `/var/lib/phosphor-logging/errors/gpu0`. \n\nCode wise, we are essentially creating new D-Bus paths (e.g. `/xyz/openbmc_project/logging/gpu0/entry/1`) per namespace, a new internal manager instance per namespace will take care of creating the log on the persistent file system and create a corresponding D-Bus object. \n\nDoes this help answer the question?",
      "parentUuid": "43ce497e_31c013c6",
      "revId": "d35b8ee11611cd9df9b02b9678e0c78b862f836a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7939037d_e009d233",
        "filename": "designs/phosphor-logging-namespaces.md",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-01-26T18:51:26Z",
      "side": 1,
      "message": "Thanks.  Maybe you could the wording that states that logs will be created by calling the Commit or CommitWithLvl interfaces on the instances of the xyz.openbmc_project.Logging.Internal.Manager interfaces in the namespaces.\n\nDo you plan on calling those methods directly, or build them into the commit\u003c\u003e() and report\u003c\u003e() libphosphor_logging functions somehow?",
      "parentUuid": "06f56dd5_36e192c6",
      "revId": "d35b8ee11611cd9df9b02b9678e0c78b862f836a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}