{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fe42ed1d_4f77a5c4",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1001317
      },
      "writtenOn": "2023-03-23T01:20:53Z",
      "side": 1,
      "message": "Here, after receiving the response from RDE device it is mentioned that we use \"Stored Dictionaries\" to decode the response. \n1) Suggestion would be to fetch the required dictionaries on the fly so that we will save some space. \n2) If plan is to move with the approach of using stored dictionaries how are we planning to delete the same when the device is removed ? Could you please share some info on that ?",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4dbfc0f_140f3025",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1001582
      },
      "writtenOn": "2023-03-23T22:06:43Z",
      "side": 1,
      "message": "1) Yes, the dictionaries would be eventually stored on the fly as they are part of RDE Discovery phase. For getting dictionaries we require a set of resource IDs. The resource IDs will be retrieved when we implement PLDM PDR type for RDE daemon. (This design is not including the PLDM PDR as of now- which would take care of getting the resource ids, resource id to URI mapping etc.). But for sure the dictionaries would be populated in maps dynamically for all the required resource IDs supported by the RDE device.\n\n2) We are running a Detector-Reactor architecture for monitoring RDE Devices. Once the reactor gets a signal (using a DBus matcher) that a RDE device is removed, we can clean up the Dictionaries in the map. That should not be much of a problem (more of an implementation thing). \n\nShort answer: Our reactor should take care of cleaning up object paths and any related data for the removed RDE device. Correspondingly, the reactor should also take care of creating paths, doing discoveries when a new device is found.",
      "parentUuid": "fe42ed1d_4f77a5c4",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0e4d090_68af390d",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1001317
      },
      "writtenOn": "2023-03-24T04:31:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d4dbfc0f_140f3025",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c057ffd_952d2347",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1001194
      },
      "writtenOn": "2023-03-20T19:31:23Z",
      "side": 1,
      "message": "existing ??",
      "range": {
        "startLine": 127,
        "startChar": 61,
        "endLine": 127,
        "endChar": 69
      },
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d0652fe_0fab9fb4",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1001582
      },
      "writtenOn": "2023-03-20T23:50:42Z",
      "side": 1,
      "message": "pldm_recv() is a function exposed by libpldm for receiving pldm packets. I can add some links here.",
      "parentUuid": "6c057ffd_952d2347",
      "range": {
        "startLine": 127,
        "startChar": 61,
        "endLine": 127,
        "endChar": 69
      },
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9d6594f_e2838180",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1001317
      },
      "writtenOn": "2023-03-21T07:07:42Z",
      "side": 1,
      "message": "Hope we need PDR information of each device also. So it would be good to include that as well",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1860587_64800c79",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1001582
      },
      "writtenOn": "2023-03-21T17:16:44Z",
      "side": 1,
      "message": "Technically we do need PDR information for each device. But for starters, out of the PDR information what we actually need is just a mapping from URI to a resource Id (since RDE device only recognizes resources by Resource ID and every Redfish URI must have a corresponding Resource ID in an RDE Device).\n\nWe can definitely work on PDR information storage in further phases.",
      "parentUuid": "f9d6594f_e2838180",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd346187_b9852eb8",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1001317
      },
      "writtenOn": "2023-03-23T01:20:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e1860587_64800c79",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56178a95_2d735d69",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 184,
      "author": {
        "id": 1001582
      },
      "writtenOn": "2023-03-23T22:06:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bd346187_b9852eb8",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "164a1784_fbc6ae2d",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1001194
      },
      "writtenOn": "2023-03-20T19:31:23Z",
      "side": 1,
      "message": "beginning?",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3faf54d7_5502c5fe",
        "filename": "designs/redfish-device-enablement.md",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 1001582
      },
      "writtenOn": "2023-03-20T23:50:42Z",
      "side": 1,
      "message": "Sorry i did not understand this! Would you elaborate the question?",
      "parentUuid": "164a1784_fbc6ae2d",
      "revId": "4e6fea98b634ba94de34cd3dd770727253b436fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}