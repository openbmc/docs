{
  "comments": [
    {
      "key": {
        "uuid": "394856bb_9d9c9c62",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-20T11:54:19Z",
      "side": 1,
      "message": "If you make another change, please adjust indentation to match the formatting above.",
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b000a1f5_ad863f1c",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-20T20:01:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "394856bb_9d9c9c62",
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1b0f79f_0fa72e84",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-20T11:54:19Z",
      "side": 1,
      "message": "I don\u0027t really like this design, but would like Ed to give some feedback.\n\nIt seems flawed in two ways:\n    1. There is an implication by the example (which might just be due to the minimal example) that all cable connectors are on the same FRU given by the same Exposes, but that\u0027s not likely in practice.\n\n    2. Once Exposes are given by different FRUs there is no way for the IPMI provider to know which ones are suppose to be there and which ones aren\u0027t and which position they need to be in.  If the FRU holding cable5 doesn\u0027t show up, and thus doesn\u0027t have an object, how does the IPMI provider know to skip \u00275\u0027 in the bitfield?\n\nMaybe you\u0027re actually intending the provider to parse the number in the path and put it into a bitfield (mod 14)?  We should be very clear about what the schema is thus required for cable names.  I would suggest an underscore as a separator in the name in that case (ie. cable_5).",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd774983_51d9dfb4",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-20T20:01:35Z",
      "side": 1,
      "message": "the trailing index is also the position index. For example, if cable_5 is missing, when we reconstruct the object path, we will get read error on cable_5. Therefore, cable_5 is left as not present (bit index 5 left as 0). In this way, the order of cables are guaranteed.\n\nYes, cable_5 sounds better.",
      "parentUuid": "b1b0f79f_0fa72e84",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86bc33e8_33849f15",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-20T20:47:22Z",
      "side": 1,
      "message": "\u003e the trailing index is also the position index.\n\nPlease make this clearer in the document.  It isn\u0027t obvious that you need specific numbers which correspond to specific IPMI bits.\n\nIf this is true, then why do we need \"the cables should be grouped into two different groups\"?  Shouldn\u0027t the IPMI code be able to do a mod-14 to find the bit position for what you\u0027re currently calling the B group?",
      "parentUuid": "bd774983_51d9dfb4",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd5131c4_634ef792",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-20T23:16:58Z",
      "side": 1,
      "message": "each discrete sensor can hold at hold 14 presence per ipmi specification doc. Therefore, when you have more than 14, say 16, the 15th and 16th need to go to the next sdr/group. And yes, we can do a mod operator to get correct index but since we already using a different sdr, I would suggest us to start counting from 0 again to make thing more explicit.\n\nI will update the doc with more explanation.",
      "parentUuid": "86bc33e8_33849f15",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23181fb4_cca03b0b",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-21T00:26:55Z",
      "side": 1,
      "message": "I don’t really understand why you’d want this to be “explicit”. Why force a detail of IPMI through your entire inventory stack?  It isn’t like you’re actively defining the IPMI SDR number anyhow, so someone has to figure all that out.",
      "parentUuid": "fd5131c4_634ef792",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59ba4dae_6cad3690",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-21T19:07:16Z",
      "side": 1,
      "message": "Ok. Are you suggesting that we should hide the grouping information from the EntityManager JSON file? For example:\nInstead of:\n```\n    {\n      \"Name\": \"cableGroupA_0\",\n      \"GpioLine\": \"gpio_pin0\",\n      \"IsActiveLow\": true,\n      \"Type\": \"GPIOSensing\"\n    },\n    ....\n    {\n      \"Name\": \"cableGroupB_0\",\n      \"GpioLine\": \"gpio_pin14\",\n      \"IsActiveLow\": true,\n      \"Type\": \"GPIOSensing\"\n    },\n```\nit should be:\n```\n    {\n      \"Name\": \"cable_0\",\n      \"GpioLine\": \"gpio_pin0\",\n      \"IsActiveLow\": true,\n      \"Type\": \"GPIOSensing\"\n    },\n    ....\n    {\n      \"Name\": \"cable_14\",\n      \"GpioLine\": \"gpio_pin14\",\n      \"IsActiveLow\": true,\n      \"Type\": \"GPIOSensing\"\n    },\n\n```\nMeanwhile, the grouping logic should be hidden in the ipmi-provider. For example, when we reach  14 presence states in one sdr, we automatically jump to a new sdr. Am I understand the suggestion correct?",
      "parentUuid": "23181fb4_cca03b0b",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03fe9522_a8e657cf",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-23T15:47:42Z",
      "side": 1,
      "message": "I\u0027m not implying one is right and one is wrong.  Either one can work and they have different pros/cons.  My opinion is that having a single group at an EM level is more intuitive and that, in general, we shouldn\u0027t push IPMI requirements (or Redfish for that matter) too deep into the application stacks if it isn\u0027t necessary.\n\nI think it is reasonable for you to solicit feedback from others and get some consensus.  Whichever approach you chose, the other approach probably belongs being discussed in the \"Alternatives Considered\".\n\n\u003e Are you suggesting that we should hide the grouping information from the EntityManager JSON file?\n\nYes.  That is my preference.  You may have reasons for wanting to keep them separate though which is stronger.",
      "parentUuid": "59ba4dae_6cad3690",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3037075_b9e8f9e1",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-23T23:25:07Z",
      "side": 1,
      "message": "\u003e   1. There is an implication by the example (which might just be due to the minimal example) that all cable connectors are on the same FRU given by the same Exposes, but that\u0027s not likely in practice.\"\n\nI\u0027m not following this statement.  In general, you would include the exposes records on the entity that \"exposed\" them, which in most cases will be the thing that contains the ports.\n\n\u003e  Once Exposes are given by different FRUs there is no way for the IPMI provider to know which ones are suppose to be there and which ones aren\u0027t and which position they need to be in.  If the FRU holding cable5 doesn\u0027t show up, and thus doesn\u0027t have an object, how does the IPMI provider know to skip \u00275\u0027 in the bitfield?\"\n\nthis is for sure a concern.  Presumably we\u0027d code this up so that all ports are implicitly created, and might just have the Presence field set to false.\n\n\n\u003e  And yes, we can do a mod operator to get correct index but since we already using a different sdr, I would suggest us to start counting from 0 again to make thing more explicit.\"\n\nNo, we shouldn\u0027t, as this could get really confusing for users looking at the dbus API, when it\u0027s simple enough to code mod 14 in IPMI.\n\n\u003e  I don’t really understand why you’d want this to be “explicit”. Why force a detail of IPMI through your entire inventory stack?\"\n\n+1 to this.  14-bit limits are IPMI specific, which we should avoid propagating through other places.  If we started over at 0, in redfish you would see two cables with index 0, which would be an issue.\n\n\n\n\u003e  Are you suggesting that we should hide the grouping information from the EntityManager JSON file? \"\n\nIn one of my other comments, I proposed that this all should be a single exposes record, which I think simplifies this config a lot.\n\n\n\n\n\nI tried to hit a bulk of the questions in this thread;  Let me know if you\u0027re still confused or I missed one.",
      "parentUuid": "03fe9522_a8e657cf",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "accf1004_2bb31805",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-24T23:55:04Z",
      "side": 1,
      "message": "I still think using a flat list for config feels more nature from the redfish perspective. Please review the revised design doc.",
      "parentUuid": "a3037075_b9e8f9e1",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 70,
        "endChar": 67
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cb5883a_4ea50220",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 124,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-20T11:54:19Z",
      "side": 1,
      "message": "Is this intended to be a bullet point? (*,-, or +)  As it is you\u0027re going to be shouting an H1.",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 124,
        "endChar": 1
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c866fd_145d759d",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 7
      },
      "lineNbr": 124,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-20T20:01:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cb5883a_4ea50220",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 124,
        "endChar": 1
      },
      "revId": "704252e1325e19680562ebfae1588731bf065586",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}