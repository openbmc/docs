{
  "comments": [
    {
      "key": {
        "uuid": "017ef8ae_08a19353",
        "filename": "designs/EEPROM-byte-type-identification.md",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T17:36:43Z",
      "side": 1,
      "message": "I have no interest in supporting per-machine services in entity-manager.  If you need a per-machine service, write an entity-manager reactor, which can be be per-machine.",
      "range": {
        "startLine": 61,
        "startChar": 55,
        "endLine": 62,
        "endChar": 40
      },
      "revId": "ab2952761d7bfc6099dd70cb29dea00242ee9040",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b3c2752_b9b3277e",
        "filename": "designs/EEPROM-byte-type-identification.md",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T17:36:43Z",
      "side": 1,
      "message": "Please avoid making this a script.  They are difficult to debug and maintain over time.",
      "range": {
        "startLine": 65,
        "startChar": 51,
        "endLine": 65,
        "endChar": 57
      },
      "revId": "ab2952761d7bfc6099dd70cb29dea00242ee9040",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ca16a3_dc8734d6",
        "filename": "designs/EEPROM-byte-type-identification.md",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T17:36:43Z",
      "side": 1,
      "message": "I\u0027m not following this step.  If you don\u0027t know if the eeprom is 8 bit or 16 bit, how does this script suddenly bypass the \"detect 16 bit eeprom\" problem?  Won\u0027t this script have the same issue as the FruDevice code does?",
      "range": {
        "startLine": 65,
        "startChar": 75,
        "endLine": 66,
        "endChar": 52
      },
      "revId": "ab2952761d7bfc6099dd70cb29dea00242ee9040",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ecda658_bcc04a20",
        "filename": "designs/EEPROM-byte-type-identification.md",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T17:36:43Z",
      "side": 1,
      "message": "To repeat, if you want a platform-specific service, write and maintain a platform specific service.  Dbus is your extension point and interface there;  If you want to reuse code from FruDevice for it, abstract it to a library (a lot of that work has already been done).  I\u0027m not interested in having a plugin system for FruDevice, which is intended to be self-contained.",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 72,
        "endChar": 58
      },
      "revId": "ab2952761d7bfc6099dd70cb29dea00242ee9040",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a9dc133_a1f4f31d",
        "filename": "designs/EEPROM-byte-type-identification.md",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-17T17:36:43Z",
      "side": 1,
      "message": "In this flow, you\u0027ve basically described how this should work, you\u0027ve just added a number of pieces that are extra and not needed.\n\n1. In the \"Type\": \"eeprom\" entry for a given device, include a parameter called \"size\" that can determine whether the eeprom is 16 bit or 8 bit.\n2. Determine how to detect the \"is 16 bit\" of a given device without pre-defined knowledge of said device, or attach the relevant information to the baseboard configuration for something like \"Eeprom hint\"\n3. Add the backward path to FruDevice such that FruDevice looks at the size parameter, and uses that to set the 16bitness of the part.",
      "revId": "ab2952761d7bfc6099dd70cb29dea00242ee9040",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}