{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "79f3a90c_a499eb78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-12T15:07:41Z",
      "side": 1,
      "message": "I think we have to be really careful about just suggesting that everyone enable every clang-tidy option in existence.  Some of these are coding style recommendations from Google, LLVM, etc. which are not our coding style.  Worse is that by enabling all of these, we end up with the _union_ of all coding styles that exist.\n\nI\u0027m fine with security and performance ones and ones raised by the cpp core guidelines (since we explicitly call that out anyhow) but I don\u0027t think we should enable big sets of the other ones.",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79b62959_6ea054f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-12T15:21:30Z",
      "side": 1,
      "message": "Need inputs from on why these checks enabled on BMCWeb .",
      "parentUuid": "79f3a90c_a499eb78",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31f9690b_53b85b16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-12T15:30:31Z",
      "side": 1,
      "message": "If bmcweb wants to enable additional checks on their repository, that is sort of up to them, but we need to make a clear statement for the entirety of the project.  \n\n\"First mover status\" is not a reason to follow everything in bmcweb and I don\u0027t think it is reasonable for us to even spend time coming to consensus on 400 checks.",
      "parentUuid": "79b62959_6ea054f1",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e223eb74_c15d2954",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-12T17:14:40Z",
      "side": 1,
      "message": "To gather early feedback, I initiated discussions on Discord and the mailing list. I also started reviews on selected active repositories to get input from repository users. To kick off the discussion, I began with a base configuration that includes existing checks used across repositories, which enabled tidy checks. I agree with your approach and will not merge any common configuration files until this version is approved by all interested parties. Additionally, we should consider options for using a combination of common and repository-specific sections, which will facilitate future migrations across repositories. This approach will also help accommodate any base configuration changes based on future .clang-tidy releases.",
      "parentUuid": "31f9690b_53b85b16",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d162f3cf_0e9ca883",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-12T17:26:09Z",
      "side": 1,
      "message": "We need some understanding of what it means to be a \"reference\".  I see the file below was copied from bmcweb (because bmcweb adds some things that shouldn\u0027t be in a general file, and also has history that no longer applies to modern tidy).  Is there a plan to sync this to all repositories and get the issues resolved?\n\nAs much as I really want to see us get to the point where we can claim that the majority of the code passes all these these checks, I don\u0027t think this patch gets us closer to that goal.  Rather than integrating the required changes to the repositories, we debate each individual check, which frankly is a waste of time at this point.  There\u0027s a lot of junk checks in tidy that I enabled in bmcweb just because it was there and passed.\n\nI would much rather we start with one check in the reference file that we want to universally apply, and get that deployed to all our c++ repos.  The actual check almost doesn\u0027t matter (I might recommend the no non-const global variables check), but getting it deployed across the project and the project passing ALSO gets the project compiling against clang, which enables different warnings, and when I\u0027ve turned it on in bmcweb/dbus-sensors/entity-manager, almost always found functional bugs (usually in an error handling case).\n\nOnce we are universally using tidy, and have the rules around things like NOLINT understood then we can incrementally add checks.\n\n\nTo be clear, I want us to get to the point where this can merge, I just think the incremental approach is better.\n\nTL; DR\nTimeline: One check universally applied -\u003e Several checks universally applied -\u003e This patch (or a variation of this patch)",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8c1566c_9fb29f6c",
        "filename": "style/cpp/.clang-tidy-cpp",
        "patchSetId": 6
      },
      "lineNbr": 165,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-12T15:00:21Z",
      "side": 1,
      "message": "@ed BMCWeb curently using  OSX, Fuscia, Webkit specific checks, There is question cam from @stwcx and @manokiran on this Can you please provide inputs related to this ?",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bab034be_e2954698",
        "filename": "style/cpp/.clang-tidy-cpp",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-12T15:07:41Z",
      "side": 1,
      "message": "There is no reason to have any OSX checks in our reference file.",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 200,
        "endChar": 64
      },
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d96eeb32_ca582de0",
        "filename": "style/cpp/.clang-tidy-cpp",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-12T15:07:41Z",
      "side": 1,
      "message": "This one is another one that is a Google coding style but not ours.",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9456925d_a73692ec",
        "filename": "style/cpp/.clang-tidy-cpp",
        "patchSetId": 6
      },
      "lineNbr": 352,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-12T15:07:41Z",
      "side": 1,
      "message": "This doesn\u0027t even do anything without additional configuration.",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f274075_24893415",
        "filename": "style/cpp/.clang-tidy-cpp",
        "patchSetId": 6
      },
      "lineNbr": 354,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-12T15:07:41Z",
      "side": 1,
      "message": "Some of these are LLVMs coding styles but not our coding styles.  This is one I especially hate because it defeats the purpose of using auto in the first place.  How do we determine which of these we really care about?\n\nWe have almost 400 checks enabled in this file.  I don\u0027t see how that is practical to review and maintain this.",
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0378435c_bf8b6d7d",
        "filename": "style/cpp/.clang-tidy-cpp",
        "patchSetId": 6
      },
      "lineNbr": 386,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-12T15:07:41Z",
      "side": 1,
      "message": "This isn\u0027t appropriate for all repositories.  Should we even bother with it?",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 386,
        "endChar": 79
      },
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e29d265_622a479d",
        "filename": "style/cpp/.clang-tidy-cpp",
        "patchSetId": 6
      },
      "lineNbr": 386,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-12T15:20:14Z",
      "side": 1,
      "message": "This one added as a reference for openbmc naming conventions. I noticed some of checks are specific  to repository.  It will be good to Keep the Naming convention here that will help repo users/maintainers to follow the OpenBMC naming convention.s",
      "parentUuid": "0378435c_bf8b6d7d",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 386,
        "endChar": 79
      },
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "672c6336_73588c4b",
        "filename": "style/cpp/.clang-tidy-cpp",
        "patchSetId": 6
      },
      "lineNbr": 386,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-12T15:28:14Z",
      "side": 1,
      "message": "There is a conflict with what is written here though:\n\nhttps://github.com/openbmc/docs/blame/67032dffe31f98a8638927f74a7a35990d6a1fbc/cpp-style-and-conventions.md#L327\n\nThere isn\u0027t any way (that I know of) to say that lower_case is always allowed.  That is how some repos are written.",
      "parentUuid": "6e29d265_622a479d",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 386,
        "endChar": 79
      },
      "revId": "b17a6315b347542d62cd91d4b59a0c450233a17e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}