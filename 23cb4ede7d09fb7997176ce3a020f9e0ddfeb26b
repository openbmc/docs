{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "460632a5_9979bbd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Didn\u0027t quite make it all the way through, but figured quick feedback was important.\n\nThis is already looking MUCH better, so thank you for that.  This version:\n1. Accounts for what exists today.\n2. Attempts to add to it in a way that can be reused by others.",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8f94ed7_b979ba17",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "I think you mistyped.  OEM roles can be added via post to RolesCollection, not AccountService.  POST to AccountService creates users.",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 47,
        "endChar": 29
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea8a2dc5_1aae26b6",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "I changed it to RoleCollection in AccountService.",
      "parentUuid": "b8f94ed7_b979ba17",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 47,
        "endChar": 29
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c549cec9_a18a72e6",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 133,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Nit, probably don\u0027t need to put google here.  These use cases aren\u0027t specific to us.",
      "range": {
        "startLine": 133,
        "startChar": 9,
        "endLine": 133,
        "endChar": 15
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24f82c91_c9234d4c",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 133,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Done, changed to modern systems",
      "parentUuid": "c549cec9_a18a72e6",
      "range": {
        "startLine": 133,
        "startChar": 9,
        "endLine": 133,
        "endChar": 15
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f39bf74_c316e79a",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 133,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Changed to modern systems",
      "parentUuid": "c549cec9_a18a72e6",
      "range": {
        "startLine": 133,
        "startChar": 9,
        "endLine": 133,
        "endChar": 15
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45da0968_9ebc8a6f",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Can you call out that this is the DMTF-defined defaults?  You might also mention they are derived from IPMI.",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 29
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fc43f46_a6603fa6",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "I reworded.",
      "parentUuid": "45da0968_9ebc8a6f",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 29
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a0adee6_838581d7",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 142,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "45da0968_9ebc8a6f",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 29
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c16cb7e1_27c464b5",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "What does this mean?",
      "range": {
        "startLine": 158,
        "startChar": 28,
        "endLine": 159,
        "endChar": 13
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f25be65_a549ca43",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 159,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "this is removed",
      "parentUuid": "c16cb7e1_27c464b5",
      "range": {
        "startLine": 158,
        "startChar": 28,
        "endLine": 159,
        "endChar": 13
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "300f2224_266f827f",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 159,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Just removed. I am basically saying OemGoogleRoleXyz won\u0027t be in other company\u0027s systems",
      "parentUuid": "c16cb7e1_27c464b5",
      "range": {
        "startLine": 158,
        "startChar": 28,
        "endLine": 159,
        "endChar": 13
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56110a37_b0068614",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 168,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Can we just rephrase to:\n\nbmc will parse a given registry on input, and reject registries that:\n1. Lock all users out of the BMC\n2. Are improperly formed.\n3. Would prevent the bmc from hosting a correct redfish tree.\n\nFor example, if I POSTed a PrivilegeRegistry that locked everyone out of serviceroot, that would be a problem.",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 168,
        "endChar": 72
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "259b0820_c2e8d0b4",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 168,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "\u003e Are improperly formed.\n\nSure. Added.\n\n\u003e Lock all users out of the BMC\n\u003e Would prevent the bmc from hosting a correct Redfish tree. \n\nHow is this possible? Are you adding too much complexity? How do we implement such check, are we going through every user and examine their privilege?\n\nAlso, how does BMCWeb today prevent a user power cycle the machine continuously so that no other users can really do anything? \n\nMaking the sanity check too complex doesn\u0027t make sense to me. A user with proper permission (e.g., root) is allowed to delete all other users.\n\nWe can do simple check like non-OEM roles and non-OEM privileges and non-OEM mappings can\u0027t be modified.\n\nI have added a handful checks to the requirement:\n1. Users without certain permissions won\u0027t able to delete other users\n2. Privileges, roles in use by at least on user can\u0027t be deleted",
      "parentUuid": "56110a37_b0068614",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 168,
        "endChar": 72
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef3f2454_e72546f7",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 168,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "\u003e How is this possible? Are you adding too much complexity?\n\nIf I created a privilege registry that allowed sensor values with a lower privilege level than chassis, it would be effectively impossible to create a redfish tree that was correct.\n\nInput validation is one pretty core security principal.  We\u0027re just trying to follow standards like this (and similar ones)\nhttps://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html",
      "parentUuid": "259b0820_c2e8d0b4",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 168,
        "endChar": 72
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "998150ef_31d7c8fe",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 172,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Need some additional requirements on maintainability if users can select these things.  Namely that new schema support can be added without modifying all custom users privilege registry.  This will require some additional requirements on how the behavior of that works.",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 172,
        "endChar": 21
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f382020_30a4947b",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 172,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "I added a requirement for this.\n\nI don\u0027t think this requirement makes a difference on the design. If one needs the new resource to be accessible by a role, just add one of the privileges that role has to the PrivilegeRegistry.",
      "parentUuid": "998150ef_31d7c8fe",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 172,
        "endChar": 21
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b9ce65e_35141b05",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 172,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "\u003e just add one of the privileges that role has to the PrivilegeRegistry.\n\nTo _which_ privilege registry?  If all systems have overridend privilege registries, do I have to now go through and update N systems worth of registries?\n\n\u003e I don\u0027t think this requirement makes a difference on the design.\n\nI believe it makes a significant difference in how maintainable this is over time.",
      "parentUuid": "3f382020_30a4947b",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 172,
        "endChar": 21
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0be9281b_84cf82c1",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 175,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Given that PrivilegeRegistry defines this as a requirement, I don\u0027t think this is a may, I think it\u0027s a \"shall\"\n\nOtherwise even your use cases I don\u0027t think can be met.  LogServices use a subordinate override.",
      "range": {
        "startLine": 174,
        "startChar": 55,
        "endLine": 175,
        "endChar": 35
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31448c7d_f4f8f849",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 175,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:06:57Z",
      "side": 1,
      "message": "I know In BaseRegistry: LogService uses a subordinate override; password uses a property override.\n\nJust like the other thread I replied, static overrides (implementing whatever overrides in the BaseRegistry) shall be supported. Changing overrides at runtime may be supported. Is it clear now?",
      "parentUuid": "0be9281b_84cf82c1",
      "range": {
        "startLine": 174,
        "startChar": 55,
        "endLine": 175,
        "endChar": 35
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b562717_c32b34ff",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 175,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "I have reworded.\n\n\"It shall implement all overrides in the Redfish base Privilege registries at compile time; it may support configuring overrides at runtime\"",
      "parentUuid": "31448c7d_f4f8f849",
      "range": {
        "startLine": 174,
        "startChar": 55,
        "endLine": 175,
        "endChar": 35
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f506fce_3e83db3d",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 175,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "both should be \"shall\".  Considering that the default privilege registry will be the base registry, it\u0027s non-sensical if the user can POST the existing setting back as-is.",
      "parentUuid": "6b562717_c32b34ff",
      "range": {
        "startLine": 174,
        "startChar": 55,
        "endLine": 175,
        "endChar": 35
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59aa9d4c_42d94d50",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "???  This doesn\u0027t seem in line with how Redifsh specifies privilege registry implementations.  Maybe you mean privilege set?",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 200,
        "endChar": 18
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7fd20d9_c72b0390",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:06:57Z",
      "side": 1,
      "message": "I don\u0027t mean privilege set. If you look at the current phosphor-user-manager, it uses a linux group to model a Redfish role.\n\n\"priv-admin\", \"priv-operator\", \"priv-user\" are all linux groups on system. Then in bmcweb, these groups are mapped into hardcoded Redfish privilege sets (the mapping table is in BMCWeb).\n\nIn an ideal case, I would like phosphor-user-manager owns the mappings as well, so given a user, phosphor-user-manager returns the set of Redfish privileges directly. We will have \"priv-configure-self\", \"priv-configure-components\", \"priv-configure-user\", etc as linux groups. And a user can be in multiple groups (meaning they have corresponding Redfish privileges).\n\nIf you agree with above, I can propose this in the design. Note this needs new interface changes in phosphor-user-manager, so it returns a string array for Redfish privileges. Otherwise, I don\u0027t find a good way to do user to Redfish role to Redfish privileges mapping, unless we do what I have proposed: \"an OEM Redfish role only supports being configured with a single Redfish privilege\".\n\nIf you don\u0027t agree, do you have better ideas?",
      "parentUuid": "59aa9d4c_42d94d50",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 200,
        "endChar": 18
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "439f45c8_67dd5a96",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "I went with what\u0027s I though is idea. This involves larger changes to existing daemons (phosphor-user-manager).",
      "parentUuid": "c7fd20d9_c72b0390",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 200,
        "endChar": 18
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5b7bebf_5c639b8d",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 200,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "\u003e  We will have \"priv-configure-self\", \"priv-configure-components\", \"priv-configure-user\", etc as linux groups\n\nI don\u0027t think this works at a system level.  One of the important properties of the existing mechanisms is that the privilege levels map to IPMI (admin/operator/user).  Moving these to be Redfish privilege levels would break that, which I don\u0027t think we can do at a system level.\n\nwe can certainly add extra redfish roles, but I think we need to keep some ability to map to ipmi.",
      "parentUuid": "439f45c8_67dd5a96",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 200,
        "endChar": 18
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0894a8eb_d284c877",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 218,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "If this is part of your design doc, then upstreaming of this daemon is a prerequisite for your design, and definitely isn\u0027t \"out of scope\".  Otherwise how would anyone outside of google use the feature?  I\u0027m pretty sure that\u0027s not what you want from an implementation timeline perspective.\n\nRemove this item, and talk through a design that follows the standard.  If it were me, I would allow POST to the PrivilegeRegistry, but I\u0027m open to other ideas.",
      "range": {
        "startLine": 215,
        "startChar": 4,
        "endLine": 218,
        "endChar": 7
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "831dd1b1_84d70547",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 218,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:06:57Z",
      "side": 1,
      "message": "Sorry, I don\u0027t understand. I have said that these interfaces to add local groups are used in creating roles via POST Rest APIs JUST BEFORE this section.\n\nFWIW, I will remove this sub bullet point.",
      "parentUuid": "0894a8eb_d284c877",
      "range": {
        "startLine": 215,
        "startChar": 4,
        "endLine": 218,
        "endChar": 7
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7fdf83c_27ae6d59",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 218,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Please see what I have now. I even added several diagrams.",
      "parentUuid": "831dd1b1_84d70547",
      "range": {
        "startLine": 215,
        "startChar": 4,
        "endLine": 218,
        "endChar": 7
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d0adebf_2ea85959",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 235,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Just so you\u0027re aware, we\u0027ve talked about and there are patchsets out to move back to a model that doesn\u0027t\u0027 require a dbus call per request.  I suspect some of that design will intertwine with yours, but doesn\u0027t make sense to put in a design doc.",
      "range": {
        "startLine": 233,
        "startChar": 0,
        "endLine": 235,
        "endChar": 61
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58b5fd3b_4a91f1f0",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 235,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "How? Maybe a dbus call per connection?",
      "parentUuid": "7d0adebf_2ea85959",
      "range": {
        "startLine": 233,
        "startChar": 0,
        "endLine": 235,
        "endChar": 61
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60f87f31_4cb37b62",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 235,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "This review isn\u0027t really the place to discuss, I just wanted you to be aware of changes in this area that might effect you.",
      "parentUuid": "58b5fd3b_4a91f1f0",
      "range": {
        "startLine": 233,
        "startChar": 0,
        "endLine": 235,
        "endChar": 61
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c67efc8_dea7542c",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 242,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "can we make this less subtle.  Can the oem privilege groups just start with priv-oem-\u003coemname\u003e so that we\u0027re not treating oem differently?",
      "range": {
        "startLine": 239,
        "startChar": 31,
        "endLine": 242,
        "endChar": 34
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eeea98ae_4cb8ac55",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 242,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Please see what I have now. I made explicit prefixes.",
      "parentUuid": "2c67efc8_dea7542c",
      "range": {
        "startLine": 239,
        "startChar": 31,
        "endLine": 242,
        "endChar": 34
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cda6d1d_d3bb69cc",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 244,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "How would these privileges map to something like PLDM?  Do we need to come up with a naming convention here?",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 244,
        "endChar": 73
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63e3476e_2e3f8410",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 244,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "What do you mean? OEM privileges are freely configurable by clients.\n\nTo implement least Privilege principle, we can grant a role a single unique privilege, and add that privilege to their required resources.\n\nWe can probably do something else like \"OemPrivChassisPowerCycle\". I would move that discussion out of the scope of this design.",
      "parentUuid": "6cda6d1d_d3bb69cc",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 244,
        "endChar": 73
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59d5d9c6_341dec48",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 248,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "FWIW, I would really like to see default OEM routes added for these, but we can treat that as a followup patch.",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 34
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "def345b8_e091e1ad",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 253,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "BMCWEB_ROUTE is not specific to redfish.  You should not add Redfish-specific things (like subordinate targets) to that API.",
      "range": {
        "startLine": 252,
        "startChar": 21,
        "endLine": 253,
        "endChar": 9
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "009e2643_2321ad2c",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 253,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:45:33Z",
      "side": 1,
      "message": "Sorry, this is a fully internal macro, \"Route\" is a fully internal (in terms of bmcweb) , why can\u0027t we add APIs to it to support new features. \n\nNo Redfish routes shouldn\u0027t call these C++ function `entity`, `subordinateTargets` at all. Isn\u0027t this something we can guarantee via code review?\n\nI don\u0027t understand why you reject an idea like this? Do you have a better way to make a route know its own entity and what entities it\u0027s subordinate to easily?",
      "parentUuid": "def345b8_e091e1ad",
      "range": {
        "startLine": 252,
        "startChar": 21,
        "endLine": 253,
        "endChar": 9
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bf1cc08_3ef2fddb",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 253,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "\u003e Sorry, this is a fully internal macro, \"Route\" is a fully internal (in terms of bmcweb) , why can\u0027t we add APIs to it to support new features. \n\nbmcweb hosts more than just redfish, and requiring that all clients take on redfish baggage isn\u0027t going to work.  There are currently, and will be in the future http protocols beyond redfish (OpenConfig for example) that bmcweb will need to support.  This is why we abstract the layers as we do.\n\n\u003e \n\u003e No Redfish routes shouldn\u0027t call these C++ function `entity`, `subordinateTargets` at all. Isn\u0027t this something we can guarantee via code review?\n\nConsidering that the old way relied on code review, and didn\u0027t work (that\u0027s why we have the new way) I would say that we can\u0027t guarantee it in code review.\n\n\u003e \n\u003e I don\u0027t understand why you reject an idea like this? Do you have a better way to make a route know its own entity and what entities it\u0027s subordinate to easily?\n\nWe likely need a redfish specific call, (ie REDFISH_ROUTE) that can do whatever is needed under the covers to register the right handlers, without having to add complexity to BMCWEB_ROUTE.  It would call BMCWEB_ROUTE, as well as setupRedfishRoute underneath the abstraction, and we would just move all the redfish specific handlers over to REDFISH_ROUTE.",
      "parentUuid": "009e2643_2321ad2c",
      "range": {
        "startLine": 252,
        "startChar": 21,
        "endLine": 253,
        "endChar": 9
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cfdb909_a1358b81",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 262,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "This is what I think doesn\u0027t work.  What happens if IBM has a subordinate override for EthernetInterfaces, and Google doesn\u0027t?  Which option gets put into code?\n\nWhat if a user declares a subordinate override for something that doesn\u0027t have the optional flag.\n\nWe know at compile time what all the routes are, we need to come up with a method where it starts by checking subordinate overrides for the route, then looks up by type.  This will likely need to be generated from the schemas to be maintainable over time (the same as we found that manually adding privilege registry entries was not maintainable).\n\nPlease take another attempt at this paragraph.",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 262,
        "endChar": 21
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa3a9c18_e8cd9a3d",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 262,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:15:48Z",
      "side": 1,
      "message": "What about we make it required and add subordinateTargets for all the route? Yes, the values of possible subordinateTargets can be generated from schemas.",
      "parentUuid": "8cfdb909_a1358b81",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 262,
        "endChar": 21
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cd1d3be_a1a4fbbe",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 262,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Please see what I have now.\n\n\u003e This is what I think doesn\u0027t work.  What happens if IBM has a subordinate override for EthernetInterfaces, and Google doesn\u0027t?  Which option gets put into code?\n\nI guess you are thinking about something else. by |subordinateTargets| I actually refer to the resources that a route is subordinate to, which is decided once the route is decided.\n\nI don\u0027t understand why this doesn\u0027t work? |subordinateTo| is a property of routes, so we can directly use them to compare what\u0027s configured in the PrivilegeRegistry. If Google doesn\u0027t have override in EthernetInterfaces, Google just uses a config without subordinate override.\n\nI added inferring this from the URL as alternative considered. I don\u0027t want to deal with this complexity at this moment. A given route won\u0027t change its entity nor what resources it\u0027s under at runtime.",
      "parentUuid": "aa3a9c18_e8cd9a3d",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 262,
        "endChar": 21
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2606f52_0a2bc69e",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 262,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "\u003e What about we make it required and add subordinateTargets for all the route?\n\nBasically, I think that when we register a route, we need to register the path, then have a lookup table of path -\u003e entity-type, so that we can do the subordinate overrides correctly, then fall back to type checking if no subordinate override is present.\n\n\u003e  |subordinateTo| is a property of routes, so we can directly use them to compare what\u0027s configured in the PrivilegeRegistry.\n\nLets just plan to have a test case for this, and deal with it in the code review/implementation.  Just being aware that subordinate overrides are always optional, and have a test case for both subordinate override present, and subordinate override not present should be fine.  The only design thing this changes is it means that odata.type isn\u0027t the only thing that determines a given routes privilege level",
      "parentUuid": "4cd1d3be_a1a4fbbe",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 262,
        "endChar": 21
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "833f450b_4d164301",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 265,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Today, the hardcoding doesn\u0027t matter because we handle it correctly in explicit code, given that we know the privilege registry at compile time.  If that changes, that means that we need to implement a generic subordinate override system.",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 265,
        "endChar": 30
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "277d3c98_49ceb7cd",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 265,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Please see all other threads about this.\n\nI DIDN\u0027T propose to break systems and break Base privilege registry. I have proposed how dynamic override can be implement in the latest doc.\n\nI have also argued we can start with just implementing whatever overrides are there in Base privilege registry, and implement dynamic override in the 2nd iteration.",
      "parentUuid": "833f450b_4d164301",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 265,
        "endChar": 30
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7187937c_0bb98f8d",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 265,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "I don\u0027t see how that works though if we have subordinate overrides in code.  How would a user set up a privilege registry for something that we have a subordinate override for that\u0027s hardcoded in c++?  Or would we require that the upstream Base registry subordinate overrides always be present when a user posts a PrivilegeRegistry?  That might work.",
      "parentUuid": "277d3c98_49ceb7cd",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 265,
        "endChar": 30
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8847bc14_62fd9035",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 274,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "This data already exists in the router.  Please don\u0027t add yet another map structure, just add a method to update the existing router structures.",
      "range": {
        "startLine": 272,
        "startChar": 40,
        "endLine": 274,
        "endChar": 28
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b4f6c6f_babbe199",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 274,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "\u003e Please don\u0027t add yet another map structure, just add a method to update the existing router structures.\n\nIsn\u0027t this what I am proposing in the above section? Adding `entity` and `subordinateTo` is just like adding method. The data is store in a Rule class like today.\n\nThe map data structure here is to store PrivilegeRegistry.",
      "parentUuid": "8847bc14_62fd9035",
      "range": {
        "startLine": 272,
        "startChar": 40,
        "endLine": 274,
        "endChar": 28
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f37ba893_9be00e75",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 287,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Considering that the redfish base registry has subordinate overrides that are important to ANY implementation (including ours), This is a non starter.  Feel free to stack up the patches however you like, but we CANNOT be changing default behavior for existing systems, and whatever implementation merges to master must be able to load and correctly run the base privilege registry, considering that\u0027s what DMTF publishes, and that is the default we\u0027ll have to expose from PrivilegeRegistry.",
      "range": {
        "startLine": 286,
        "startChar": 0,
        "endLine": 287,
        "endChar": 45
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b12df80c_cd6bb272",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 287,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T02:18:12Z",
      "side": 1,
      "message": "I didn\u0027t say anywhere that I propose to not implement base privilege registry.\n\n\"Static\" here means we only implement the Overrides in base privilege registry and don\u0027t support changing Overrides at run time.\n\nI can\u0027t stack patches without this design being approved. Developing codes without getting agreement in design and then getting considerable rework is a waste of time of both maintainers and myself.",
      "parentUuid": "f37ba893_9be00e75",
      "range": {
        "startLine": 286,
        "startChar": 0,
        "endLine": 287,
        "endChar": 45
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "506604b8_c6db7cbe",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 287,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "See what I have now. Design covers how to implement dynamic overrides. However, I don\u0027t believe implementing it is a hard requirement as long as we implement the base registry in a static way and don\u0027t break existing system.\n\nGoogle doesn\u0027t really have use case of changing overrides at runtime now. I want to put effort on the things that Google really needs first.\n\nLet me know if it makes sense.",
      "parentUuid": "b12df80c_cd6bb272",
      "range": {
        "startLine": 286,
        "startChar": 0,
        "endLine": 287,
        "endChar": 45
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7c4abea_965edf5d",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 291,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "This doesn\u0027t work.  The overrides are currently hardcoded in code.",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 291,
        "endChar": 15
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fdf03de_a371a10b",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 291,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "I really don\u0027t understand why it doesn\u0027t work.\n\n\u003e  The overrides are currently hardcoded in code.\n\nWhat\u0027s hardcoded? Did you misunderstand my idea?\n\nPlease take a look at the current design.",
      "parentUuid": "a7c4abea_965edf5d",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 291,
        "endChar": 15
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68121df9_ff7632a7",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 310,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "?  If you inject them into code, they run after.  I\u0027m open to seeing how this happens in a patchset, but setupRedfishRoutes definitely runs after the privileges.",
      "range": {
        "startLine": 310,
        "startChar": 0,
        "endLine": 310,
        "endChar": 57
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96e32b0e_5920f3c4",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 310,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:12:39Z",
      "side": 1,
      "message": "I will rephrase. These codes will be in routing. I will remove \"similar to how query parameters are implemented\". I didn\u0027t mean to use setupRedfishRoutes",
      "parentUuid": "68121df9_ff7632a7",
      "range": {
        "startLine": 310,
        "startChar": 0,
        "endLine": 310,
        "endChar": 57
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82c58596_153b5095",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 310,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Done.\n\nProperties overrides have to be examined after getting a response.",
      "parentUuid": "96e32b0e_5920f3c4",
      "range": {
        "startLine": 310,
        "startChar": 0,
        "endLine": 310,
        "endChar": 57
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d2ace7d_ad63f562",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 315,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "I\u0027m curious to see how this will work in code with no binary size or memory impact, but I\u0027m open to the possibility.",
      "range": {
        "startLine": 312,
        "startChar": 0,
        "endLine": 315,
        "endChar": 33
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d15f07a2_159b0290",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 315,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:12:39Z",
      "side": 1,
      "message": "Will add.",
      "parentUuid": "1d2ace7d_ad63f562",
      "range": {
        "startLine": 312,
        "startChar": 0,
        "endLine": 315,
        "endChar": 33
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2009544e_96174bba",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 315,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Done. Added in the requirements.",
      "parentUuid": "d15f07a2_159b0290",
      "range": {
        "startLine": 312,
        "startChar": 0,
        "endLine": 315,
        "endChar": 33
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd170dd6_4af7e103",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 320,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Again, stack your patches however you like, but given that this is:\nA. A security feature that effects the whole system.\nB. A well defined specification feature.\n\nWe can\u0027t be merging something that doesn\u0027t follow the spec.",
      "range": {
        "startLine": 318,
        "startChar": 20,
        "endLine": 320,
        "endChar": 37
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d6bad57_52179e0f",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 320,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:45:33Z",
      "side": 1,
      "message": "Again, I won\u0027t do implementation until we have this design approved.\n\nPlease see the other thread about why this design doesn\u0027t break \"whole system\". We can discuss there.",
      "parentUuid": "cd170dd6_4af7e103",
      "range": {
        "startLine": 318,
        "startChar": 20,
        "endLine": 320,
        "endChar": 37
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00b26e04_bba3dec9",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 323,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Reading a large json file from disk at startup ignores:\nhttps://github.com/openbmc/bmcweb/blob/master/DEVELOPING.md#startup-times\n\nThese rules were generated for good reason, and I don\u0027t think should be ignored.",
      "range": {
        "startLine": 323,
        "startChar": 0,
        "endLine": 323,
        "endChar": 55
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93a0356b_64d142a5",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 323,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:06:57Z",
      "side": 1,
      "message": "\u003e  Unless a feature is explicitly intended to be runtime configurable\n\nIsn\u0027t this feature fall into this category?\n\nDo you have other solutions?",
      "parentUuid": "00b26e04_bba3dec9",
      "range": {
        "startLine": 323,
        "startChar": 0,
        "endLine": 323,
        "endChar": 55
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dda2c86a_27a202d9",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 323,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "I updated the design with my ideas of generating codes at compile time and take a small JSON when startup.\n\nAlso updated that we only storing the Patch JSON (pure modification). So that the full mapping is PrivilegeRegistry (generated at compile time) + Patch JSON (modification).",
      "parentUuid": "93a0356b_64d142a5",
      "range": {
        "startLine": 323,
        "startChar": 0,
        "endLine": 323,
        "endChar": 55
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "066cc9fb_d1f16eea",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 324,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "What does \"compact version\" mean?",
      "range": {
        "startLine": 323,
        "startChar": 56,
        "endLine": 324,
        "endChar": 58
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1633768d_3f336129",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 324,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:06:57Z",
      "side": 1,
      "message": "indent. basically json.dump(-1)",
      "parentUuid": "066cc9fb_d1f16eea",
      "range": {
        "startLine": 323,
        "startChar": 56,
        "endLine": 324,
        "endChar": 58
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b44f818d_008d68d2",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 324,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1633768d_3f336129",
      "range": {
        "startLine": 323,
        "startChar": 56,
        "endLine": 324,
        "endChar": 58
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22d82dfa_ee0496b9",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 329,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "ease don\u0027t add a new file for this.  This is what bmcweb_persistent_data.json is for, and does not need to take the form of anything specific to a given system.",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2e22734_1fef90fa",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 329,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:12:39Z",
      "side": 1,
      "message": "Sure, I can add that Persistent Data can reuse bmcweb_persistent_data.json",
      "parentUuid": "22d82dfa_ee0496b9",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3eec1529_baeca1d8",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 329,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2e22734_1fef90fa",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2f4b63c_9262a4c8",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 332,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "what are you basing this off?  I thought we were at the limit for most systems?",
      "range": {
        "startLine": 331,
        "startChar": 44,
        "endLine": 332,
        "endChar": 27
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba331fe3_93808076",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 332,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:12:39Z",
      "side": 1,
      "message": "I checked romulus and s7106. This statement is true for both.",
      "parentUuid": "c2f4b63c_9262a4c8",
      "range": {
        "startLine": 331,
        "startChar": 44,
        "endLine": 332,
        "endChar": 27
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73337a24_e4b7d7b9",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 332,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:21:18Z",
      "side": 1,
      "message": "I don\u0027t know if there is good solution if there is an upstream system that doesn\u0027t have enough space for 100KB data.\n\nDo you have any ideas?",
      "parentUuid": "ba331fe3_93808076",
      "range": {
        "startLine": 331,
        "startChar": 44,
        "endLine": 332,
        "endChar": 27
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04f72fc1_f0ab9fc3",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 332,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T16:14:27Z",
      "side": 1,
      "message": "I have added several ideas for reduce data size, and we don\u0027t parse a large JSON now.",
      "parentUuid": "73337a24_e4b7d7b9",
      "range": {
        "startLine": 331,
        "startChar": 44,
        "endLine": 332,
        "endChar": 27
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "009fa2d5_d6b0a110",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 346,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Not seeing where that\u0027s true.  From the schema:\n\n\u003cProperty Name\u003d\"SubordinateOverrides\" Type\u003d\"Collection(PrivilegeRegistry.v1_0_0.Target_PrivilegeMap)\" Nullable\u003d\"false\"\u003e\n\u003cAnnotation Term\u003d\"OData.Description\" String\u003d\"The privilege overrides of the subordinate Resource.\"/\u003e\n\u003cAnnotation Term\u003d\"OData.LongDescription\" String\u003d\"This property shall contain the privilege overrides of the subordinate Resource. The target lists are identified by Resource type.\"/\u003e\n\u003c/Property\u003e\n\u003cProperty Name\u003d\"ResourceURIOverrides\" Type\u003d\"Collection(PrivilegeRegistry.v1_0_0.Target_PrivilegeMap)\" Nullable\u003d\"false\"\u003e\n\u003cAnnotation Term\u003d\"OData.Description\" String\u003d\"The privilege overrides of Resource URIs.\"/\u003e\n\u003cAnnotation Term\u003d\"OData.LongDescription\" String\u003d\"This property shall contain the privilege overrides of Resource URIs. The target lists the Resource URI and the new privileges.\"/\u003e\n\u003c/Property\u003e\n\u003cProperty Name\u003d\"PropertyOverrides\" Type\u003d\"Collection(PrivilegeRegistry.v1_0_0.Target_PrivilegeMap)\" Nullable\u003d\"false\"\u003e\n\u003cAnnotation Term\u003d\"OData.Description\" String\u003d\"The privilege overrides of properties within a Resource.\"/\u003e\n\u003cAnnotation Term\u003d\"OData.LongDescription\" String\u003d\"This property shall contain the privilege overrides of properties, such as the `Password` property in the `ManagerAccount` Resource.\"/\u003e\n\u003c/Property\u003e\n\u003cProperty Name\u003d\"OperationMap\" Type\u003d\"PrivilegeRegistry.v1_0_0.OperationMap\" Nullable\u003d\"false\"\u003e\n\u003cAnnotation Term\u003d\"OData.Description\" String\u003d\"List mapping between HTTP methods and privilege required for the Resource.\"/\u003e\n\u003cAnnotation Term\u003d\"OData.LongDescription\" String\u003d\"This property shall list the mapping between HTTP methods and the privilege required for the Resource.\"/\u003e\n\u003c/Property\u003e\n\nI do not see OData.Permission/Read on any of those.  maybe I\u0027m missing it?\n\nMy understanding is that other implementations have implemented this already.",
      "range": {
        "startLine": 346,
        "startChar": 0,
        "endLine": 346,
        "endChar": 66
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90c9c361_7de7ac8d",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 346,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T02:18:12Z",
      "side": 1,
      "message": "A big gap between you and me is that whether PrivilegeRegistry is read/write; if you read the spec, you will find permission annotations only exist for properties that are not structured properties; SubordinateOverrides is a structured properties, so you don\u0027t see a permission annotations.\n\nInstead, please see the type of SubordinateOverrides, Collection(PrivilegeRegistry.v1_0_0.Target_PrivilegeMap), and look into Target_PrivilegeMap, \n\n```\n\u003cComplexType Name\u003d\"Target_PrivilegeMap\"\u003e\n\u003cAnnotation Term\u003d\"OData.Description\" String\u003d\"This type describes a mapping between one or more targets and the HTTP operations associated with them.\"/\u003e\n\u003cAnnotation Term\u003d\"OData.LongDescription\" String\u003d\"This type shall describe a mapping between one or more targets and the HTTP operations associated with them.\"/\u003e\n\u003cProperty Name\u003d\"Targets\" Type\u003d\"Collection(Edm.String)\"\u003e\n\u003cAnnotation Term\u003d\"OData.Permissions\" EnumMember\u003d\"OData.Permission/Read\"/\u003e\n\u003cAnnotation Term\u003d\"OData.Description\" String\u003d\"The set of URIs, Resource types, or properties.\"/\u003e\n\u003cAnnotation Term\u003d\"OData.LongDescription\" String\u003d\"This property shall contain the array of URIs, Resource types, or properties. For example, `/redfish/v1/Systems/1`, `Manager`, or `Password`. When the Targets property is not present, no override is specified.\"/\u003e\n\u003c/Property\u003e\n\u003cProperty Name\u003d\"OperationMap\" Type\u003d\"PrivilegeRegistry.v1_0_0.OperationMap\" Nullable\u003d\"false\"\u003e\n\u003cAnnotation Term\u003d\"OData.Description\" String\u003d\"The mapping between the HTTP operation and the privilege required to complete the operation.\"/\u003e\n\u003cAnnotation Term\u003d\"OData.LongDescription\" String\u003d\"This property shall contain the mapping between the HTTP operation and the privilege required to complete the operation.\"/\u003e\n\u003c/Property\u003e\n\u003c/ComplexType\u003e\n```\n\nYou see Targets are Read-only. Then look into OperationMap, you will find all properties are read-only.\n\nIn addition, take a look at this,\n\nhttps://redfishforum.com/thread/328/modify-privilegeregistry\n\nThey said \"I would not expect end clients to be able to modify a privilege registry on a service, but implementations can certainly construct their own privilege registry (as long as you follow the rules of the registry structure). \".\n\nDoes this make sense? You said you have seen systems, what are them? Are they available for testing?\n\nYou also said you are in discussions of this with DMTF, why don\u0027t they put modifying privilegeregistry into the Redfish standard?",
      "parentUuid": "009fa2d5_d6b0a110",
      "range": {
        "startLine": 346,
        "startChar": 0,
        "endLine": 346,
        "endChar": 66
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39bb4796_531c642b",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 349,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Why would we want to support PATCH over PUT (ie, requiring the user to completely replace the PrivilegeRegistry each time).  PATCH seems a lot more error prone?",
      "range": {
        "startLine": 347,
        "startChar": 46,
        "endLine": 349,
        "endChar": 24
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "284f9848_25db6c89",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 349,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "I am not proposing replacing the PrivilegeRegistry completely. I just meant patch whatever the attributes in PrivilegeRegistry you need.\n\nI guess REST APIs confused people. Makes sense. I updated the document so that only PATCH is allowed.",
      "parentUuid": "39bb4796_531c642b",
      "range": {
        "startLine": 347,
        "startChar": 46,
        "endLine": 349,
        "endChar": 24
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2252e787_6c937244",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 349,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "I\u0027m pretty sure in the specification this would be a PUT?  Because we\u0027re expected to totally replace the privilege registry each time, but sure, I guess we could do either or.",
      "parentUuid": "284f9848_25db6c89",
      "range": {
        "startLine": 347,
        "startChar": 46,
        "endLine": 349,
        "endChar": 24
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f64f0fe_c0fc40ca",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 365,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "Considering we need implementations either way, who cares if it\u0027s custom or our own?",
      "range": {
        "startLine": 364,
        "startChar": 60,
        "endLine": 365,
        "endChar": 70
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7a99641_538b5932",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 365,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-24T04:12:39Z",
      "side": 1,
      "message": "What do you mean? We need to implement what ways?",
      "parentUuid": "5f64f0fe_c0fc40ca",
      "range": {
        "startLine": 364,
        "startChar": 60,
        "endLine": 365,
        "endChar": 70
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d6a04cd_b079a486",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 365,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T16:14:27Z",
      "side": 1,
      "message": "Not applicable now. Now we only store delta, and does use custom format.",
      "parentUuid": "c7a99641_538b5932",
      "range": {
        "startLine": 364,
        "startChar": 60,
        "endLine": 365,
        "endChar": 70
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de246ca9_b860a62f",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 365,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "👍",
      "parentUuid": "1d6a04cd_b079a486",
      "range": {
        "startLine": 364,
        "startChar": 60,
        "endLine": 365,
        "endChar": 70
      },
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3981a55_a4e3e95a",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 375,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "I see no mention of ConfigureSelf, which requires special handling currently hardcoded.\n\nHow are roles added at compile time?\nHow are oem privileges added at compile time?",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7293d4f6_876f5ec8",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 375,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "\u003e How are roles added at compile time?\n\u003e How are oem privileges added at compile time?\nSee what I have now.\n\n\u003e I see no mention of ConfigureSelf, which requires special handling currently hardcoded.\nWhy is ConfigureSelf related?\n\nBefore resource handlers (what the current hardcoding of SonfigureSelf) being executed, we do whatever the normal authz needs: getting the privileges set of the user, get the required privilege set, and do isSuperSetOf. After that, we just execute what the hardcoded ConfigureSelf codes are there. I don\u0027t any see any changes needed.",
      "parentUuid": "a3981a55_a4e3e95a",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddb4f0fc_77376e15",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 375,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2022-08-30T15:12:39Z",
      "side": 1,
      "message": "The ConfigureSelf privilege is specified on a property override for the ManagerAccount Password property.\n\nThe weird behavior of the ConfigureSelf privilege is it only effective when the user is accessing their own ManagerAccount.  There are two cases:\n\n1. For example, although the privilege registry allows a user who has only the ConfigureSelf privilege to PATCH the ManagerAccount.Password property, that only applies to *their* password, and not to anyone else\u0027s password.  \u003c-- That behavior is not adequately captured in the spec or in the privilege registry.  This behavior is implicitly understood, and it is implemented in BMCWeb (code in ManagerAccount PATCH operation).\n\n2. There is another similar weird wrinkle in the Redfish Authorization specification.  The GET ManagerAccountCollection operations shows different results for different users.  Users who have the ConfigureUsers privilege will see all users, but users who do not will only see their own account listed.  The privilege registry use of ConfigureUsers does not adequately capture this behavior.\n\nIt would be nice to get this into the spec.  This is described in the public forum here: https://redfishforum.com/thread/309/configureself-account\n\nI would be okay with leaving the code in BMCWeb to perform special handling of the ConfigureSelf privilege.",
      "parentUuid": "7293d4f6_876f5ec8",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccc375c9_e2e2e1ae",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 375,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-30T19:00:19Z",
      "side": 1,
      "message": "Thanks for the information. I believe \" leaving the code in BMCWeb to perform special handling of the ConfigureSelf privilege\" is the easiest at the moment.",
      "parentUuid": "ddb4f0fc_77376e15",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "064f5fc0_3ed4b1d0",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 375,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-06T21:53:10Z",
      "side": 1,
      "message": "\u003e \u003e How are roles added at compile time?\n\u003e \u003e How are oem privileges added at compile time?\n\u003e See what I have now.\n\u003e \n\u003e \u003e I see no mention of ConfigureSelf, which requires special handling currently hardcoded.\n\u003e Why is ConfigureSelf related?\n\u003e \n\nBecause it\u0027s a special case of privileges that needs handled.\n\n\u003e Before resource handlers (what the current hardcoding of SonfigureSelf) being executed, we do whatever the normal authz needs: getting the privileges set of the user, get the required privilege set, and do isSuperSetOf. After that, we just execute what the hardcoded ConfigureSelf codes are there. I don\u0027t any see any changes needed.\n\nSo then what happens if someone uploads a privilege registry without ConfigureSelf set on a particular resource?  We would give the wrong response if the ConfigureSelf code is hardcoded.",
      "parentUuid": "7293d4f6_876f5ec8",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c64e0b9_462347d0",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 384,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-24T00:13:04Z",
      "side": 1,
      "message": "This can be removed.  This doc doesn\u0027t worry about downstream systems.",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a2116ea_2f0d863a",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 9
      },
      "lineNbr": 384,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-26T02:33:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c64e0b9_462347d0",
      "revId": "23cb4ede7d09fb7997176ce3a020f9e0ddfeb26b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}