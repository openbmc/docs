{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d658eed_12bd9168",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-20T12:56:55Z",
      "side": 1,
      "message": "I\u0027m not sure our implementations are complete enough to count this as an anti-pattern at this point...",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fe115f8_bee51228",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-01-22T22:43:36Z",
      "side": 1,
      "message": "Can you unpack that a bit?\n\nThis one was more aspirational than the others. I think it\u0027s reasonable that we try to prevent people adopting this pattern going forward.",
      "parentUuid": "5d658eed_12bd9168",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c760cdaa_211f0224",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-24T19:38:01Z",
      "side": 1,
      "message": "I think the issue I have with it is even by reading this I\u0027m not sure _I_ know what to do.  So, if I don\u0027t know how to react to this anti-pattern, I have a hard time expecting anyone else to either.  Thus... what I wrote above.",
      "parentUuid": "6fe115f8_bee51228",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fac771bd_56e71f9f",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-01-24T23:03:09Z",
      "side": 1,
      "message": "Right, maybe it\u0027s just ranting then at this point. I don\u0027t have any practical examples to point to, it just feels like the current approach is inherently broken.",
      "parentUuid": "c760cdaa_211f0224",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db91f3bc_82f906f8",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-01-25T14:29:57Z",
      "side": 1,
      "message": "\u003e  by reading this I\u0027m not sure _I_ know what to do\n\nIsn\u0027t this outlined in the resolution section?",
      "parentUuid": "fac771bd_56e71f9f",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5842c802_5e8ced8e",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-25T15:16:09Z",
      "side": 1,
      "message": "Are there any example implementations to point to?",
      "parentUuid": "db91f3bc_82f906f8",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "895d677f_d1b072b6",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-01-25T20:03:57Z",
      "side": 1,
      "message": "Of waiting for an interface to show up on DBus? I\u0027m probably missing the intent of the question but there is the mapper wait code itself, or any application in dbus-sensors, or here is one that I wrote awhile back:\n\nhttps://github.com/openbmc/openpower-pnor-code-mgmt/commit/099543e4d7a30546570d615c9c8a5a2e8b0c09d4",
      "parentUuid": "5842c802_5e8ced8e",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db15fe38_e3971daa",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-29T22:46:56Z",
      "side": 1,
      "message": "You\u0027re not waiting for an interface to show up, you\u0027re waiting for a path to show up on an unknown service.  Yes, this is what mapper does.  I don\u0027t think we want everyone reimplementing mapper in their own process.  Therefore, we\u0027d need an API that mapper provides that gives similar results as what mapper-wait does?  This is why I don\u0027t think there is anything obvious to point to as a solution here.",
      "parentUuid": "895d677f_d1b072b6",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95cde6a0_9bea128a",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-01-29T23:20:38Z",
      "side": 1,
      "message": "Right, but the point is that waiting for paths is kinda broken in exactly the way you describe. Better to wait for a well known connection name that is guaranteed to provide the path of interest, where possible. The anti-pattern already addresses that this is not always possible.",
      "parentUuid": "db15fe38_e3971daa",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4f96f50_3c428adc",
        "filename": "anti-patterns.md",
        "patchSetId": 1
      },
      "lineNbr": 527,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-29T23:40:07Z",
      "side": 1,
      "message": "\u003e Better to wait for a well known connection name that is guaranteed to provide the path of interest,\n\nI strongly disagree with this from as an architectural choice.  We\u0027ve gone back and forth on it.  \n\nGenerally speaking it doesn\u0027t work for cases where there are multiple of something, unless we shove everything of one type in a single executable.  This pretty much precludes any possibility of non-open implementations of anything and it also makes multi-host designs much harder with the current code-base.",
      "parentUuid": "95cde6a0_9bea128a",
      "revId": "43e516eda177cc19a6e0f02b224466c1e743ea15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}