{
  "comments": [
    {
      "key": {
        "uuid": "a52d1e91_baf0c2c8",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-10-21T01:21:48Z",
      "side": 1,
      "message": "Does this document also talk about showing these sensors in Redfish/bmcweb ?\n\nAlso, this document talks about only Numeric Sensors ? what about State Sensors ?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 42
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5ef5198_88722813",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-21T08:49:15Z",
      "side": 1,
      "message": "Yes, the document is for exposing PLDM sensor to D-bus xyz.openbmc_project.Sensor.Value interface with object path in /xyz/openbmc_project/sensors/\u003csensor_type\u003e/\u003csensor_name\u003e so that PLDM sensors can be mapped/displayed to Redfish/bmcweb.\n\nThe PLDM state sensor might be exposing to D-bus interfaces defined in https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/State but current available interfaces could not be matched to all possible PLDM state sensor so creating new D-bus interfaces is needed. I think it would be better having another design proposal to cover this area.",
      "parentUuid": "a52d1e91_baf0c2c8",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 42
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3286225f_caf6af7b",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-10-21T01:21:48Z",
      "side": 1,
      "message": "space. there are spaces everywhere in the document, please fix all of them",
      "range": {
        "startLine": 18,
        "startChar": 73,
        "endLine": 18,
        "endChar": 74
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "192b6afd_0b8321a4",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-21T08:49:15Z",
      "side": 1,
      "message": "Will fix in new commit",
      "parentUuid": "3286225f_caf6af7b",
      "range": {
        "startLine": 18,
        "startChar": 73,
        "endLine": 18,
        "endChar": 74
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec404189_da30b87c",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-10-18T09:05:36Z",
      "side": 1,
      "message": "Perhaps this design document can be integrated with the existing PLDM stack design document",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 42,
        "endChar": 36
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afaeb8fb_ecd9a843",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-10-22T15:57:37Z",
      "side": 1,
      "message": "Please respond to this. I also agree with this.",
      "parentUuid": "ec404189_da30b87c",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 42,
        "endChar": 36
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46c58bd5_6e76982f",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-10-21T01:21:48Z",
      "side": 1,
      "message": "this is a confusing statement.\n\nEntity Association PDR always has a container entity and one or more contained entities, and the structure does not have a terminus_handle/tid field. The Fru information would be present in the frurecord Table of the remote PLDM terminus, and the FRU Recordset identifiers would be coming from the fru recordSet PDR\u0027s of the remote terminus - what is the role of the Entity association PDR\u0027s here ?\n\nwhat is $instance here ? is it the pldm entity instance number of the entity ?\n\nMultiple PLDM entities from the same pldm terminus can have the same entity instance number. if that is the case, the dbus paths will not be unique.",
      "range": {
        "startLine": 53,
        "startChar": 11,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "494ae8a8_3210090c",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-21T08:49:15Z",
      "side": 1,
      "message": "\u003e Entity Association PDR always has a container entity and one or more contained entities, and the structure does not have a terminus_handle/tid field. The Fru information would be present in the frurecord Table of the remote PLDM terminus, and the FRU Recordset identifiers would be coming from the fru recordSet PDR\u0027s of the remote terminus - what is the role of the Entity association PDR\u0027s here ?\n\nThe proposal assumes tid is assigned by pldmd so pldmd knows the mapping of TID/EID. When pldmd fetches PDRs by GetPDR command from a PLDM terminus, pldmd also knows which EID returns the PDRs and what value of terminus handle is in each PDRs. So pldmd should be able to maintain a mapping table for terminus_handle/eid/tid.\n\nWhen pldmd parses the Entity association PDRs for a PLDM terminus, it can create dbus objects for all entities defined in PDRs in a hierarchical dbus paths(/xyz/openbmc_project/Inventory/Source/PLDM/\u003cTID\u003e/\u003cINSTANCE#\u003e/\u003cINSTANCE#\u003e/...) and then implements Entity.interface and FRU.interface to these dbus objects.\n\n\u003e Multiple PLDM entities from the same pldm terminus can have the same entity instance number. if that is the case, the dbus paths will not be unique.\n\nMy idea is that the instance# should be unique under the same container ID. The dbus path of child entity cascades its instance# after its parent\u0027s dbus path string.\n\nExample:\nA PLDM terminus assigned TID to 1. Its Entity Association PDR describes the containerID\u003d123 under contrainerID\u003dSYSTEM and there are two entities belong to containerID\u003d123. So the dbus path for these three entities are created like below.\n\n/xyz/openbmc_project/Inventory/Source/PLDM/1/\n/xyz/openbmc_project/Inventory/Source/PLDM/1/1\n/xyz/openbmc_project/Inventory/Source/PLDM/1/2",
      "parentUuid": "46c58bd5_6e76982f",
      "range": {
        "startLine": 53,
        "startChar": 11,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e239e7e_c10d69b2",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-10-18T09:05:36Z",
      "side": 1,
      "message": "Did you mean FRU interface?",
      "range": {
        "startLine": 57,
        "startChar": 55,
        "endLine": 57,
        "endChar": 61
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92b25b05_ba50195e",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-18T09:37:49Z",
      "side": 1,
      "message": "This interface is provided a mapping table to look up relationship in between entity instance number and PDRs from a PLDM terminus.\n\nThe FRU interface will also be implemented and is described at line 82-87.",
      "parentUuid": "9e239e7e_c10d69b2",
      "range": {
        "startLine": 57,
        "startChar": 55,
        "endLine": 57,
        "endChar": 61
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b6e5bc1_f19fea6c",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-10-18T09:05:36Z",
      "side": 1,
      "message": "Numeric sensors should use xyz.openbmc_project.Sensor.Value to be consistent with rest of OpenBMC implementations. With this particular interface with object path in /xyz/openbmc_project/sensors/\u003csensor_type\u003e/sensor_name, other mechanisms like Redfish/IPMI exposure of sensors, threshold crossing detection etc will be done automatically.",
      "range": {
        "startLine": 62,
        "startChar": 22,
        "endLine": 62,
        "endChar": 77
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5435e532_47283b4e",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-18T09:37:49Z",
      "side": 1,
      "message": "The interface is intended to collect the all related sensor settings from PDRs or configruation file for static sensor. pldmd get the settings from this itnerface instead of PDRs directly. It should provide capability for debugging and flexibility to modify settings from CLI (e.g. busctl).\n\npldmd still exposes sensor status with xyz.openbmc_project.Sensor.Value with object path in /xyz/openbmc_project/sensors/\u003csensor_type\u003e/sensor_name.",
      "parentUuid": "8b6e5bc1_f19fea6c",
      "range": {
        "startLine": 62,
        "startChar": 22,
        "endLine": 62,
        "endChar": 77
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb09af3c_6f09679e",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2021-10-19T15:20:02Z",
      "side": 1,
      "message": "I wonder for the others PDRs type such as status/effecter, the pldmd will use which object path to export state value, effecter value? Will it be /xyz/openbmc_project/effecter/\u003ceffecter_type\u003e/sensor_name?\n\nWe should also concern about expose the PLDM sensor to IPMI because the PLDM sensorID is 16 bits and IPMI sensorID is 8 bits.",
      "parentUuid": "5435e532_47283b4e",
      "range": {
        "startLine": 62,
        "startChar": 22,
        "endLine": 62,
        "endChar": 77
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b993593a_db4880f2",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2021-10-19T15:20:02Z",
      "side": 1,
      "message": "The spec can be applied for others type of PDRs in PLDM model such as State Sensor PDR (type 4), Numeric Effecter PDR (type 9), Compact Numeric Sensor PDR (type 21). The dbus interface xyz.openbmc_project.Inventory.Source.PLDM.\u003cPDRTypeName\u003e will be applied for equivalent PDR types. This specs should not limited for only PDR numeric sensors, I think.\nThe dbus-interface xyz.openbmc_project.Inventory.Source.PLDM.\u003cPDRTypeName\u003e will include the data fields in each PDR types.",
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db496e2a_90d62809",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-20T07:33:44Z",
      "side": 1,
      "message": "Agree with you, the dbus interface can be applied for other type of PDRs. we can propose to add necessary dbus interface yaml files to https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/Inventory/Source/PLDM",
      "parentUuid": "b993593a_db4880f2",
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10a38251_76e972aa",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-20T07:33:44Z",
      "side": 1,
      "message": "Yes, it is possible to export state/effecter value to dbus as well. It might need another review to add new dbus interface to openbmc/phosphor-dbus-interfaces repo like sensor value.interface does (https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Sensor/Value.interface.yaml)\n\nYes, it is a limitation to handle more than 256 sensors in a platform for IPMI. But it should not be a problem to mapping PLDM sensor to IPMI due to size of sensorID(8bits vs 16 bits) as long as the number of sensor is under the limitation of IPMI. It is because that the source of IPMI sensor is also from /xyz/openbmc_project/sensors/\u003csensor_type\u003e/sensor_name and the PLDM sensorID is not a property of dbus value.interface.",
      "parentUuid": "eb09af3c_6f09679e",
      "range": {
        "startLine": 62,
        "startChar": 22,
        "endLine": 62,
        "endChar": 77
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "724bc21d_e6cb02c2",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-10-18T09:05:36Z",
      "side": 1,
      "message": "You could have the static PDRs maintained in the pldmd itself - i.e. once you query the PLDM FRU of the terminus, you can look for a static PDR configuration json file that matches the inventory information you read and load the sensor configuration from there.\n\nThis helps in having a scalable approach and not let the PLDM specifics (like PDRs) percolate into entity manager. For example - the devices with static PDRs can extend and support other type of static PDRs like State Sensor PDRs, Effecter PDRs etc.. This won\u0027t be easy to maintain in entity manager.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 80,
        "endChar": 74
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38c2ee2d_b6d2a7d6",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-18T09:37:49Z",
      "side": 1,
      "message": "Got you point. Try to keep pldmd as self-contained as possible.\nMy initial though here is that reusing the probing feature which entity-manager provided. It could avoid rewrite similar code again like what entity-manager has implemented.",
      "parentUuid": "724bc21d_e6cb02c2",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 80,
        "endChar": 74
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7cb5709_00e12eb6",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-10-21T01:21:48Z",
      "side": 1,
      "message": "\u003e Got you point. Try to keep pldmd as self-contained as possible.\n\u003e My initial though here is that reusing the probing feature which entity-manager provided. It could avoid rewrite similar code again like what entity-manager has implemented.\n\nRight now, There are already certain configuration files present in pldmd, that can create a sensor statically and attach it to a dbus property within BMC. refer : https://github.com/openbmc/pldm/blob/master/configurations/pdr/4.json",
      "parentUuid": "38c2ee2d_b6d2a7d6",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 80,
        "endChar": 74
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2cca1c2_83efecba",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-21T08:49:15Z",
      "side": 1,
      "message": "As far as I know, the current config file in pldmd is adding the property to dbus unconditional.\nI would like have a function for config file which can be added when some condition is matched. For example, the ABC_NIC_SENSOR_A.json is only added when pldmd detects the platform has ABC_NIC installed. The detection can be done by checking the FRU data. The similar function has been provided by entity-manager. So pldmd needs to develop similar function to remove the dependency on entity-manager.",
      "parentUuid": "e7cb5709_00e12eb6",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 80,
        "endChar": 74
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49284229_76c28b3f",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2021-10-21T01:21:48Z",
      "side": 1,
      "message": "Pooling is a computationally expensive operation. pldmd already supports receive async sensor events(platform event message), when a sensor on a remote PLDM terminus changes its state - it would /should send down a PLDM sensor event down to BMC - which could be enough to update the respective dbus objects.\n\nDSP0248 16.10 talks more about-  eventData format for sensorEvent.",
      "range": {
        "startLine": 100,
        "startChar": 29,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b61367ff_18be8945",
        "filename": "designs/pldm-sensor.md",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2021-10-21T08:49:15Z",
      "side": 1,
      "message": "Agree with you that polling could be a expensive operation. It is more efficient that BMC receives async event to update state sensor. But in some cases, for numeric sensor that reading changes more frequency(e.g. temperature) would be better to use polling instead async event.\n\nCould I update the wording like below to be more generic?\npldmd will update the state and reading of PLDM sensor to D-bus objects by polling or aync event depending on the type of sensor.",
      "parentUuid": "49284229_76c28b3f",
      "range": {
        "startLine": 100,
        "startChar": 29,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "277be8b88033f3b42336d252afcdb307d1ec6178",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}