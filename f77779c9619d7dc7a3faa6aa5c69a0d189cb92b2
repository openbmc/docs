{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "179cd04e_9c5dbbe1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-02T13:53:29Z",
      "side": 1,
      "message": "Thanks for reviewing so quickly 😊",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32322cc5_3f8b119c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "As an EM/dbus-sensors maintainer, I\u0027m not interested in supporting two different ways of representing DBus.  Supporting the one we have is difficult enough and what\u0027s proposed here isn\u0027t any simpler.  Unfortunately what we have today does allow PDI-based reactors to function, so I\u0027m going to spend time, it likely won\u0027t be on this.\n\nIf there are other reactor maintainers that want to band together and work through all the use cases to make this work, I\u0027m in full support of staging that effort under an option key once we get enough critical mass.\n\nI do worry that we\u0027ve left out a ton of requirements, and every one of these requirements is based on DBus.  We need to refocus them on the developer and the user part of the requirements.  I would far prefer very messy internal DBus structures, and functional user/developer APIs to the alternative.  If we can have both, I\u0027m in full support, and will likely help, but I don\u0027t think this as written gets us there, and the requirements need to be updated to reflect the users of this software, not the developers of this software.",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9356a221_9cda1e4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Reviewed as much as I could in the time I had.",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cd6f053_3cfa975c",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "Can you give links to examples of these in the dbus config?",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 22,
        "endChar": 61
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32bcad39_63204863",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2cd6f053_3cfa975c",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 22,
        "endChar": 61
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a309c10_7d52e8d8",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "?  Are there examples of this?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 75
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45de15a8_93d0b2fc",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "You can try it out for yourself. There is no upstream config i know of that has this problem, but it does not mean this problem does not exist.\n\nAnd at some point fields also have to be dropped because of DBus interface name length limitation.",
      "parentUuid": "0a309c10_7d52e8d8",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 75
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b21bd7d_b6b4ad55",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "To be clear, this is the PDI design intent.  At this time, EM and reactors don\u0027t use PDI, precisely because solving these problems are difficult.",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 29
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8b7380f_d272e9ad",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "How do you draw this conclusion? Can you link to any DBus or systemd related source where people are using unbounded sets of DBus interfaces?\n\nWhenever i look in DBus documentation or systemd documentation, they always refer to some well defined interfaces which are part of a bounded set.\n\nThey do not append indices to those interfaces to represent arrays.\nThat\u0027s something only OpenBMC did, right?\n\n\u003e At this time, EM and reactors don\u0027t use PDI\n\n`phosphor-bmc-code-mgmt` uses PDI on both client and server side.\nThe one thing preventing us from removing the last low level DBus related code there is how EM exposes nested objects in arrays.",
      "parentUuid": "2b21bd7d_b6b4ad55",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 29
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "293b897f_b45074ba",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-09-08T02:29:13Z",
      "side": 1,
      "message": "I agree with @alexander.hansen@9elements.com, EM\u0027s representation for arrays goes completely against the grain. I don\u0027t think it\u0027s defensible.",
      "parentUuid": "f8b7380f_d272e9ad",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 29
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5c87f65_d81b44b5",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "For the objects that exist that don\u0027t work, is it just Thresholds, MuxOutputs, and FirmwareInfo, or are there more?",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8be2a18_179e5de7",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "You can look into EM schemas to find all such cases. I don\u0027t think it is relevant in this discussion to go into specifics of any schema. The problem is generic and requires a generic solution.",
      "parentUuid": "b5c87f65_d81b44b5",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74df5c40_34c85ae2",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "Remove.  This isn\u0027t well documented to be a requirement.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00ce5f26_32f52d6d",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "I don\u0027t know anyone to ask for DBus design intent.\nSo based on DBus Spec and how systemd uses it, the design intent is inferred.\n\nIn particular, it should be clear that DBus interfaces are not meant to represent deeply nested information, since the length is limited by spec.\n\nAlso, DBus interfaces cannot be numbered to represent array elements.\nMultiple instances of something are always represented by different object paths,\nat least when i look at how systemd uses DBus.\n\nIf we do not follow the design intent, things stop working right. For example ObjectMapper does not work right with unbounded sets of interfaces.",
      "parentUuid": "74df5c40_34c85ae2",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8923ebf_d2bb6bda",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-09-08T02:29:13Z",
      "side": 1,
      "message": "D-Bus is specified by freedesktop.org. The documentation at [1] references [2], which has this to say:\n\n\u003e D-Bus interfaces define the methods and signals supported by D-Bus objects. In order to make use of a D-Bus interface it must be known to remote users. This interface definition may be hard coded into an application ...\n\n[1]: https://www.freedesktop.org/wiki/Software/dbus/#documentation\n[2]: https://pythonhosted.org/txdbus/dbus_overview.html#_interfaces\n\nThe strategy used by EM for arrays makes a bit of a mockery of this intent.",
      "parentUuid": "00ce5f26_32f52d6d",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 37
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a2165a0_5c994820",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "Nit, today we only need to support singly nested, so lets get that listed for now.  Multiple nested would be on different objects.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 74
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97cb8061_c45ba4b4",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "\u003e Multiple nested would be on different objects.\n\nHow did you reach this conclusion? Is there something documented, or did you just invent this concept. Is there a design to how EM exposes configuration?\n\n\u003e Multiple nested would be on different objects.\n\nThat\u0027s wildly inconsistent, exposing objects differently based on their nesting depth. So level 1 gets interface, level 2 gets nested interface,\nlevel 3 gets a different object path (p2), level 4 gets nested interface on p2,\nlevel 5 gets a different object path (p3) ?\n\nThat\u0027s completely arbitrary. You could also start a new object path at every 3 levels of depth instead.\n\nShould i put this wild idea into the list of alternatives considered?",
      "parentUuid": "8a2165a0_5c994820",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 74
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc62f669_55928195",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "Can we be more precise about what this means?  EM does reuse interfaces across multiple paths.",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 64
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dff0667d_af3e4db2",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "I split this requirement into 2 to make it more precise.",
      "parentUuid": "fc62f669_55928195",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 64
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f36b2c_f8253267",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "Remove.   I don\u0027t agree this is a requirement until we have a use case that\u0027s actually intended to do this.  EM config files are intentionally very flat to simplify this problem, and to separate out the interfaces that a single device can support.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 79
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7578f024_7b799f48",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "\u003e I don\u0027t agree this is a requirement until we have a use case that\u0027s actually intended to do this\n\nConfiguration for hardware does not magically stop at 2 levels of depth.\n\nThat\u0027s something you came up with. Device-tree does not have this limitation.\nFor example\n\n```\n\u0026i2c0 {\n|       status \u003d \"okay\";\n\n|       /* Hardware monitor with temperature sensors */\n|       nct7802@28 {\n|       |       compatible \u003d \"nuvoton,nct7802\";\n|       |       reg \u003d \u003c0x28\u003e;\n\n|       |       #address-cells \u003d \u003c1\u003e;\n|       |       #size-cells \u003d \u003c0\u003e;\n\n|       |       channel@0 { /* LTD */\n|       |       |       reg \u003d \u003c0\u003e;\n|       |       };\n\n|       |       channel@1 { /* RTD1 */\n|       |       |       reg \u003d \u003c1\u003e;\n|       |       |       sensor-type \u003d \"temperature\";\n|       |       |       temperature-mode \u003d \"thermistor\";\n|       |       };\n```\n\n\u003e EM config files are intentionally very flat to simplify this problem\n\nThat\u0027s just ignoring this issue by pretending it does not exist and flattening any config that\u0027s too deep.",
      "parentUuid": "17f36b2c_f8253267",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 79
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba12fa67_537d9f37",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2025-09-08T02:29:13Z",
      "side": 1,
      "message": "I share @alexander.hansen@9elements.com\u0027s concern here that you\u0027re trying to shoehorn inconvenient topology into an unnatural representation.",
      "parentUuid": "7578f024_7b799f48",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 79
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84bb901f_8bf09c35",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "Please include the requirements of the existing system, in that users need to be able to add/remove/update these nested properties.  If those APIs are changing, please articulate it.",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4feef4c5_65a67e8a",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Added this requirement with reference to `AddObject` API 👍",
      "parentUuid": "84bb901f_8bf09c35",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42e8f483_7acf3f31",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "Remove.  There is no reason to include the type at anything above the root object.  This type would be. SPIFlash.FirmwareInfo, which is trivially findable in code.\n\nSaid another way\n\nType: \"MySpecialFirmware\" here would be wrong, because we\u0027d be mixing types under a single key, so this can be simplified.",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 26
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9169b77_741663bd",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Apologies. We already aligned on that nested `Type` field is not necessary. Removed it.",
      "parentUuid": "42e8f483_7acf3f31",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 26
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "395b6464_0b0db293",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:05:03Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 80,
        "startChar": 46,
        "endLine": 80,
        "endChar": 66
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90cdcb4d_dc903371",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "395b6464_0b0db293",
      "range": {
        "startLine": 80,
        "startChar": 46,
        "endLine": 80,
        "endChar": 66
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efda24ed_1ebc7c9a",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Spitting one stanza across multiple paths is in opposition to the design intent stated above.  There\u0027s one device, there should be one path.",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 104,
        "endChar": 58
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5b66bdb_2acda13b",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "I\u0027m in full support of this, but can we remove this for now to keep this design simple?  If we can create correct PDIs, I don\u0027t think anyone will disagree that it is automatable.",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 183,
        "endChar": 78
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "738ae4e9_f338ab6f",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Removed the highlighted section.",
      "parentUuid": "d5b66bdb_2acda13b",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 183,
        "endChar": 78
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eacf738e_a42cd700",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 245,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Technically this is yes today.  People have built PDI containers today.  THey\u0027re maybe not the API we want, but they do function.",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 31
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a7908c6_c1134de1",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 245,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Nested objects are technically PDI compatible, but objects inside arrays are not.\nAt least from what i have seen.\n\nAnyways, i mean `DBus compatible` in the sense of being compatible with DBus design intent.",
      "parentUuid": "eacf738e_a42cd700",
      "range": {
        "startLine": 245,
        "startChar": 30,
        "endLine": 245,
        "endChar": 31
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b20c8b06_933d1c11",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Add to pros, it exists, and services all known use cases (single property update, user property update, user device creation), and requires no changing of any reactors.",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e8bdf2f_4f98138c",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b20c8b06_933d1c11",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd559057_7f39b3d2",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 276,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "This format has remained largely unchanged for 7 years, and in that time we\u0027ve onboarded tens if not hundreds of new devices.  Lets avoid using words like \"Broken\" and \"unmaintainable\", because if that were true, new systems wouldn\u0027t have onboarded.\n\nlets keep this to technical discussion, not opinion.",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 29
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36fad2f2_8d8e9b0c",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 276,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "It\u0027s only maintainable for you since you are reviewing bmcweb, entity-manager and dbus-sensors and know the full context of such changes.\n\nThat\u0027s broken with respect to the maintenance model since subprojects should at least in theory be able to be maintained by one person, who is not necessarily following all changes in other repos.\n\nSo the configuration interface should be stable and well known how they look like, without having to look into EM schemas and follow the code to figure out how it will be exposed and which types the properties will have.\n\n\n\u003e lets keep this to technical discussion, not opinion.\n\nI changed the wording. \u0027Verdict\u0027 section is meant to provide some conclusion, which at least partially has to be opinion based.\n\nWe cannot have any design without opinion, as there is rarely an objectively best design.",
      "parentUuid": "fd559057_7f39b3d2",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 29
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0426843e_adab7e94",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 288,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "I don\u0027t know if this is necessarily a con.  There are type safe json unpackers.",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 288,
        "endChar": 16
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f00004cd_b53cc420",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 288,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "okay, removed that one 👍",
      "parentUuid": "0426843e_adab7e94",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 288,
        "endChar": 16
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c402e9fc_e1d13482",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Threshold changes now break user expectation that they can be changed without reinitting the sensor.",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1622898f_d7d60f64",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Added this con.",
      "parentUuid": "c402e9fc_e1d13482",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26e8c806_5355ac48",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 290,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "More importantly, all reactors must take on a json dependency AND a dbus dependency.",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 290,
        "endChar": 26
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "395d343c_8ba3f53b",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 290,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Added this con.",
      "parentUuid": "26e8c806_5355ac48",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 290,
        "endChar": 26
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7a639f9_bf6ddecb",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "What does this mean?  I don\u0027t think this has nested dicts.",
      "range": {
        "startLine": 297,
        "startChar": 0,
        "endLine": 297,
        "endChar": 39
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b7b18f5_725080c7",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "I thought variant `v` can contain anything, right?\n\nMeant this to represent a dict, which should be able to contain other dicts, or is it not possible?",
      "parentUuid": "e7a639f9_bf6ddecb",
      "range": {
        "startLine": 297,
        "startChar": 0,
        "endLine": 297,
        "endChar": 39
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79002f7a_6bb2ed00",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Same as above.... we can have as much type safety as we\u0027re willing to generate code for.",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 16
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34daa509_a9588ced",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "The IPC needs to represent the types.\n\nWe should not go typed -\u003e untyped -\u003e typed.\n\nThat\u0027s just re-implementing typed IPC, we do not need to re-invent the wheel.\n\nDBus is already a typed IPC so we can use that instead of re-inventing.",
      "parentUuid": "79002f7a_6bb2ed00",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 16
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f2f57c7_f84c6697",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "This is arguably already a requirement today, so I\u0027m not sure I\u0027d list it as a con.",
      "range": {
        "startLine": 310,
        "startChar": 0,
        "endLine": 310,
        "endChar": 49
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c984b46d_a150bcb4",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "It\u0027s a con to me since we already have typed IPC with defined properties, so anything else is a downgrade.",
      "parentUuid": "4f2f57c7_f84c6697",
      "range": {
        "startLine": 310,
        "startChar": 0,
        "endLine": 310,
        "endChar": 49
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2de05433_97eb3dbe",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Please also point out that the conclusion of that email is that we should use omnisensor, a project that never really got adoption.",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72f73342_5e78eae3",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "My design is not about omnisensor, i do not want to mention it here.\n\nI only want to reference that post because it talks about how static types are useful for software to be easily maintainable.\n\n\nUsually projects do not accept complete re-writes of existing components.\n\nIts a big migration effort to reach feature parity, move platforms and \nsounds highly alienating to people who maintained the existing sub project for years.\n\nIn this particular case, i did not follow the trajectory, but i assume part of the reason was that it was written in rust, which makes it hard for people to maintain over time (split-brain syndrome with 2 high level languages).",
      "parentUuid": "2de05433_97eb3dbe",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7e06fde_72145c9a",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 349,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Can you articulate more what this looks like at a dbus level?",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f2e23c0_e73b2fda",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 349,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Sure, i made an example of how ADC config would look like.",
      "parentUuid": "c7e06fde_72145c9a",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "427062ec_15bc61e1",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 391,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "In line with dbus \"design intent\" in that it keeps one path per object.\nCan be implemented as a PDI",
      "range": {
        "startLine": 391,
        "startChar": 0,
        "endLine": 391,
        "endChar": 28
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abccecca_3116f9d9",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 391,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Added it 👍",
      "parentUuid": "427062ec_15bc61e1",
      "range": {
        "startLine": 391,
        "startChar": 0,
        "endLine": 391,
        "endChar": 28
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eb2bc2d_fa5454fa",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 395,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "The non nested interfaces would remain the same in this plan, right?  I think this is actually a pro, because it only requires the configuration interfaces that are CHANGING to be migrated.\nThat\u0027s huge in the amount of effort this will be, and our ability to stagger things out.  If I had to guess, this option cuts out 90% of the migration work.",
      "range": {
        "startLine": 395,
        "startChar": 0,
        "endLine": 395,
        "endChar": 54
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09bfffd3_e175efb9",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 395,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "No, in this design alternative, every config interface has to be migrated.",
      "parentUuid": "1eb2bc2d_fa5454fa",
      "range": {
        "startLine": 395,
        "startChar": 0,
        "endLine": 395,
        "endChar": 54
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dae80d5c_d002d914",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "Could use a better analysis here.  FWIW, this is the option I would pursue.",
      "range": {
        "startLine": 401,
        "startChar": 0,
        "endLine": 401,
        "endChar": 35
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f094ff5e_71b915de",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "You probably want option 4. (in this revision).\n\nThanks for mentioning, i will keep this comment open and list a few more alternatives, then see what others think 👍\n\nSince the alternative with explicitly typed containers is PDI compatible, it is an alternative where we at least make some progress compared to the current state.\n\nSo i would say that\u0027s an ok solution to me.\n\n\nI will leave the proposed design as is for this revision since new alternatives have been added. Based on further comments by others i can then change the preferred design, if we can all agree on something.",
      "parentUuid": "dae80d5c_d002d914",
      "range": {
        "startLine": 401,
        "startChar": 0,
        "endLine": 401,
        "endChar": 35
      },
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "684cc4b8_92742dac",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-02T23:24:07Z",
      "side": 1,
      "message": "This defeats the ability for EM to declare things that do not have a schema.  That\u0027s an important part of the development cycle, in that properties can be added and tested without necessarily knowing if they\u0027re useful yet.  Only at checkin time do we have to go write a schema, and at that point we\u0027ve succeeded.",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7177994_f19f5c27",
        "filename": "designs/configuration/pdi-compatible-config-interfaces.md",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-03T16:39:29Z",
      "side": 1,
      "message": "Added this con.",
      "parentUuid": "684cc4b8_92742dac",
      "revId": "f77779c9619d7dc7a3faa6aa5c69a0d189cb92b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}