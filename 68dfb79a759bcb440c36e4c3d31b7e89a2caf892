{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a3757646_b0e269e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-11T14:30:53Z",
      "side": 1,
      "message": "Friendly ping.",
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "783aa2fb_fb6ecb1b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-07-11T17:10:28Z",
      "side": 1,
      "message": "Might be good to add the actual Maintainers to take a look at this point",
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2d31c91_4b487dbf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-12T12:51:39Z",
      "side": 1,
      "message": "Oh.. I thought Ed is one of the maintainer.\nJust added maintainers as reviewer.",
      "parentUuid": "783aa2fb_fb6ecb1b",
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30e5fafc_e8d72103",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:54Z",
      "side": 1,
      "message": "I\u0027m a core maintainer, I\u0027m not a docs maintainer, although I do review here quite a bit.",
      "parentUuid": "b2d31c91_4b487dbf",
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd3f9fd0_ee1a9983",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "30e5fafc_e8d72103",
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb3b1b8f_cae8a5bd",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "This seems kind of odd, and it\u0027s not \"impossible\", as there have been other systems that rely on serial consoles to measure it.",
      "range": {
        "startLine": 14,
        "startChar": 45,
        "endLine": 16,
        "endChar": 56
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eee6c96_7b01def1",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "Yes, we can have another consumer to capture and analyze the host serial console log to measure the duration.\nHowever this consumer can\u0027t be an userspace application running on host. It can be run on BMC or any other component that is capable to access host serial console.\n\nSo what I\u0027m trying to explain in this section is that we can\u0027t rely on host to measure the host bootup/shutdown durations by its own.",
      "parentUuid": "eb3b1b8f_cae8a5bd",
      "range": {
        "startLine": 14,
        "startChar": 45,
        "endLine": 16,
        "endChar": 56
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "412facf8_df4e6bc6",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T15:59:51Z",
      "side": 1,
      "message": "Maybe rephrase to \"difficult\" instead of \"impossible\"?",
      "parentUuid": "0eee6c96_7b01def1",
      "range": {
        "startLine": 14,
        "startChar": 45,
        "endLine": 16,
        "endChar": 56
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4743b63_9637a868",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-20T17:10:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "412facf8_df4e6bc6",
      "range": {
        "startLine": 14,
        "startChar": 45,
        "endLine": 16,
        "endChar": 56
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17633131_4a194bb3",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "Can we make sure these terms are the same as the terms already used on the dbus power interfaces?  I think they\u0027re a little different.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 44,
        "endChar": 0
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e469887_36fe4e7a",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 44,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "I think you are talking about this: https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Control/Power/ACPIPowerState.interface.yaml#L15-L62\n\nI think I can make the term change as below:\n```\nAC power cycle -\u003e S0_G3_S0\nDC power cycle -\u003e S0_S5_S0\n```\nFor the term `Stage` and `Unmeasured`, I think they are specific to this design, I don\u0027t find an appropriate replacement.\n\nIs this change okay for you?",
      "parentUuid": "17633131_4a194bb3",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 44,
        "endChar": 0
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9c1d818_368dae63",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T15:59:51Z",
      "side": 1,
      "message": "Yep, I was referring to the power state things here:\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/b1de713e0fd8fe307a60ef65f3c353136fa6dc96/yaml/xyz/openbmc_project/State/Chassis.interface.yaml#L68\n\n\nSure, stage and unmeasured are fine.",
      "parentUuid": "5e469887_36fe4e7a",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 44,
        "endChar": 0
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "194709af_79741e26",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 44,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-20T17:10:18Z",
      "side": 1,
      "message": "```\nAC power cycle -\u003e S0_G3_S0\nDC power cycle -\u003e S0_S5_S0\n```\nReplaced",
      "parentUuid": "a9c1d818_368dae63",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 44,
        "endChar": 0
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b845e0f_3ee01035",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "On naming, can we not abbreviate \"boot time\".  \"bt\" could also mean bluetooth, and regardless of that \"bt\" is not very descriptive.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b79c67d_96dd0230",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "Okay... So do you prefer not abbreviate at all (BootTimeMonitor)?\nI am okay with that althought it\u0027s a bit too long to me.",
      "parentUuid": "5b845e0f_3ee01035",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28004d6e_83b7d065",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-07-19T04:27:27Z",
      "side": 1,
      "message": "No abbreviation is a big improvement.",
      "parentUuid": "8b79c67d_96dd0230",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56453ba4_bfe717a9",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T15:59:51Z",
      "side": 1,
      "message": "Yes, BootTimeMonitor is MUCH more descriptive.  Our goal is to be descriptive in naming, not attempt to have short names.",
      "parentUuid": "28004d6e_83b7d065",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53de1539_7a960133",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-20T17:10:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56453ba4_bfe717a9",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11cc5bdb_1c272e46",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-21T16:53:20Z",
      "side": 1,
      "message": "Reopening, commit message still says \"btmonitor\" as does the filename.  Did you mean to upload a new patch?",
      "parentUuid": "53de1539_7a960133",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7d6386d_c467a409",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-25T20:08:51Z",
      "side": 1,
      "message": "Just uploaded.",
      "parentUuid": "11cc5bdb_1c272e46",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 9
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7743e187_4a758a0f",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 50,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "In your background section, can you please talk about the existing https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/State/BMC.interface.yaml\n\nAnd why it can\u0027t be extended to add your use cases?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 67
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8480438_9c1b8179",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 50,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "I will add a section discussing this.\n\nShort answer:\n\nThis design doc is focusing on the host reboot process (BMC reboot is also included but not the main purpose) .\nWhile `State/BMC.interface` focus on the BMC states, which doesn\u0027t meet our needs.",
      "parentUuid": "7743e187_4a758a0f",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 67
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a860bffd_c7549a51",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 50,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T15:59:51Z",
      "side": 1,
      "message": "Answer in the background section of your next patch please.\n\n\u003e BMC reboot is also included but not the main purpose\n\nThis is kind of what I\u0027m pointing out, does the BMC monitoring need to stay in the existing bmc monitoring daemons, and the host monitoring things go into this new daemon?\n\n\u003e While `State/BMC.interface` focus on the BMC states, which doesn\u0027t meet our needs.\n\nLooking forward to the details of that getting answered in your next patch.",
      "parentUuid": "d8480438_9c1b8179",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 67
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "937c5fc1_862e116d",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 50,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-25T20:08:51Z",
      "side": 1,
      "message": "\u003e This is kind of what I\u0027m pointing out, does the BMC monitoring need to stay in the existing bmc monitoring daemons, and the host monitoring things go into this new daemon?\n\nYes, but it requires the existing bmc monitoring daemons to record some data that BootTimeMonitor needs.\nFor example: BootTimeMonitor needs the timestamp right before power-off (https://gerrit.openbmc.org/c/openbmc/google-misc/+/54422/9/subprojects/btmanager/service_files/record-down-end.service.in). This will be one of the things needs to be export by the existing bmc monitoring daemons.\n\n\u003e Looking forward to the details of that getting answered in your next patch.\n\nI will update the content asap.",
      "parentUuid": "a860bffd_c7549a51",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 67
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86f2e345_de3632dd",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 50,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-27T14:43:20Z",
      "side": 1,
      "message": "Rephrase the section `## Background and References`.\nI explain which dbus interface we can use and which we can\u0027t in that section.\n`State/BMC.interface` also included.",
      "parentUuid": "937c5fc1_862e116d",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 67
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b49ea25e_bd86d7ac",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "Please add more detail.  \"export\" isn\u0027t a great term.  Does this mean Redfish?  IPMI?  BOth?",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 72
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51756a64_f0f58056",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 52,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "Both. I added more details in it.\n```\n-   Capability to export any additional duration that the user required to DBus.\n    These additional durations can be consumed by Redfish or IPMI blob, depends\n    on the needs.\n```",
      "parentUuid": "b49ea25e_bd86d7ac",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 72
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8f63e8a_9b556c55",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-07-18T02:04:01Z",
      "side": 1,
      "message": "Can you add an explanation of *why* exposing a DBus interface is a requirement? What other component is consuming this information? For instance, why can\u0027t this instead be recovered from structured logging to the journal?",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 60
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01520352_025c8c13",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "\u003e What other component is consuming this information?\n\nIn my plan the consumer will be Redfish and IPMI blob.\n\n\u003e Can you add an explanation of *why* exposing a DBus interface is a requirement?\n\nIn my plan all the information will be consumed by Redfish and IPMI blob. And the DBus is the main interprocess communication system in BMC. So I think the DBus interface is a requirement.",
      "parentUuid": "c8f63e8a_9b556c55",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 60
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a1567a0_24ee4584",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-07-19T04:27:27Z",
      "side": 1,
      "message": "Just so we\u0027re clear, I\u0027d like that response in the wording of the requirement.\n\nAlso, can you add a pointer to the redfish schema that would expose this data? Some discussion of the IPMI blob structure would be good too.",
      "parentUuid": "01520352_025c8c13",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 60
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "235f34a9_7d5c54ca",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "Pretty sure this already exists.\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/State/BMC.interface.yaml#L68",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 55,
        "endChar": 34
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80d21ffe_4057dc8d",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "This is the reboot cause of the BMC. I am looking for the power cycle type of host.\n\nHere is the host state https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/State/Host.interface.yaml#L87.\nI might be able to leverage that. \nHowever I am not sure if we can map each `RestartCause` to `AC/DC`.\nFor example, if the `RestartCause` is `Unknown` or `RemoteCommand`, then we might not able to distinguish it\u0027s AC or DC.",
      "parentUuid": "235f34a9_7d5c54ca",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 55,
        "endChar": 34
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92a610ad_6cee8415",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T15:59:51Z",
      "side": 1,
      "message": "So maybe add an \"Unknown\" reboot state to the list of enums for when we can\u0027t distinguish?  We might want to look at what x86-power-control does here.",
      "parentUuid": "80d21ffe_4057dc8d",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 55,
        "endChar": 34
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "499db47b_cb1e9d5b",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-20T17:10:18Z",
      "side": 1,
      "message": "Done, I also elaborated more in the `Power cycle type` section.",
      "parentUuid": "92a610ad_6cee8415",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 55,
        "endChar": 34
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd1e805a_75d37b7f",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-21T16:53:20Z",
      "side": 1,
      "message": "I would\u0027ve expected some answer to \"Why aren\u0027t we using the existing interfaces for this?\"",
      "parentUuid": "499db47b_cb1e9d5b",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 55,
        "endChar": 34
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db48c57c_31edfda3",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 55,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-25T20:08:51Z",
      "side": 1,
      "message": "Ah I see.\nIn fact I don\u0027t have a strong reason for not using existing interfaces.\nI rephrase the `Power cycle type` section to indicate that we will directly use `RestartCause`.\nAlso updated the `Requirements` section",
      "parentUuid": "fd1e805a_75d37b7f",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 55,
        "endChar": 34
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b03824b_443b2878",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "\"Receive required commands\" needs more details.  All dbus deamons receive commands.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 50
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9580455c_81e4fc98",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b03824b_443b2878",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 50
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a656ec4_5d1213f1",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "Aren\u0027t IPMI blobs already supported, of which this would just be a new type?",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 7
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b96da23_05c57a81",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "We need a new OEM subcommand to support\n1. receiving the notification\n2. adding additional\nCode like this: https://gerrit.openbmc.org/c/openbmc/google-ipmi-sys/+/49367/24/commands.hpp",
      "parentUuid": "8a656ec4_5d1213f1",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 7
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3368ebe0_dc9c55b6",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T15:59:51Z",
      "side": 1,
      "message": "More details in that area (which commands) would be good.",
      "parentUuid": "1b96da23_05c57a81",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 7
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f76f680_07849db1",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-20T17:10:18Z",
      "side": 1,
      "message": "I added a section for describing the new OEM command format.\n`### What do the OEM commands look like?`\n\nHope this can answer your question.",
      "parentUuid": "3368ebe0_dc9c55b6",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 7
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e7eab80_728e8b0b",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 58,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-21T16:53:20Z",
      "side": 1,
      "message": "👍",
      "parentUuid": "7f76f680_07849db1",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 7
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5daf63ba_b9a7e253",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-15T17:18:26Z",
      "side": 1,
      "message": "Just something to be aware of, considering that we have multi-host systems in the queue, this needs to account for that.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34781d94_79a49744",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-18T15:54:57Z",
      "side": 1,
      "message": "I didn\u0027t consider that scenario.\nCan this doc focus on single host scenario first?\nThen supporting multi-host afterwards.",
      "parentUuid": "5daf63ba_b9a7e253",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d9e730b_76cc2b17",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-07-19T04:27:27Z",
      "side": 1,
      "message": "No, I think we need to give some thought to multi-host and its impact on any interfaces required now. I don\u0027t want to require breaking changes across the tree to cope with a future requirement that we\u0027re aware of now.",
      "parentUuid": "34781d94_79a49744",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33535f08_f390d0b1",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1001299
      },
      "writtenOn": "2022-07-19T06:01:23Z",
      "side": 1,
      "message": "That\u0027s a good point to think of. From our view, we assume that there is one main host that can represent the up/down status of a machine. This means:\n1. as long as the main host is booted, the whole machine is considered as booted/up.\n2. the rest of the hosts can be booted in parallel of the main host or after the main host is up. If the main host needs to wait for the other hosts before it\u0027s considered as up, the time will be counted in the userspace stage.\n3. the breakdown durations of other hosts are stored in durations, which is very flexible to store any data.\n4. the stage time covers only the contributors to wall clock time in a boot flow. In other words, we treat the boot flow as a linear flow of stages in order to have a meaningful breakdown of total boot time.\n\nFor scenarios of two or more main hosts, there are two possible solutions.\n1. only treat one of them as the main host, only the main management host is the main host. (this will be what I explained above)\n2. store and repot the data of all the hosts separately. (this needs a few implementation change to identify the host but the doc design should be very similar)\n\nFeel free to comments on the ideas. Multi-host is quite a new concept.",
      "parentUuid": "4d9e730b_76cc2b17",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e41854f1_577ad461",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-19T15:59:51Z",
      "side": 1,
      "message": "\u003e Can this doc focus on single host scenario first?\n\nConsidering that multi-host systems were proposed first, I don\u0027t think we can do it that way.  In terms of _implementation_ you can certainly start with the single-host case first, but in terms of design, we need to think about it here so we don\u0027t box ourselves into a corner.  Considering we\u0027re adding handlers to Redfish and IPMI, it behooves us to think about this now.\n\n\u003e  as long as the main host is booted, the whole machine is considered as booted/up.\n\nIn something like a yosemite, which node is the \"Main host\"?  They\u0027re all pretty equal, no?",
      "parentUuid": "33535f08_f390d0b1",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3afab27f_3cd75912",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1001299
      },
      "writtenOn": "2022-07-21T12:48:10Z",
      "side": 1,
      "message": "Agreed. Let\u0027s focus on single machine for now but keep the design doc flexible. So, basically, variables/data should be wrapped in a list of struct, storing data from different hosts. As for identifying the host ID, we should have a common infrastructure to enumerate/label the hosts. It\u0027s important to keep the host mapping consistent across all SW. I would expect something from the IPMI command telling me where the command source is. Also, somewhere in the BMC, we can query the host ID mapping or similar things. So, we don\u0027t need to change our IPMI command design to support sending host ID from the host side. WDYT? What\u0027s the current plan for identifying/mapping data from different hosts for other components?\n\nI was talking about some hypothetical situation. Although there are multiple hosts, but the whole machine is serving for one purpose, like a replica or a big storage tray. Thus, there will be synchronization event somewhere in user service or other places. There will be a main node that is responsible to respond to connections and distribute the tasks to other hosts. Once a connection is ready, the client can transfer data to sub-hosts directly.\n\nIt\u0027s not a common model for most multi-hosts machines. It\u0027s a more specialized design. This kind of single machine model can also be a transition stage between single-host to multi-host in a datacenter.",
      "parentUuid": "e41854f1_577ad461",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fff7f44_d2252886",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-21T16:53:20Z",
      "side": 1,
      "message": "\u003e Agreed. Let\u0027s focus on single machine for now but keep the design doc flexible. So, basically, variables/data should be wrapped in a list of struct, storing data from different hosts.\n\nYou say \"focus on the design\" but then you jump immediately into the implementation (by talking about structs and data storage).\n\n\u003e As for identifying the host ID, we should have a common infrastructure to enumerate/label the hosts.\n\nThis already exists in the dbus interfaces.\n\n\u003e It\u0027s important to keep the host mapping consistent across all SW. I would expect something from the IPMI command telling me where the command source is.\n\nYep, and because this would be a breaking change to the IPMI command, this is why we call it out now in the design phase.\n\n\u003e Also, somewhere in the BMC, we can query the host ID mapping or similar things. So, we don\u0027t need to change our IPMI command design to support sending host ID from the host side. WDYT?\n\n?  I don\u0027t understand this statement.  Any IPMI command we add would need to be aware of what host you\u0027re asking for the data from.\n\n\u003e What\u0027s the current plan for identifying/mapping data from different hosts for other components?\n\nThere are already components that do this today using dbus, and patches in review for others.\n\n\u003e \n\u003e I was talking about some hypothetical situation. Although there are multiple hosts, but the whole machine is serving for one purpose, like a replica or a big storage tray. Thus, there will be synchronization event somewhere in user service or other places. There will be a main node that is responsible to respond to connections and distribute the tasks to other hosts. Once a connection is ready, the client can transfer data to sub-hosts directly.\n\nAt a manageability level, this doesn\u0027t really affect the BMC if there are software orchestration layers for the hosts.  We just see them as hosts, each with an independent state.\n\n\u003e \n\u003e It\u0027s not a common model for most multi-hosts machines. It\u0027s a more specialized design. This kind of single machine model can also be a transition stage between single-host to multi-host in a datacenter.\n\nWe\u0027re literally going through that transition now, which is why it\u0027s mentioned in your design doc.",
      "parentUuid": "3afab27f_3cd75912",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaf728ef_97484c70",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-25T20:08:51Z",
      "side": 1,
      "message": "Extending this design to support multi-host needs a few prerequisites.\n\n1. BMC needs to be able to differentiate where the IPMI command comes from (which host is sending the IPMI command).\n2. `xyz.openbmc_project.State.Host` provider needs to support multi-host.\n\nIf these 2 are fulfilled, then BootTtimeMonitor can easily save the boot time info for each host separately.\nFrom the discussion above, it seems like 1) is still ongoing. Not sure if 2) is supported or not.\n\nWill update the multi-host scenario into doc.\n\n--------------------------------------------\n\nQuick explanation for the `main host` that Medicine mentioned above.\nWe are considering 2 scenarios:\n\n1. All the hosts are equal and power on simultaneously. In this case all the hosts will be treated the same (This should be what you expected).\n2. `main`/`sub` hosts. For example:\nIf the server uses a smartNIC which has a linux kernel in it. Then this smartNIC can be treated as a host. However this `smartNIC host` has to be fully power-on within the `loader` stage in `main host`. In this case either treating the `smartNIC host` as a host or not is fine. Since the time elapsed in `smartNIC host` already been accumulated into `loader` stage.",
      "parentUuid": "3fff7f44_d2252886",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ec0d01a_4c15b805",
        "filename": "designs/btmanager.md",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1000937
      },
      "writtenOn": "2022-07-27T14:43:20Z",
      "side": 1,
      "message": "I added multi-host support in the requirement.\nI didn\u0027t write too much becuase it\u0027s not hard as long as we can differentiate the IPMI command is sending from which host.",
      "parentUuid": "eaf728ef_97484c70",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 4
      },
      "revId": "68dfb79a759bcb440c36e4c3d31b7e89a2caf892",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}