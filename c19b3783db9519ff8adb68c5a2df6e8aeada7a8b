{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ccc65304_8a898e5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-02-04T12:56:39Z",
      "side": 1,
      "message": "Hi All,\n\nIf possible could you review this PLDM transport layer wrapper design.\n\nThanks.",
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8b2740b_937bb3df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-03-17T00:19:18Z",
      "side": 1,
      "message": "I don\u0027t have much of an influence above the transport layers, so I\u0027m not going to set a score here, but some general comments:\n\nIs this really worthwhile? there\u0027s not a lot of PLDM applications, so it seems that the introduction of a separate library is unnecessary. Does this avoid much duplicated infrastructure between applications?\n\nKeep in mind that the transport APIs that you\u0027re abstracting are fairly vanilla (in the MCTP case, it\u0027s the standard socket syscalls), and don\u0027t involve much novel code.\n\nIs it infeasible to interact directly with the transports in your application(s)?\n\nI might be completely wrong about this though, in which case could you add a bit of rationale to the doc?",
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9ff3e8d_4fb15916",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-03-17T13:55:00Z",
      "side": 1,
      "message": "Hi Jeremey, Mainly our idea is to reuse the existing applications such as pldm sensor and pldm FW update.Since the current pldm service and apps has direct binding with the MCTP transport layer and our platform has PLDM support over NCSI, we wanted to introduce this transport wrapper layer.\n\nThe main idea behind this design is to keep the PLDM layer implementation as it is and abstract  the transport layer api\u0027s with the transport wrapper.",
      "parentUuid": "c8b2740b_937bb3df",
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32209a27_c13fecd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-03-21T08:31:59Z",
      "side": 1,
      "message": "OK, so there are multiple applications, I see. In that case, the use of a library for this does make more sense.\n\nIn order to achieve this, you\u0027re also introducing a routing layer, of tids to their underlying transport addressing mechanism. I see you have a `discoverTIDs()` interface, but that doesn\u0027t seem sufficient. You may have:\n\n- endpoints that appear after the application has called discoverTIDs(). Is the application supposed to continuously call this?\n\n- endpoints that disappear; but no mechanism to inform the application that a tid is no longer valid\n\nTo solve these, you may need to process events outside of the PLDM send/receive flow...",
      "parentUuid": "b9ff3e8d_4fb15916",
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72b703dc_ac93d87b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T09:04:12Z",
      "side": 1,
      "message": "@Jeremy, there are no multiple applications. With the current implementation/design, all the PLDM types will be implemented as part of the PLDM daemon.\n\n@Naveen, Agree with the general intent that MCTP is not the only transport layer and PLDM should not be tied to MCTP and should abstract that to support other transport layers. But need to see more details on the transition from pldmd \u003c-\u003e mctp-demux-daemon to include pldmd \u003c-\u003e RBT communication. Also with Jeremy\u0027s MCTP kernel implementation, there will be a socket connection for every MCTP endpoint.",
      "parentUuid": "32209a27_c13fecd2",
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f38c3c01_e388c016",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-03-22T06:49:14Z",
      "side": 1,
      "message": "\u003e @Jeremy, there are no multiple applications.\n\nOK, why is this a library then?",
      "parentUuid": "72b703dc_ac93d87b",
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88f57669_17a0856b",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-03-20T06:04:32Z",
      "side": 1,
      "message": "Nit: Can reword this along the lines of - \"PLDM being an application layer protocol can bind on other type of transports like NC-SI. To enable other types of transports that can carry PLDM traffic, a transport layer abstraction is required\" (Basically, it is not the platforms that support other transport layers, but it the specifications that allow PLDM to bind on other transports)",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 35
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81a74ae6_1dd5d892",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T04:03:33Z",
      "side": 1,
      "message": "+1\n\nWe need to draft this problem description to include the full scope of the problem you are trying to solve. I mean rather than just \"PLDM transport wrapper on OpenBMC\", something like \"PLDM over RBT\" or \"PLDM Type 5 over RBT\" etc. \n\nWhat are the use cases in your proposal?  Looking at the whitepaper( https://www.dmtf.org/sites/default/files/standards/documents/DSP2015_2.0.0.pdf) \"PLDM over NCSI based on RBT\" is not a possibility. It is either \"PLDM over RBT\" or \"NC-SI Control over RBT\". Correct?",
      "parentUuid": "88f57669_17a0856b",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 35
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db9020c6_7ce6c1cd",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-03-21T07:37:09Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "579c3980_741b7eb2",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T04:03:33Z",
      "side": 1,
      "message": "What is the difference between Req 1 \u0026 Req 2? I think not just the PLDM request API, but how does PLDM daemon as a responder handle different transport types should be discussed here.\n\nI get the intent that instead of EID we should use terminus ID as the key for PLDM types to map to a socket.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 75
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62050c5e_47a3d2a3",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T04:03:33Z",
      "side": 1,
      "message": "Req 3 \u0026 Req 4 looks very similar. Is NC-SI control messages going to be be included in PLDM daemon? Would it be a socket based communication for NC-SI over RBT? More context is needed here.\n\n1) What library is used for NC-SI over RBT?\n2) How does PLDM daemon get to know that it is ready to do a discovery messages?\n3) Does the PLDM daemon needs to communicate with multiple terminus id, if that is a scenario how does PLDM daemon get to know that.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa4ad56d_c2c39328",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-03-20T06:04:32Z",
      "side": 1,
      "message": "nit: deduces",
      "range": {
        "startLine": 77,
        "startChar": 32,
        "endLine": 77,
        "endChar": 40
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fb3ad7f_7e4b1b03",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-03-21T08:31:59Z",
      "side": 1,
      "message": "The library should not be performing any EID discovery; that will have been performed by mctpd.\n\nThe library may access the results of MCTP control protocol enumeration over dbus though.",
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f62ebde_69920bd2",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-03-20T06:04:32Z",
      "side": 1,
      "message": "The discovered MCTP EID needs to support PLDM type. Not all MCTP EIDs would be interesting to pldmd",
      "range": {
        "startLine": 85,
        "startChar": 20,
        "endLine": 85,
        "endChar": 65
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91c17d16_ae14a77a",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T04:03:33Z",
      "side": 1,
      "message": "Can GetTID be used as a mechanism to read the TID and create a virtual terminus id in the case of collission?",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 117,
        "endChar": 35
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f414049f_23fc5572",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-03-21T07:37:09Z",
      "side": 1,
      "message": "+1\n\nUsing GetTID first to read TID of the device before we use SetTID(if TID is 0 in the response or if there is a TID collision) would be better.",
      "parentUuid": "91c17d16_ae14a77a",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 117,
        "endChar": 35
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "872410ec_3af47531",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-03-20T06:04:32Z",
      "side": 1,
      "message": "Does discoverTIDs handle dynamic detection of PLDM capable devices? I mean - hotplugged MCTP devices, devices that went through reset, etc..",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 125,
        "endChar": 38
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df452a4c_84591f04",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T04:03:33Z",
      "side": 1,
      "message": "DiscoverTIDs is an asynchronous process, readiness of the device cannot be guaranteed to be synchronous.",
      "parentUuid": "872410ec_3af47531",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 125,
        "endChar": 38
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f0d654b_ee368c8e",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-03-20T06:04:32Z",
      "side": 1,
      "message": "Do we need separate API for receive ? I imagined received PLDM payloads would invoke a callback, thus the transport layer abstraction needs to register a callback handler. Can you explain how these APIs are going to be utilized ?",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 3
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "913ee96a_da091cc4",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-03-20T06:04:32Z",
      "side": 1,
      "message": "libpldm",
      "range": {
        "startLine": 145,
        "startChar": 20,
        "endLine": 145,
        "endChar": 28
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd66b677_dea2c25b",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T04:03:33Z",
      "side": 1,
      "message": "A flow diagram can greatly improve the understanding of this proposal.",
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36c7a94a_dc264884",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T04:03:33Z",
      "side": 1,
      "message": "For MCTP endpoints, the current implementation is PLDM daemon does a D-Bus based discovery for a MCTP endpoints. What does a wrapper for MCTP based devices?",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 179,
        "endChar": 49
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdd828f4_4c38795e",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-03-21T08:31:59Z",
      "side": 1,
      "message": "Yep, agree with Tom here (and see my comment above). Can you clarify what you mean by \"when the PLDM service is called\"? I don\u0027t quite understand the flow behind discoverTIDs()",
      "parentUuid": "36c7a94a_dc264884",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 179,
        "endChar": 49
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2076c55f_7bab3295",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-03-20T06:04:32Z",
      "side": 1,
      "message": "This captures only \"send-receive\" flow - i.e. the pldmd wrapper handling instanceId matched responses. However, there are PLDM usecases where pldmd has to handle received payload and transmit a response (PLDM Firmware update flow). Can you please describe how this will be handled as well?",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 194,
        "endChar": 51
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4afd9d13_727d7f00",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2022-03-21T04:03:33Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "2076c55f_7bab3295",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 194,
        "endChar": 51
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f199b720_a92c6d5e",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-03-21T07:37:09Z",
      "side": 1,
      "message": "+1. Also, It will be easy to understand if it was a flow diagram.",
      "parentUuid": "4afd9d13_727d7f00",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 194,
        "endChar": 51
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "202cff17_cb85bfcf",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 201,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-03-20T06:04:32Z",
      "side": 1,
      "message": "Conceptually the proposal sounds good to me. I also suggest handling PLDM Type 0 inside the transport layer abstraction. The reason for doing so are as follows:\n1) PLDM Type discovery can be done on a PLDM terminus and the transport abstraction (wrapper layer) can invoke the corresponding PLDM Type specific managers\n2) In future, PLDM Type Version specific managers can be invoked as well\n3) The transport abstraction (i.e. pldm wrapper) is required to handle \"Set TID\" command which is PLDM Type 0 command",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 201,
        "endChar": 68
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94bbf9e0_8f753ffb",
        "filename": "designs/pldm-transport-layer-wrapper.md",
        "patchSetId": 4
      },
      "lineNbr": 201,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-03-21T07:37:09Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "202cff17_cb85bfcf",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 201,
        "endChar": 68
      },
      "revId": "c19b3783db9519ff8adb68c5a2df6e8aeada7a8b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}