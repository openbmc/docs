{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d2dceb60_0951cd58",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-11T17:55:33Z",
      "side": 1,
      "message": "This is new... bmcweb exposing dbus endpoints??  Who is calling them?",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa134c95_d1977125",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-11T18:56:33Z",
      "side": 1,
      "message": "Thanks for your comment. Not entirely new.\n\nIt is very like how BMCWeb gets new root certificate and server certificate today (notified by SIGHUB).\n\nWe want to update the authz config in similar way",
      "parentUuid": "d2dceb60_0951cd58",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bf1b971_c4eabaa6",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-11T20:00:06Z",
      "side": 1,
      "message": "Isn\u0027t SIGHUP different from exposing dbus objects though?  Who is calling this dbus interface?  You didn\u0027t mention that.\n\nI\u0027m surprised this isn\u0027t a signal from something like phosphor-user-manager.",
      "parentUuid": "aa134c95_d1977125",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9ede659_a44ef673",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-11T20:09:58Z",
      "side": 1,
      "message": "Done. I added some more context about who is calling this dbus interface.\n\n\u003e Isn\u0027t SIGHUP different from exposing dbus objects though?\n\nIt doesn\u0027t need to be dbus method call. It can also be a SIGHUB. Welcome any ideas about how to notify BMCWeb there is a new authz configuration\n\n\u003e I\u0027m surprised this isn\u0027t a signal from something like phosphor-user-manager.\n\nApologize, why do you mention phosphor-user-manager? Are you thinking about something else other than Redfish authz?",
      "parentUuid": "5bf1b971_c4eabaa6",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff56e178_37f93ee6",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-11T20:14:58Z",
      "side": 1,
      "message": "\u003e Apologize, why do you mention phosphor-user-manager? Are you thinking about something else other than Redfish authz?\n\nWe\u0027re talking about users and permissions, right?  phosphor-user-manager already can take data from LDAP.  I\u0027m not really seeing how this is drastically different from that.  Maybe I don\u0027t understand what \u0027authz\u0027 is.",
      "parentUuid": "c9ede659_a44ef673",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51cb5cff_429cb378",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-11T21:32:02Z",
      "side": 1,
      "message": "This design is talking about Redfish roles, Redfish privileges, and Redfish authorization, not the authentication part or linux permissions (does password/username match, is this username a root on system).",
      "parentUuid": "ff56e178_37f93ee6",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ec45112_4127df03",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-11T21:37:33Z",
      "side": 1,
      "message": "\u003e This design is talking about Redfish roles, Redfish privileges, and Redfish authorization, not the authentication part or linux permissions (does password/username match, is this username a root on system).\n\n\nNot sure I understand why those are necessarily distinct.  Isn\u0027t the default behavior to provide some mapping between phosphor-user-manager identities and Redfish roles?  We map all the IPMI users as well.  Not understanding why we want to make Redfish \"special\".",
      "parentUuid": "51cb5cff_429cb378",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd42d81c_57f4339a",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-11T21:46:29Z",
      "side": 1,
      "message": "Thanks for the question. That part (mapping linux permissions to Redfish roles) is remaining the same https://github.com/openbmc/bmcweb/blob/3ba0007367777144f474fdf99439ae8c03633486/redfish-core/lib/roles.hpp#L28.\n\nBut you bring up a great topic, how we use these newly added Redfish roles. Yes, I would add new section about that, I plan to use mTLS (common name, or subject alternative name) as the authenticated identity, and make bmcweb expose APIs (or take mappings from the configuration), so that those mTLS identities can be mapped to Redfish roles without involving the linux user stack.",
      "parentUuid": "5ec45112_4127df03",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbd547dd_10ce7bc4",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-11T22:18:11Z",
      "side": 1,
      "message": "\u003e mTLS identities can be mapped to Redfish roles without involving the linux user stack.\n\nYou write this as if it is obvious why this is a good thing. It isn’t obvious to me. In any case hopefully this discussion highlights some gaps in your design document.",
      "parentUuid": "bd42d81c_57f4339a",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1844470_9d3bffb8",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-11T22:27:25Z",
      "side": 1,
      "message": "\u003e\u003e mTLS identities can be mapped to Redfish roles without involving the linux user stack.\n\u003e You write this as if it is obvious why this is a good thing. It isn’t obvious to me.\n\nSo, this design is to provide optionalities. Google\u0027s systems don\u0027t have any meaningful linux users, all the authentication is done by the mTLS stack. Identities are all metadata in the certificates.\n\nWe found that currently OpenBMC doesn\u0027t provide an optional to support this. So, this design is to fill this gap. This design is not to prove this is better, but just to make current system more flexible without breaking existing use cases (where identities and Linux users are tightly coupled). If other contributors or companies have similar use cases, they can share this implementation from Google.\n\nIs this acceptable? If not, what\u0027s your idea to support Google\u0027s use case?",
      "parentUuid": "dbd547dd_10ce7bc4",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e5d1633_fc5c99e8",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-11T22:43:11Z",
      "side": 1,
      "message": "FYI, I added some new sections for this.",
      "parentUuid": "d1844470_9d3bffb8",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8172f64_1a8ff0de",
        "filename": "designs/redfish-authorization.md",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-12T12:24:15Z",
      "side": 1,
      "message": "\u003e If not, what\u0027s your idea to support Google\u0027s use case?\n\nI apologize upfront if I come off as blunt in this.\n\n\"I want to enable dynamic users and privileges using mTLS in Redfish\" is a usecase.  \"We have a proprietary blob of json we\u0027ve made up in a particular format that we want to force bmcweb to support\" is an implementation.\n\nI have no problem supporting the above statement as a use-case.  I might even find it acceptable with some discussion to go down your particular implementation proposal.  One major purpose of these designs is to ensure we are adequately exploring the \"Alternatives\" space such that we\u0027re not just throwing unmaintainable features randomly in applications, but that the code base is evolving in a somewhat sustainable and cohesive direction.\n\nI\u0027ve tried to ask you about alternative paths, partially because I don\u0027t even fully understand what your \"use case\" is or what your \"proposal\" is, and you\u0027ve come back with \"I guess you don\u0027t want to support us?\".  Frankly, this design comes off as the typical \"we have a bunch of code we wrote 2 years ago without any insight from the rest of the community and now we want to foist onto the community for long-term maintenance so we are trying to justify the design decisions we made 2 years ago without any real alternatives\".\n\nAgain, I have no problem supporting dynamic mTLS users and roles.  In fact, our company will likely leverage that feature for similar reasons.  My purpose in asking questions is to make sure we\u0027re not one-offing this support in an entirely unmaintainable way.\n\nSo, to restart this discussion in a practical way please elaborate on the following (in the doc):\n\n- Why do we need to interact _directly_ with bmcweb for this functionality?  Yes, this is about Redfish *today* but there is no reason why we wouldn\u0027t want to have dynamic users supported in other interfaces down the road (or by other companies).  (I, for instance, would like my users to be able to use both mTLS/Redfish and SSH using our centralized certificate management system and clearly I also don\u0027t want to \u0027useradd\u0027 everyone in the company on each BMC).\n\n- We already have some amount of dynamic users and roles using LDAP.  Why are you not able to build on top of that?  Why are you not able to follow a similar design pattern at least?  Stated another way: I\u0027m pretty sure bmcweb already handles LDAP-based users; why isn\u0027t this transparent from bmcweb\u0027s perspective and just a new \"dynamic users\" method from the BMC\u0027s perspective.\n\n- Why do you explicitly want to avoid using Linux\u0027s authentication mechanisms and insert your own into bmcweb?  We _could_ have done the same thing for IPMI a long time ago when we did it, but we decided not to, and instead we wanted common authentication paths based on well-worn code in Linux (ie. PAM).  Your proposal is a drift from this overall project direction and so we need to justify why this is the right direction for the project.",
      "parentUuid": "2e5d1633_fc5c99e8",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 76
      },
      "revId": "8e1d5aa91d11c92f1458ddc81f3c5bdfd41498a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}