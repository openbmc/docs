{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "47983d9e_f06ac190",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-12-09T00:31:24Z",
      "side": 1,
      "message": "Please write in the imperative mood and avoid using \"this commit\" in this manner.\n\n\u003e Introduce a reference ...",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 11
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2530348c_d4d4af0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-09T05:24:00Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "47983d9e_f06ac190",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 11
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41e01486_8d1eab29",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-12-09T00:31:24Z",
      "side": 1,
      "message": "What does this mean in practice?\n\nCan you please document how you generated the file so others can understand how they might maintain it going forwards?",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "262d3a04_67ce0288",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-09T05:24:00Z",
      "side": 1,
      "message": "Updated commit message and also added new commit for document updates , prior to this.",
      "parentUuid": "41e01486_8d1eab29",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3cb0676_d277449c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-12-10T05:28:24Z",
      "side": 1,
      "message": "I don\u0027t feel that your changes address my question of\n\n\u003e Can you please document how you generated the file so others can understand how they might maintain it going forwards?",
      "parentUuid": "262d3a04_67ce0288",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a10f6a80_ccf782ba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-12T12:27:17Z",
      "side": 1,
      "message": "Added additional info ine newer version.",
      "parentUuid": "c3cb0676_d277449c",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1334527_bb9f872d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-12-13T05:49:23Z",
      "side": 1,
      "message": "Sorry, but can you point to where you think it\u0027s documented?\n\nI\u0027m looking for a way where we can automatically generate the complete list of rules, or something.",
      "parentUuid": "a10f6a80_ccf782ba",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ddc8a18_08c1ea1e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-13T06:00:23Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/docs/+/76369/6/cpp-style-and-conventions.md#186 am referring, \nRegarding the rule i followed high level added additional comments as review response for reference here https://gerrit.openbmc.org/c/openbmc/docs/+/76345/6..7/style/cpp/.clang-tidy-cpp#b354\n\nLet me know incase you are looking diffrent info ?",
      "parentUuid": "a1334527_bb9f872d",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be80b327_cb14d9a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-13T06:56:58Z",
      "side": 1,
      "message": "\u003eI\u0027m looking for a way where we can automatically generate the complete list of rules, or something.\nThere are two phases of enablement \n1. Readiness for running clang-tidy, This requires is to fix all clang-tidy build level errors, ( rfere https://gerrit.openbmc.org/c/openbmc/phosphor-power/+/76336 commit chain as example) .\n2. Use the base config file , and run clang-tidy using docker. and disable failing teste initial enablement-\u003e this is easy for Repo , which doesn\u0027t have clang-tidy support in place . Using automated way now to fix this , only minimum manual intervention. Since the tidy enabled Repos , not following std format . this is tricky to automate.\nIn summary with proposing common config file , easy to automate for any future change in future . That is the intention of this proposal.",
      "parentUuid": "1ddc8a18_08c1ea1e",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06b40810_7d78826d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-12-16T22:50:51Z",
      "side": 1,
      "message": "I\u0027m struggling with your response because my understanding of what you\u0027ve written is as if I asked an entirely different question.\n\nYou don\u0027t need to enable all rules at once. My comment on discord was about listing all the rules and explicitly disabling them individually with `-` prefix. That way maintainers of application repositories at least had a list of all the rules they _could_ choose to enable. I see you\u0027ve moved away from the complete-list approach so my question has lost its motivation, but I was hoping it wasn\u0027t tricky to answer. \"There\u0027s no automated way to generate the list\" is a fine response (even if it would be disappointing).",
      "parentUuid": "be80b327_cb14d9a6",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd1de04e_552ea393",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-17T04:45:38Z",
      "side": 1,
      "message": "The .clang-tidy-cpp file attached here is derived from the list at Clang-Tidy Checks and tailored for OpenBMC projects based on category levels instead of individual checks. For example, instead of listing all 100+ bugprone-xxx-xxx checks, I grouped them under the bugprone* category. This approach helps users enable or disable specific groups of checks more efficiently. Based on review feedback, no one wanted to review all 400 checks I initially added, so I opted for a category-based approach. This method still meets our initial requirements. Let me know if you need additional information on how developers can better enable clang-tidy coverage.\n\nFor more details on my approach, please refer to this commit.https://gerrit.openbmc.org/c/openbmc/phosphor-power/+/76608/\n\nRegarding automation, \"there\u0027s no fully automated way to generate the list\". As mentioned earlier, full automation requires some manual intervention due to the steps involved before enabling clang-tidy fixes. Let me know what kind of automation approach you are looking for, or we can discuss it on Discord if you need further clarification.\n\nYou can use the command clang-tidy-18 -list-checks -checks\u003d to list supported checks specific to clang-tidy version 18.",
      "parentUuid": "06b40810_7d78826d",
      "range": {
        "startLine": 11,
        "startChar": 14,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85927bd4_98b2b50c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-12-08T11:50:14Z",
      "side": 1,
      "message": "Discord Discussion Link : https://discord.com/channels/775381525260664832/867820390406422538/1313366808258154527",
      "revId": "4606ddefbe6a1f8c72b4920478cc243801261bec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}