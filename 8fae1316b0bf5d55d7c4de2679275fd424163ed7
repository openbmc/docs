{
  "comments": [
    {
      "key": {
        "uuid": "c58a7a39_7ade5e43",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Is this the word you intend to use here?\n\n\u003e staking: support (a plant) with a stake or stakes.\n\nIf this is a misspelling, I\u0027m not sure what word you intended to use.",
      "range": {
        "startLine": 12,
        "startChar": 8,
        "endLine": 12,
        "endChar": 15
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88ac035a_de019c73",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Can we get an email address at least?  Preference is a Discord user as well.",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 5,
        "endChar": 9
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ca2e01e_e49a4ee1",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88ac035a_de019c73",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 5,
        "endChar": 9
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25ebfad5_301ddfe9",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Ok, on the commit message I suspect you meant \"stacking\".  Is this even the right word though?  Is it \"packing\"?",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 47
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57ac5308_8f22ec7a",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25ebfad5_301ddfe9",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 47
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71bf60c4_55eb27de",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Maybe a dumb question, but why is Cable Presence (inventory) being exposed via sdr (sensor) instead of fru?",
      "range": {
        "startLine": 11,
        "startChar": 56,
        "endLine": 11,
        "endChar": 65
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b1d07c2_a06f6d0c",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "The presence state is collected from gpio pins instead of detection fru presence. In addition, it may or may not contain serial numbers, part numbers, etc.",
      "parentUuid": "71bf60c4_55eb27de",
      "range": {
        "startLine": 11,
        "startChar": 56,
        "endLine": 11,
        "endChar": 65
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3212eb98_550e63b8",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-19T17:02:24Z",
      "side": 1,
      "message": "I\u0027m not really satisfied with this answer.\n\n\u003e The presence state is collected from gpio pins instead of detection fru presence.\n\nI don\u0027t know what you mean by \"detection fru presence\".  How the BMC detects an inventory entity vs how it presents it over IPMI are two different things.  Just because we\u0027re not using an i2c EEPROM to identify the cable, in this case, doesn\u0027t seem like it can\u0027t be presented as an inventory/fru item.\n\n\u003e In addition, it may or may not contain serial numbers, part numbers, etc.\n\nYou certainly have a part-number on a cable.  Are IPMI fru records really _required_ to have all of these things or are they optional?",
      "parentUuid": "5b1d07c2_a06f6d0c",
      "range": {
        "startLine": 11,
        "startChar": 56,
        "endLine": 11,
        "endChar": 65
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d992d88_14ceaf5c",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T19:58:05Z",
      "side": 1,
      "message": "It is an interesting point to report the presence state via type12(fru). I quickly looked into it and unlike discrete sensors, it is not easy to pack multiple presence states into 1 fru slot. Also, fru has a limit of 255 too. I will put a todo here to look into how to do it properly using type12 records.",
      "parentUuid": "3212eb98_550e63b8",
      "range": {
        "startLine": 11,
        "startChar": 56,
        "endLine": 11,
        "endChar": 65
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ed488b7_885d5bf7",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-19T20:04:52Z",
      "side": 1,
      "message": "Alright.  Please add this kind of information in an \"Alternatives Considered\" section as well.",
      "parentUuid": "2d992d88_14ceaf5c",
      "range": {
        "startLine": 11,
        "startChar": 56,
        "endLine": 11,
        "endChar": 65
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9e5c82c_53ee7b59",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "enterprise.",
      "range": {
        "startLine": 18,
        "startChar": 60,
        "endLine": 18,
        "endChar": 70
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b0e301d_8b5139eb",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9e5c82c_53ee7b59",
      "range": {
        "startLine": 18,
        "startChar": 60,
        "endLine": 18,
        "endChar": 70
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c101064d_610ada8c",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Check for \u0027stake\u0027 throughout.",
      "range": {
        "startLine": 22,
        "startChar": 29,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "719816e1_2564e029",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c101064d_610ada8c",
      "range": {
        "startLine": 22,
        "startChar": 29,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc455b3b_521b8e33",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "How do these interfaces relate to `Inventory.Connector.*`?  Should they?  Are cables a type of connector?",
      "range": {
        "startLine": 26,
        "startChar": 22,
        "endLine": 26,
        "endChar": 37
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9566f61_d9a14ef1",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T19:58:05Z",
      "side": 1,
      "message": "You are correct. The Daemon needs to implement both connector and cable interface.",
      "parentUuid": "fc455b3b_521b8e33",
      "range": {
        "startLine": 26,
        "startChar": 22,
        "endLine": 26,
        "endChar": 37
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "338c7f37_af1a8a50",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Do we need to reference the commit for these also?\n\nSuggest improved English:\n\nThere will be two new dbus interfaces: `Inventory.Item.Cable` and `Inventory.Decorator.CableClass`.\n\n(Also suggest using backticks around them as they are code identifiers.)\n\nI don\u0027t see anything obvious in the rest of the document describing CableClass.  Is that missing?",
      "range": {
        "startLine": 26,
        "startChar": 37,
        "endLine": 27,
        "endChar": 32
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "382219ec_aa4d8600",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Sorry I  meant we only need to introduce the iventory.item.cable interface. The proposed designed doesn\u0027t need CableClass. Correction has been made to the doc.",
      "parentUuid": "338c7f37_af1a8a50",
      "range": {
        "startLine": 26,
        "startChar": 37,
        "endLine": 27,
        "endChar": 32
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eef64cab_c54ef3bd",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Where do these pin labels come from?  GPIOs in the device tree?  Why can\u0027t we just name them reasonably?  The name you picked here as an example seems like a schematic name and we tend to want to avoid using those in the codebase.",
      "range": {
        "startLine": 53,
        "startChar": 56,
        "endLine": 54,
        "endChar": 60
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "455c25f3_27f52d48",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Renamed it to GpioLine and yes, they are the gpio line label from the device tree.",
      "parentUuid": "eef64cab_c54ef3bd",
      "range": {
        "startLine": 53,
        "startChar": 56,
        "endLine": 54,
        "endChar": 60
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "250d614b_3c318494",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "invert?",
      "range": {
        "startLine": 55,
        "startChar": 44,
        "endLine": 55,
        "endChar": 51
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13987643_c143369b",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "250d614b_3c318494",
      "range": {
        "startLine": 55,
        "startChar": 44,
        "endLine": 55,
        "endChar": 51
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36e412f6_8657cd23",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Why is that number chosen?  Why is there polling at all?  Shouldn\u0027t this be done with GPIO interrupts?",
      "range": {
        "startLine": 56,
        "startChar": 64,
        "endLine": 58,
        "endChar": 10
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62188830_cf6aac3c",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "The gpio_line_event_wait requires all the lines to come from the same chip which is not necessary true all the time. See https://github.com/brgl/libgpiod/blob/cc23ef61f66d5a9055b0e9fbdcfe6744c8a637ae/lib/core.c#L993\n\n We could spawn threads to listen to each chips but I don\u0027t think we should increase the complexity of a such simple daemon. As long as a sleep-poll mechanism meets our requirements, it should be enough. The 10 seconds polling interval is up to discussion. I feel like a simple gpio detecting daemon doesn\u0027t need to be run in a aggressive loop.",
      "parentUuid": "36e412f6_8657cd23",
      "range": {
        "startLine": 56,
        "startChar": 64,
        "endLine": 58,
        "endChar": 10
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb85d9e9_8f686443",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-19T17:02:24Z",
      "side": 1,
      "message": "In some regards I was simply trying to get us to refrain from polling.",
      "parentUuid": "62188830_cf6aac3c",
      "range": {
        "startLine": 56,
        "startChar": 64,
        "endLine": 58,
        "endChar": 10
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1fe0a7_40901ce7",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Where does \u0027cable\u0027 come from in your example?\n\nHow do you handle N identical cables?  Are they always grouped?  What if (N \u003e 8), or whatever fits in an SDR?",
      "range": {
        "startLine": 67,
        "startChar": 46,
        "endLine": 67,
        "endChar": 51
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5057d9e6_f4f623ae",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "They should be index despite the fact that it is identical. In the ipmi world, yes, they will be grouped and they should be grouped. In the redfish world, because we don\u0027t have the 256 limit, it could be reported in a flat list.\n\nYou are correct about the hierarchy. It should be /xyz/openbmc_project/inventory/item/cable1 instead of xyz/openbmc_project/inventory/item/cable/cable1.",
      "parentUuid": "0e1fe0a7_40901ce7",
      "range": {
        "startLine": 67,
        "startChar": 46,
        "endLine": 67,
        "endChar": 51
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4726867c_8c9d2870",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-19T17:02:24Z",
      "side": 1,
      "message": "So again, I\u0027m stumped as to how IPMI identifies cables that are suppose to be grouped.  When you had hierarchy it was obvious how IPMI might find them and group them, but it wasn\u0027t obvious how you specified them.  Now that you\u0027ve removed the hierarchy I don\u0027t know how IPMI identifies ones which should be grouped.",
      "parentUuid": "5057d9e6_f4f623ae",
      "range": {
        "startLine": 67,
        "startChar": 46,
        "endLine": 67,
        "endChar": 51
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f066fcf6_8af10618",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T19:58:05Z",
      "side": 1,
      "message": "Sure. \nSo say /xyz/openbmc_project/inventory/item/cable1 and /xyz/openbmc_project/inventory/item/cable/cable2\n\nIf we extract the sdr name from the object path, it is cable1 and cable2. Then, if we cut the trailing numbers, it becomes cable for both of them. Therefore, we know that the two need to be grouped. Same thing for cable3 and cable4. However, if we named it cableA1 and cableB1, The two will not be grouped.",
      "parentUuid": "4726867c_8c9d2870",
      "range": {
        "startLine": 67,
        "startChar": 46,
        "endLine": 67,
        "endChar": 51
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bb2748f_6c7ea8a7",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-19T20:04:52Z",
      "side": 1,
      "message": "Alright.  This kind of explanation needs to be in the doc here.\n\nI\u0027m not sure if everyone will be satisfied with \"path segment matching\" as the approach but we should at least spell it out if that is what you are proposing.",
      "parentUuid": "f066fcf6_8af10618",
      "range": {
        "startLine": 67,
        "startChar": 46,
        "endLine": 67,
        "endChar": 51
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55a2ef6f_533f405c",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "cable2?",
      "range": {
        "startLine": 68,
        "startChar": 52,
        "endLine": 68,
        "endChar": 58
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffde5fd3_620f8d40",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55a2ef6f_533f405c",
      "range": {
        "startLine": 68,
        "startChar": 52,
        "endLine": 68,
        "endChar": 58
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0144987_b684a929",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "This might be an answer to my (N \u003e 8) question above.\n\nI think this means we would potentially end up with multiple entity manager JSON files for a single fru because of this restriction.  Is that acceptable?",
      "range": {
        "startLine": 74,
        "startChar": 5,
        "endLine": 74,
        "endChar": 45
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b62c6ba_5d8d75c0",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "Why do we need multiple JSON file? We only need one and in that JSON, we can specify the groups .",
      "parentUuid": "d0144987_b684a929",
      "range": {
        "startLine": 74,
        "startChar": 5,
        "endLine": 74,
        "endChar": 45
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "215f8a30_ad00df93",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-19T17:02:24Z",
      "side": 1,
      "message": "I don\u0027t know?  What does a \"each group from config file\" mean?  Are there multiple \"Exposes\" entries somehow?  I\u0027m not an EM expert, but it is especially non-obvious to me how someone would represent a cable-group with 16 cables.",
      "parentUuid": "9b62c6ba_5d8d75c0",
      "range": {
        "startLine": 74,
        "startChar": 5,
        "endLine": 74,
        "endChar": 45
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce393636_c7d05891",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T19:58:05Z",
      "side": 1,
      "message": "Updated the doc with more explanation of how to report many cables in different groups. Please see if this make sense.",
      "parentUuid": "215f8a30_ad00df93",
      "range": {
        "startLine": 74,
        "startChar": 5,
        "endLine": 74,
        "endChar": 45
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cad438b3_40372f26",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T20:17:02Z",
      "side": 1,
      "message": "Is there an off-by-one here?  You listed 15 items.",
      "range": {
        "startLine": 112,
        "startChar": 19,
        "endLine": 112,
        "endChar": 26
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd1e56f5_c88d84ff",
        "filename": "designs/gpio-based-cable-presence.md",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 1000952
      },
      "writtenOn": "2021-08-19T16:32:17Z",
      "side": 1,
      "message": "yes, typo",
      "parentUuid": "cad438b3_40372f26",
      "range": {
        "startLine": 112,
        "startChar": 19,
        "endLine": 112,
        "endChar": 26
      },
      "revId": "8fae1316b0bf5d55d7c4de2679275fd424163ed7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}