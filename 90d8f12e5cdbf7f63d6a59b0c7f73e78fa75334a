{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6d29b69d_e50f1d39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-21T00:27:34Z",
      "side": 1,
      "message": "Hi Quang, I have a few more things on which I\u0027d like clarification.",
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60b57524_5aad210c",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-21T00:27:34Z",
      "side": 1,
      "message": "This seems like you\u0027re putting constraints on the network topology (one host?) and configuration (static only)? Can you unpack that? Should this work with one BMC host interface with multiple hosts managed via the BMC? Even if the justification is \"in-band IPMI constrains us to one host\" that would help. But even under that circumstance, how do you ensure the host\u0027s interface is configured to meet the assumptions of the BMC\u0027s EM configuration for it? DHCP would be one method of avoiding broken assumptions, but it seems it\u0027s not accommodated by the proposal?",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 64
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4f827dc_6ccf05cf",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2024-02-21T01:24:32Z",
      "side": 1,
      "message": "Agree with Andrew that we need to deal with multiple Host support.\nAbout DHCP, I don\u0027t think it is appropriate. Having requirement on the Host UEFI and OS support DHCP server is not realistic so just pre-configured static IP address in the BMC side and have some method for the Host to check for BMC IP to work with (to build SMBIOS Type 42 data and application will use information from this data).",
      "parentUuid": "60b57524_5aad210c",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 64
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5507423f_5ce22de5",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-21T02:34:16Z",
      "side": 1,
      "message": "I\u0027ll defer to almost anyone else on the UEFI side, as I don\u0027t have much (any) experience there. However, I was approaching this with the view that the BMC would run the internal network and the host would acquire the lease. I wasn\u0027t suggesting that the UEFI implementation also provide a DHCP server, that is definitely too much. But it seems you\u0027re thinking of the ownership the other way around to what I am? Is there a reason for it to be one way or the other? It would be good to unpack the answer to that in the document.",
      "parentUuid": "d4f827dc_6ccf05cf",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 64
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "659656d6_b5555f87",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-21T07:04:37Z",
      "side": 1,
      "message": "@Andrew Jeffery\nSince now I propose multiple host configuration in `entity manager`, this design not limit to single host; it now supports multiple host system. What we need to do is that we need to specify what interface for which host. Let\u0027s say, we need to assign `host0` and `host1` link to `eth0`, `eth1`, respectively in advance and they are static assignment in `entity-manager`.",
      "parentUuid": "d4f827dc_6ccf05cf",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 64
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7e21d93_d9442f49",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-22T01:18:06Z",
      "side": 1,
      "message": "I\u0027m struggling with your response there because I don\u0027t feel like it addresses my point. I was trying to unpack who \"owns\" the link in the sense of e.g. DHCP. We could also go with \"no-one\" and potentially use zero-conf addressing, but then you\u0027d have to be careful of routing across multiple interfaces.\n\nRequiring static addressing feels concerning because the network configuration for the host and the BMC need to be synchronised somehow. Avoiding static addressing would help that, but there\u0027s a complexity trade-off. It\u0027s okay to state that dynamic addressing is out-of-scope, but it should be stated explicitly in the document along with the reason why.",
      "parentUuid": "659656d6_b5555f87",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 64
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2c3ddf2_37e5bb82",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-25T16:49:07Z",
      "side": 1,
      "message": "Acknowledged. I\u0027ve removed the requirement of configuring static IP address. The service which brings up host interface will choose how that interface will be brought up (which is out-of-scope of this design).",
      "parentUuid": "e7e21d93_d9442f49",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 64
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "191b0863_006cca47",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 152,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-21T00:27:34Z",
      "side": 1,
      "message": "typo: receiving",
      "range": {
        "startLine": 152,
        "startChar": 29,
        "endLine": 152,
        "endChar": 37
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "891c5559_64144671",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 152,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-21T07:04:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "191b0863_006cca47",
      "range": {
        "startLine": 152,
        "startChar": 29,
        "endLine": 152,
        "endChar": 37
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9340c219_41453464",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 190,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-21T00:27:34Z",
      "side": 1,
      "message": "Why is this worse?",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 190,
        "endChar": 40
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb299249_985e5188",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 190,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-21T07:04:37Z",
      "side": 1,
      "message": "Acknowledged. Added more detailed.",
      "parentUuid": "9340c219_41453464",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 190,
        "endChar": 40
      },
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4c2cad1_f3e9c638",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 191,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-21T00:27:34Z",
      "side": 1,
      "message": "Can you list the `SO_BINDTODEVICE` approach for constraining what network sources can use bootstrap accounts as an alternative as well, along with why it\u0027s worse than your proposed solution?",
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f66cf1fb_8c8a6b4c",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 191,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-21T07:04:37Z",
      "side": 1,
      "message": "`SO_BINDTODEVICE` will bind ethernet device (device name) to socket for transfering data via that socket.\n\nIn this design, I do not intent to send/receive data via that ethernet device. What I aim to do here is that authenticating if a connection request is (1) from a bootstrap account and (2) sent from host (via host interface).\n\nWhen a connection request comes, there are 2 information of it we can use for the bootstrap account authentication, they are username and requester\u0027s IP address of connection request.\n\nFor (1), we can use username to check the group name.\nFor (2), we want to ensure that the IP address of the connection request are from host (the host interface IP address). Since we already have host interface IP address acquired from `entity-manager` configuration, we just need to compare the 2 IP addresses (comparing IP string value) then we know that IP address is from host interface or not. It is really straightforward.\n\nSo, I think `SO_BINDTODEVICE` approach is a bit off-topic for authenticating bootstrap accounts.",
      "parentUuid": "b4c2cad1_f3e9c638",
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe1a987a_594db581",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 191,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-02-22T01:18:06Z",
      "side": 1,
      "message": "What you have is effectively a trusted physical ethernet adapter: It\u0027s trusted because it has a direct, internal physical connection to the host, to the exclusion of other devices. We know this because it\u0027s asserted to be the case via the EM configuration provided, which should be generated from the platform schematics. The IP addresses are irrelevant and arbitrary for the purpose of security, they\u0027re only used because they\u0027re required to speak redfish, and at the moment they have to take specific values because you\u0027re requiring static addressing. You\u0027re then leaning on those specific addresses as a proxy for whether the connection is trusted.\n\nUsing `SO_BINDTODEVICE` associates a (listening) socket with the trusted adapter, therefore any connection it accepts is also trusted (by its bound adapter\u0027s internal physical association with the host, to the exclusion of other devices). This removes some of the complexity of your proposal as you no-longer need to define and compare IP addresses, and perhaps addresses Patrick\u0027s security concern as well. Some check is required in order to implement the proposal at all, so I don\u0027t some effort to associate the socket with a trusted interface causes much concern there.\n\nIn my mind `SO_BINDTODEVICE` directly ties the security of the design (only allowing authentication of bootstrap accounts on internal host interfaces) to the device providing the property (the physical adapter). It works with static or dynamic addressing, because again the addresses aren\u0027t relevant for the purpose of upholding the security property. I don\u0027t think the concept is off-topic.",
      "parentUuid": "f66cf1fb_8c8a6b4c",
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "477ba476_3c218f1b",
        "filename": "designs/bootstrap-account-access-restriction.md",
        "patchSetId": 4
      },
      "lineNbr": 191,
      "author": {
        "id": 1001612
      },
      "writtenOn": "2024-02-25T16:49:07Z",
      "side": 1,
      "message": "Acknowledged. Yes, I will add the `SO_BINDTODEVICE` approach to Alternatives Consideration.",
      "parentUuid": "fe1a987a_594db581",
      "revId": "90d8f12e5cdbf7f63d6a59b0c7f73e78fa75334a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}