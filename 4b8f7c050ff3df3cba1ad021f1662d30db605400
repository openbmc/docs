{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dc732430_fa8428a6",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-02-03T20:40:35Z",
      "side": 1,
      "message": "maybe add this to the glossary?",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 25
      },
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73531807_6c3b9af3",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-03T20:59:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc732430_fa8428a6",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 25
      },
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61174043_83ebca8f",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-02-03T20:40:35Z",
      "side": 1,
      "message": "the service guys confirmed you don\u0027t need to provide the ability to change the service interval?",
      "range": {
        "startLine": 77,
        "startChar": 58,
        "endLine": 77,
        "endChar": 79
      },
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ee93a50_c638c187",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-03T20:59:57Z",
      "side": 1,
      "message": "Yes, fixed one month",
      "parentUuid": "61174043_83ebca8f",
      "range": {
        "startLine": 77,
        "startChar": 58,
        "endLine": 77,
        "endChar": 79
      },
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bb3979a_770524a6",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-02T17:45:36Z",
      "side": 1,
      "message": "We generally should not be creating dbus interfaces that send JSON blobs.  If this is in your own upstream, I guess that is for you to decide if it is appropriate, but I\u0027m not sure why bmcweb would accept this proposal.",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3629d5b_7d4a2082",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-02T18:12:09Z",
      "side": 1,
      "message": "So it should work like a dump? A request for creating a file and offloading it separately?",
      "parentUuid": "7bb3979a_770524a6",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fc45b5b_45b9a4d1",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-02-03T01:17:06Z",
      "side": 1,
      "message": "Why can\u0027t we specify a DBus interfaces that expose the details you outline below? It sounds like we need several, call them `ServiceEvent`, `FailureIsolationEvent` and `ForcedIsolationEvent` for bikeshed purposes? `bmcweb` can then query these if necessary and package the data up in whatever way we deem appropriate.",
      "parentUuid": "d3629d5b_7d4a2082",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dd84e53_708cd5dc",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-02-03T08:21:13Z",
      "side": 1,
      "message": "yes, I think we can spread this data across D-bus interfaces as needed.\notherwise we can also consider saving this json content in a file and share unix file descriptor as property over D-bus.",
      "parentUuid": "8fc45b5b_45b9a4d1",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f237f5c_b4e8a52c",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-03T20:44:05Z",
      "side": 1,
      "message": "ServiceEvent, FailureIsolationEvent, or ForcedIsolationEvent also be returning blob, so what is the difference if it is separate or combined?",
      "parentUuid": "2dd84e53_708cd5dc",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a5fde5a_3b488a06",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-02-06T08:19:10Z",
      "side": 1,
      "message": "I don\u0027t follow. We would define them so they don\u0027t return blobs, but populate the members appropriately. You start to outline a schema below. This just needs translation into PDI YAML, right? Or am I overlooking something?",
      "parentUuid": "7f237f5c_b4e8a52c",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5199294_5af54b08",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-09T01:52:33Z",
      "side": 1,
      "message": "What I understood from your suggestion is to add methods to retrieve ServiceEvent etc. is that correct?\n\nThe problem is that each of these sections can grow based on the number of failures and forced de-configurations so the size won\u0027t be fixed for that data part.\n\nBut if planning to make calls for each service action from BMCWeb, that will be too many calls, right?\n\nIn legacy systems, there was just one call that returned a blob of XML with all these data and which can grow to several KBs",
      "parentUuid": "8a5fde5a_3b488a06",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ed65c68_2eef2be8",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-02-13T01:46:30Z",
      "side": 1,
      "message": "\u003e What I understood from your suggestion is to add methods to retrieve ServiceEvent etc. is that correct?\n\nNo. I was suggesting you define several DBus interfaces with members that directly expose the data. No methods required.\n\n\u003e The problem is that each of these sections can grow based on the number of failures and forced de-configurations so the size won\u0027t be fixed for that data part.\n\nCan you be more precise here with respect to the number of failures and forced deconfigurations to which you\u0027re referring? Surely these are each for separate parts, or multiple distinct types of event on one part? If so, we can continue with my suggestion of representing the data by defining appropriate DBus interfaces with members that expose the data directly.\n\n\u003e But if planning to make calls for each service action from BMCWeb, that will be too many calls, right?\n\u003e\n\u003e In legacy systems, there was just one call that returned a blob of XML with all these data and which can grow to several KBs\n\nHow many calls are too many calls? I wouldn\u0027t try to optimise yet - given my queries above I don\u0027t think the problem has been stated precisely enough to allow that.",
      "parentUuid": "f5199294_5af54b08",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a84b82b9_c56f0c78",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-13T03:25:52Z",
      "side": 1,
      "message": "These are the possible members to expose\n\n1. log entries with a special flag set to indicate that failure is important\n2. HW Isolation entries \n3. Forced deconfigurations\n4. FCO number and policies\n\nRespective services expose 1 and 2, and settings expose 4\nbut to model 3, all the deconfigurable units need to be modeled by some service.\n\nBut even after all these are available as dbus, we need a service to capture it and put it in a JSON file, right?",
      "parentUuid": "1ed65c68_2eef2be8",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad53dcc_488db635",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-02-13T04:45:29Z",
      "side": 1,
      "message": "\u003e But even after all these are available as dbus, we need a service to capture it and put it in a JSON file, right?\n\nI don\u0027t see how we get to that, no, besides a bit of a hand-wave that of \"we need to do JSON if we\u0027re doing Redfish\". But even then, it\u0027s not clear why some process other than bmcweb has to be generating JSON blobs. After reading the document again, I think it lacks any description of how nag hooks into the redfish data model and how we get the nag data out. I think perhaps we need to start there at the top and work our way to the bottom (where I was proposing the DBus interfaces above) rather than starting at the bottom and work our way up.\n\nWhat\u0027s requesting this data? How is it doing it? Can you provide example `curl` interactions with (potentially yet-to-be-implemented) redfish endpoints to describe what you had in mind?",
      "parentUuid": "a84b82b9_c56f0c78",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d671b85_1be8bdd5",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-14T10:00:54Z",
      "side": 1,
      "message": "Getting rid of new redfish methods for retrieving the data since the users are ready to accept it as part of the dump.",
      "parentUuid": "5ad53dcc_488db635",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bcb039e_77a33f5b",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-02-03T20:40:35Z",
      "side": 1,
      "message": "would this ever be different than line 137?",
      "range": {
        "startLine": 151,
        "startChar": 18,
        "endLine": 151,
        "endChar": 39
      },
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4632ffb2_5f1ebc1e",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-03T20:59:57Z",
      "side": 1,
      "message": "I am not finding a reason this can be different, but this is present in legacy XML, so added it here, I will check again and remove it if redundant",
      "parentUuid": "1bcb039e_77a33f5b",
      "range": {
        "startLine": 151,
        "startChar": 18,
        "endLine": 151,
        "endChar": 39
      },
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7572a053_bb7cb47b",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-06T08:11:01Z",
      "side": 1,
      "message": "It looks redundant so removing",
      "parentUuid": "4632ffb2_5f1ebc1e",
      "range": {
        "startLine": 151,
        "startChar": 18,
        "endLine": 151,
        "endChar": 39
      },
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19121cb4_abe70954",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-02-03T01:17:06Z",
      "side": 1,
      "message": "I find it hard to believe there are literally no alternatives to the proposal? What trade-offs did you consider? Please write them down here, and argue why these alternatives are worse than the proposal above.\n\nAlso see Grammarly\u0027s blog post on how to write argumentative essays (which is how this document should be approached):\n\nhttps://www.grammarly.com/blog/argumentative-essay/",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec05e1ab_a2dbcdf9",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 183,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-06T08:11:01Z",
      "side": 1,
      "message": "Adding alternative proposal",
      "parentUuid": "19121cb4_abe70954",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc4c36e1_e213b7dc",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-02-03T08:21:13Z",
      "side": 1,
      "message": "can we treat this hardware failure data as another type of dump?",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e79c7c36_3e356fb3",
        "filename": "designs/oem/ibm/nag-on-openbmc.md",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-03T20:44:05Z",
      "side": 1,
      "message": "This is being discussed as an option",
      "parentUuid": "cc4c36e1_e213b7dc",
      "revId": "4b8f7c050ff3df3cba1ad021f1662d30db605400",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}