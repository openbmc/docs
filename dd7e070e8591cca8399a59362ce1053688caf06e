{
  "comments": [
    {
      "key": {
        "uuid": "f0c328be_d1f55d6a",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-01T09:30:53Z",
      "side": 1,
      "message": "Since there is an existing https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/40289, this commit should clarify the intent in regards to the existing proposal - an alternate/replacement/preferred?",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bd41b6e_8436fdf3",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 330,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "Most of the stuff is same compared to https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/40289.\n\nThis proposal involves software-manager between redfish and PLDM service.\nThis is done to active the following.\n1. customers may have extra signing, encryption or any other thing over PLDM. These things can be handled by software-manger. So that PLDM service will do only the firmware update as per the spec.\n\n2. Software-manger can take care of clean up activities in success and failure cases of firmware update.\n\n3. In case of bundled update(single package having multiple firmware images), software-manager collates the firmware update status or progress to the redfish.",
      "parentUuid": "f0c328be_d1f55d6a",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0f8ca09_686fe010",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-01T09:30:53Z",
      "side": 1,
      "message": "How will the UA use this further?",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "472238b8_2d8a6812",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "This can be used by UA during firmware update process.\nEg: Update Component command uses component classification index that was obtained from the GetFirmwareParameters command to indicate which firmware component should be updated.\n\noptionally PLDM service(UA) can expose the required info to D-Bus. This can give addition information to the user, which can help during validation.",
      "parentUuid": "a0f8ca09_686fe010",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7222be6e_3adb4330",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-06-01T05:01:03Z",
      "side": 1,
      "message": "https://github.com/openbmc/phosphor-bmc-code-mgmt/blob/master/meson.build#L207\n\nThe phosphor-version-software-manager will be extended to handle PLDM header parsing?",
      "range": {
        "startLine": 359,
        "startChar": 58,
        "endLine": 359,
        "endChar": 75
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f5eccb4_ccb70a57",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-01T09:30:53Z",
      "side": 1,
      "message": "Is software manager a new component or https://github.com/openbmc/phosphor-bmc-code-mgmt? Apps like https://github.com/openbmc/phosphor-psu-code-mgmt don\u0027t go through bmc-code-mgmt. What is the advantage with having bmc-code-mgmt understand multiple FW update package headers?",
      "range": {
        "startLine": 359,
        "startChar": 58,
        "endLine": 359,
        "endChar": 74
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f069bc77_e01f7d38",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "it will only parse the meta data.",
      "parentUuid": "7222be6e_3adb4330",
      "range": {
        "startLine": 359,
        "startChar": 58,
        "endLine": 359,
        "endChar": 75
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab37a317_efb770f5",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "it is not a new component it is https://github.com/openbmc/phosphor-bmc-code-mgmt.\nAdvantages of having software-manager is explained in the comment at line 330",
      "parentUuid": "7f5eccb4_ccb70a57",
      "range": {
        "startLine": 359,
        "startChar": 58,
        "endLine": 359,
        "endChar": 74
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c3996a_9142ff5d",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 486,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-06-01T05:01:03Z",
      "side": 1,
      "message": "I guess you are suggesting \u003centity_name\u003e\u003centity_instance\u003e looking at the example.\n\nBut there are PLDM devices which might not necessarily implement the FRU specification. This can break the design of passing NIC0, NIC1 in the xyz.openbmc_project.Software.ImageTargets. We might need a more flexible design. In the case I am dealing with the inventory is populated by another application and the device does not support FRU specification.\n\nOne option is to use the \u003cidentifier\u003e in the inventory object the firmware is associated for the list of `xyz.openbmc_project.Software.ImageTargets and make the object path of the firmware as /xyz/openbmc_project/software/\u003chash of ActiveComponentImageSetVersionString\u003e",
      "range": {
        "startLine": 486,
        "startChar": 43,
        "endLine": 486,
        "endChar": 56
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e30da918_c9c4e52f",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 486,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-06-01T08:21:06Z",
      "side": 1,
      "message": "Another way to do it can be having a json configuration which maps Device Descriptors with the identifier",
      "parentUuid": "d0c3996a_9142ff5d",
      "range": {
        "startLine": 486,
        "startChar": 43,
        "endLine": 486,
        "endChar": 56
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2859950a_c659a0d2",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 486,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "Agree will update in the next patch set.",
      "parentUuid": "e30da918_c9c4e52f",
      "range": {
        "startLine": 486,
        "startChar": 43,
        "endLine": 486,
        "endChar": 56
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cd88601_356bf6fb",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 490,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-01T09:30:53Z",
      "side": 1,
      "message": "What entities will act on this interface? How is different than the same interface added by the sw-manager?",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf52437e_2ee211cc",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 490,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "As prat of exposing inventory info to redfish, PLDM service will do it. This object will be crated for each FWU supported device.\nThis will be done after running inventory commands to FWU supported devices.\n\nSoftware-manager adds this interface during firmware update and this is used to know the firmware update status.",
      "parentUuid": "8cd88601_356bf6fb",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec12bda8_290f7c7c",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-06-01T05:01:03Z",
      "side": 1,
      "message": "Using the PLDM FW update spec commands, how do you figure out whether the device only supports inventory commands and not firmware update?",
      "range": {
        "startLine": 490,
        "startChar": 0,
        "endLine": 493,
        "endChar": 61
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02341bb6_0d51d7a6",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-06-01T08:21:06Z",
      "side": 1,
      "message": "This comes from the Base spec. There is a command in the base spec (Get PLDM Commands) which takes the PLDM type as input and provides the bitmap of commands supported as output. \n\nOn the hindsight, we will also get to know whether the FD supports optional commands such as Get Package Data.",
      "parentUuid": "ec12bda8_290f7c7c",
      "range": {
        "startLine": 490,
        "startChar": 0,
        "endLine": 493,
        "endChar": 61
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80de1ebf_b39a8b9e",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-06-01T09:17:19Z",
      "side": 1,
      "message": "Ack, what are the enumeration values being proposed here?",
      "parentUuid": "02341bb6_0d51d7a6",
      "range": {
        "startLine": 490,
        "startChar": 0,
        "endLine": 493,
        "endChar": 61
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d7939f9_272e6535",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "ACTIVE: if it supports FWU\nFAIL: if FWU is not suppoeted.",
      "parentUuid": "80de1ebf_b39a8b9e",
      "range": {
        "startLine": 490,
        "startChar": 0,
        "endLine": 493,
        "endChar": 61
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9413948d_4d9d13fd",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-06-01T05:01:03Z",
      "side": 1,
      "message": "There could be multiple components in the FD, will there be a separate object for each component?",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 41
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe5c81df_61bb2744",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-06-01T08:21:06Z",
      "side": 1,
      "message": "The question is - do we really need to have one per component or can the overall device\u0027s package version suffice? \nI think the package version (at the device level) should suffice most practical needs. Say a FD has some component images, the nomenclature for each component object is going to difficult because I don\u0027t see a way to fetch inventory information (unless we have preconfigured data) and don\u0027t envision a case for consumers of this information (at component level)\n\nIf a usecase arrives (say for validation requiremetns), we could simply have the component information interface which lists out PLDM specific component related information.",
      "parentUuid": "9413948d_4d9d13fd",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 41
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7efd00d2_53ac71a7",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2021-06-01T09:00:19Z",
      "side": 1,
      "message": "Rewording the last line - we could have the `xyz.openbmc_project.Software.Version` interface on per component basis if such a requirement arrives.",
      "parentUuid": "fe5c81df_61bb2744",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 41
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe7ee308_24a34b3e",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2021-06-01T09:17:19Z",
      "side": 1,
      "message": "For a firmware update the package version will mostly suffice. \n\nMy question was about the inventory information exposed. GetFirmwareParameters returns multiple component information, will there be a separate D-Bus object for each component? I think that is a proper expression of the software inventory.",
      "parentUuid": "7efd00d2_53ac71a7",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 41
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "485ba2af_89391178",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "If we get such requirement.\nyes, each component can have a version interface.\nwe can go with hierarchy like\n/xyz/openbmc_project/software/NIC_0/Component_0 or some thing like that.",
      "parentUuid": "fe7ee308_24a34b3e",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 41
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5a9682d_d6bfdf7a",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-01T09:30:53Z",
      "side": 1,
      "message": "How is this different than the interfaces added by the pldm daemon (line 483)?",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37f20cba_7c8d5479",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "Same is explained in the comments at line 490.",
      "parentUuid": "e5a9682d_d6bfdf7a",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db799990_7d9fceb4",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 504,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-01T09:30:53Z",
      "side": 1,
      "message": "The PLDM daemon could itself have done this. What is the advantage of doing this in the software manager? The current approach needs two d-bus calls: pldmd-\u003esoftware-manager, bmcweb-\u003esoftware-manager, instead of the one from https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/40289 where this is done within pldmd - which acts both as image manager and item updater.",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f17617_451668a9",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 504,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "keeping bundled update in mind went with this approach.\nEg: if the firmware package have PLDM and non-PLDM firmwares. Then PLDM can only update the its own status.\n\nKeeping modularity in mind went with this approach.",
      "parentUuid": "db799990_7d9fceb4",
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b2a18ae_19e1f04e",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-01T09:30:53Z",
      "side": 1,
      "message": "How? This needs an example/elaboration.",
      "range": {
        "startLine": 514,
        "startChar": 10,
        "endLine": 514,
        "endChar": 78
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9703d0c7_bcf019f1",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "PLDM service will update the inventory, so that user can view the available devices.\nImageTargets  is an array of strings. In which user can pass the target entities as  httpPushUri arguments. And the same info will be passed to PLDM service in the D-Bus method call. PLDM tries to match the entities and proceed for the firmware update.\n\nEg: In the inventory if the availabe devices are NIC0, NIC1, GPU0, GPU1. Now user intents to update the firmware of the NIC0 and GPU1, he can pass them as httpPushUri arguments. internally will be set to the property ImageTargets and passed as an argument to PLDM service.\n\nI will update the Example in next patch set.",
      "parentUuid": "2b2a18ae_19e1f04e",
      "range": {
        "startLine": 514,
        "startChar": 10,
        "endLine": 514,
        "endChar": 78
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83675aea_1870735a",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-06-01T09:30:53Z",
      "side": 1,
      "message": "not following this",
      "range": {
        "startLine": 522,
        "startChar": 4,
        "endLine": 522,
        "endChar": 34
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea7ae15f_b6f3245e",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1000412
      },
      "writtenOn": "2021-06-02T11:42:36Z",
      "side": 1,
      "message": "ImageTargets property(user interested target devices for firmware update) is passed and argument to \"StartFWUpdate\" d-Bus method.",
      "parentUuid": "83675aea_1870735a",
      "range": {
        "startLine": 522,
        "startChar": 4,
        "endLine": 522,
        "endChar": 34
      },
      "revId": "dd7e070e8591cca8399a59362ce1053688caf06e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}