{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8f031702_10356360",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "This design hits on a few things that I struggle with:\n1. Passthrough apis, that pass through one protocol to another.  These are difficult to authenticate/authorize/test well, and add dependencies into the chain.\n2. APIs not backed by a standard or specification (OpenBMCs history of adoption of these is spotty).\n3. Protocols that are functionally closed to change (ipmi).\n4. New features that already have an implementation.  IPMI works just fine over the http-dbus-rest protocol that has existed for a long time.  SOL already works fine over a websocket without needing RMCP overhead.  I\u0027m certain there\u0027s improvements here, but we need to articulate those with testing/numbers so that we can tell folks when to use each tool, and to make sure that maintaining two implementations is worth it.\n\nIn the ideal, the ipmi spec could have a new definition for \"ipmi over http\" that we could implement, but as we know, the ipmi specification has been abandoned by it\u0027s owners, so this is functionally just an openbmc OEM interface, even though this design doc makes it appear as a normal interface.  This design needs to make it clear in external naming that this is OpenBMC OEM defined, and has really nothing to do with \"IPMI\" at a protocol layer, aside from sharing some command sets.",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea5a3acf_c420ea00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T02:21:43Z",
      "side": 1,
      "message": "+ @alexander@amelkin.msk.ru as the owner of ipmitool maintainer.",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50fdd6cc_b44d3e21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-18T01:28:27Z",
      "side": 1,
      "message": "As an alternative that accomplishes the same goal, could we please look at implementing http-connect support?\n\nhttps://datatracker.ietf.org/doc/html/rfc9298\n\nThe advantages are:\n1. In theory no changes to ipmitool are required.  (ipmitool would\u0027ve needed to add an http + websocket dependency for this design).  We could just proxy UDP RMCP using a side application, which would mean that ANY ipmi enabled tool could now work.  If ipmitool wanted to implement http-connect directly, it would reduce the required dependencies a bit (we\u0027d only need HTTP, not websocket implementations).\n2. All network protocols are governed by specifications.  This gives maintainers a way to make sure things are correct without needing to nit pick every item or be an expert on network protocols.\n3. it clearly delineates responsibilities between applications.  bmcweb is responsible for authenticating, and tunneling UDP packets.  IPMI is responsible for IPMI specification correctness.  In the model proposed here, bmcweb is responsible for assembling correct ipmi commands, which is something the webserver shouldn\u0027t be responsible for.\n4. It\u0027s more likely to be generically useful in other situation.  Http-connect would let us proxy.... anything, not just IPMI.\n5. Far more HTTP and UDP experts have reviewed and understand the http-connect protocol than we will get here.  That likely reduces the chance for protocol level CVE events.\n\nThe http connect protocol on top of HTTP seems pretty trivial.  Open the http request, authenticate using headers, then it\u0027s just 16 bit length and udp.  An initial implementation could write only to ipmi if we wanted to.",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffc7169e_cd3ce479",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T06:53:43Z",
      "side": 1,
      "message": "The idea of this doc is not only to use `https` as the network layer, but more importantly to replace the RMCP authentication.\n\nWe want to get rid of lanplus so that BMC will not be required to store password at all.",
      "parentUuid": "50fdd6cc_b44d3e21",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6e1e1fb_8aa03cc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "\u003e Passthrough apis, that pass through one protocol to another. These are difficult to authenticate/authorize/test well, and add dependencies into the chain.\n\nThis design is expected to introduce a new \"pass through\" API just like net-ipmid. The handler is ipmid and it is ipmid who is responsible to handle the raw data correctly.\n\n\u003e APIs not backed by a standard or specification (OpenBMCs history of adoption of these is spotty).\n\u003e Protocols that are functionally closed to change (ipmi).\n\nThis is proposed as OpenBMC extension to ipmi.\n\n\u003e New features that already have an implementation. IPMI works just fine over the http-dbus-rest protocol that has existed for a long time. SOL already works fine over a websocket without needing RMCP overhead.\n\nThere is no `ipmitool` support, this design is to extend the capability for ipmitool to use the \"modern\" protocol with minimal impact and still keep the performance as lanplus.\nIndeed it coulb be implemented by \"not changing OpenBMC\" at all and just change `ipmitool` to use the REST API, but:\n1. REST API is going to be deprecated (and it exposes the whole DBus)\n2. It has worse performance compared to lanplus.\n\nSo this design introduces the `/ipmi` websocket with binary data protocol. It aims to provide a minimal change but competitive performance.",
      "parentUuid": "8f031702_10356360",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ead73096_eb1cbbf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:05:09Z",
      "side": 1,
      "message": "\u003e We want to get rid of lanplus so that BMC will not be required to store password at all.\n\nThat\u0027s fine, the above can still accomplish that goal.  IPMI supports network modes where the password/user isn\u0027t used at all.  Would still like to see your thoughts on the above.",
      "parentUuid": "ffc7169e_cd3ce479",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0dee94e_db485f58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "net-ipmid isn\u0027t a passthrough API, net-ipmid only implements the protocol\n\n\u003e This is proposed as OpenBMC extension to ipmi.\n\nIPMI as a specification doesn\u0027t have a provision for protocol extensions, so I\u0027m not really sure what this means.  This would be a completely new protocol, that\u0027s essentially ipmi remoted over a websocket.\n\n\u003e REST API is going to be deprecated \n\nI\u0027m not really sure what this means, and it\u0027s just that nobody uses that protocol because it\u0027s a passthrough API.\n\n\u003e It has worse performance compared to lanplus.\n\nCitation and example needed.  When you provide results, please make sure you\u0027ve enabled HTTP2.",
      "parentUuid": "b6e1e1fb_8aa03cc2",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d7bbf8d_c6e1eb15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "Added results of http2 enabled. It\u0027s improved a bit from 8.2 to 6.8 seconds.\n\nI am not sure how to provide the citation, it\u0027s manually built bmcweb with HTTP2 enabled, and tested with the same ipmi command.",
      "parentUuid": "d0dee94e_db485f58",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3035f074_4dc9ee73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "For the `http-connect` way, I see several questions about the \"advantages\":\n\n\u003e In theory no changes to ipmitool are required\n\nThe goal is to \"bypass\" lanplus, I do not see the appropriate \"interface\" in existing ipmitool that could be used to connect to the http-udp tunnel.\n\nDo you propose which existing interface could be used here?\n\n\u003e All network protocols are governed by specifications.\n\nThis is the same as the proposal of this patch.\n\n\u003e bmcweb is responsible for authenticating, and tunneling UDP packets. IPMI is responsible for IPMI specification correctness. In the model proposed here, bmcweb is responsible for assembling correct ipmi commands, which is something the webserver shouldn\u0027t be responsible for.\n\nAs mentioned above, I do not see which existing interface could be used.\nBtw, in my proposal, bmcweb does \"minimal\" assembling of ipmi commands. It\u0027s basically a bridge between websocket\u0027s binary data and D-Bus data.\n\nIn all, I think HTTP-connect for udp tunnle is an interesting idea, but does not resolve the lanplus/RMCP issue that this proposal is trying to resolve: get rid of lanplus and RMCP.",
      "parentUuid": "ead73096_eb1cbbf6",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b33251cb_c890f67d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-02T16:26:25Z",
      "side": 1,
      "message": "\u003e For the `http-connect` way, I see several questions about the \"advantages\":\n\u003e \n\u003e \u003e In theory no changes to ipmitool are required\n\u003e \n\u003e The goal is to \"bypass\" lanplus, I do not see the appropriate \"interface\" in existing ipmitool that could be used to connect to the http-udp tunnel.\n\nI\u0027m confused, you would need to write a new interface regardless.\n\n\u003e \n\u003e Do you propose which existing interface could be used here?\n\u003e \n\u003e \u003e All network protocols are governed by specifications.\n\u003e \n\u003e This is the same as the proposal of this patch.\n\nPlease give me the pointer to the specification that specifies IPMI over HTTP.  Maybe I\u0027m not aware of it.\n\n\u003e \n\u003e \u003e bmcweb is responsible for authenticating, and tunneling UDP packets. IPMI is responsible for IPMI specification correctness. In the model proposed here, bmcweb is responsible for assembling correct ipmi commands, which is something the webserver shouldn\u0027t be responsible for.\n\u003e \n\u003e As mentioned above, I do not see which existing interface could be used.\n\nI\u0027ve given pointers to the relevant specifications.  Which part didn\u0027t make sense?\n\nSee 1.7.19 of the ipmi spec for a packet format that could be used.\n\n\u003e Btw, in my proposal, bmcweb does \"minimal\" assembling of ipmi commands. It\u0027s basically a bridge between websocket\u0027s binary data and D-Bus data.\n\u003e \n\u003e In all, I think HTTP-connect for udp tunnle is an interesting idea, but does not resolve the lanplus/RMCP issue that this proposal is trying to resolve: get rid of lanplus and RMCP.\n\nI\u0027m reading this as \"Get rid of something that has a specification, and replace it with something that doesn\u0027t have a specification\"",
      "parentUuid": "3035f074_4dc9ee73",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64c32ef7_3730f0a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-25T19:44:53Z",
      "side": 1,
      "message": "\u003e I am not sure how to provide the citation, \n\nA script that shows what you tested, as well as results that are more detailed than a single time.",
      "parentUuid": "7d7bbf8d_c6e1eb15",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a8decd5_3e144b89",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "This is what\u0027s called a \"passthrough\" api, and is generally not advised at a platform level, as it removes all abstraction.  If this is your goal, we already have the DBus rest API that can already do IPMI transactions using the dbus method on ipmid.  Is there a reason we\u0027re inventing a new interface here?\n\nOn another track, is there a reason we jump directly to HTTP, and not use other tools intended to solve networking level redirection?  (VPNs like wireguard, etc), alternatively tools like SSH port redirection that can solve the same purpose?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 80
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc45af3a_2c07dedc",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "\u003e we already have the DBus rest API that can already do IPMI transactions using the dbus method on ipmid\n\nThis is not directly support by ipmitool, and as mentioned in `Alternatives`, the performance is poor enough and we propse this design.\n\nIndeed it\u0027s a \"passthrough\" from bmcweb to ipmid, but it\u0027s similar to net-ipmid. In this design we just add a new \"https interface\".\n\n\u003e  is there a reason we jump directly to HTTP, and not use other tools intended to solve networking level redirection? (VPNs like wireguard, etc), alternatively tools like SSH port redirection that can solve the same purpose?\n\nThis is network-related and off-topic to this design.\nThe proposed interface could be a replacement to lanplus, and thus resolve the issue mentioned below (e.g. not more password stored in BMC)",
      "parentUuid": "6a8decd5_3e144b89",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 80
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9ac73a2_c70e361b",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-16T18:14:09Z",
      "side": 1,
      "message": "What you proposed isn\u0027t supported by ipmitool either, so I\u0027m not sure what the difference is?\n\n\u003e the performance is poor\n\nCan you quantify that performance somewhere?  When you say it\u0027s poor, can you verify that http2/keepalive were enabled in your tests?  Those will have a significant impact on things like this.",
      "parentUuid": "bc45af3a_2c07dedc",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 80
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27db4834_f77c6eac",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T06:53:43Z",
      "side": 1,
      "message": "We will test the \"keep-alive\" and feedback",
      "parentUuid": "c9ac73a2_c70e361b",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 80
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dabf876c_ec00101b",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Tested and the implemetation was already using keep-alive, will add the comparation of lanplus/https-json/https-websocket\u0027s performance data.",
      "parentUuid": "27db4834_f77c6eac",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 80
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baf22dcc_ea02fb34",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "http-2 was enabled as well?  I don\u0027t see mention of it in your last message.",
      "parentUuid": "dabf876c_ec00101b",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 80
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fb2dd4d_f2adb8bb",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "Done. Added result with http2 enabled",
      "parentUuid": "baf22dcc_ea02fb34",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 80
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74af2328_86685923",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "I\u0027d like to see a deeper API structure used here so that we\u0027re not constantly adding top level URI actions (which have a potential to conflict).",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 10
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7afe2898_79cf6f05",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "Will elaborate.",
      "parentUuid": "74af2328_86685923",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 10
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6390d3cf_1fc4696c",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7afe2898_79cf6f05",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 10
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78dc7ad1_830694ee",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "still appears to be /ipmi in your latest.  Forgot to update?",
      "parentUuid": "6390d3cf_1fc4696c",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 10
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3a3160f_28b6a69f",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "It\u0027s as simple as an `/ipmi` URI for websocket.\nI have improved the binary data format by not using C-like structure and use a table instead.",
      "parentUuid": "78dc7ad1_830694ee",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 10
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a41775a_c81cb6ac",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-02T16:30:56Z",
      "side": 1,
      "message": "Please update so this doesn\u0027t take a top level uri.\n\n/openbmc/v1/ipmi",
      "parentUuid": "f3a3160f_28b6a69f",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 10
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eb2394d_ed6e379a",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "This is a C structure.  HTTP doesn\u0027t use C.  Maybe reorder in bytes on the wire format?",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 6
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e91ce3ca_da826c9f",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "Will elaborate.",
      "parentUuid": "8eb2394d_ed6e379a",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 6
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcdeff41_082f3150",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "It\u0027s binary data on the WebSocket, so it is defined like this as intended.",
      "parentUuid": "e91ce3ca_da826c9f",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 6
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3d25167_f6f51f5e",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "Websockets aren\u0027t defined as c structures.  Please look at other protocol docs to see examples of how to represent bytes on the wire.",
      "parentUuid": "dcdeff41_082f3150",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 6
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c40f0cc3_d07f1a58",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3d25167_f6f51f5e",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 6
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba3d9ed7_1e5945fe",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "Remove, this group doesn\u0027t support ipmitool, so you\u0027ll need to take this up with ipmitool maintainers.  Feel free to leave a mention that you intend to upstream an IPMI implementation.",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 126,
        "endChar": 0
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f47ed50_5a0e7ba9",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "This design involves both bmcweb and ipmitool, I would like to keep it here so that we know how the ipmitool will interact with bmcweb.",
      "parentUuid": "ba3d9ed7_1e5945fe",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 126,
        "endChar": 0
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5a424fa_4c63c9a3",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-16T18:14:09Z",
      "side": 1,
      "message": "Feel free to mention it, but OpenBMC can\u0027t \"approve\" ipmitool additions or documentation.  Please feel free to point to the document in the ipmitool repository that you\u0027ve started as reference, but this doc should be about OpenBMC exposing a new protocol (and specifically what that protocol is).  It shouldn\u0027t be about an application OpenBMC has no authority or documentation over.",
      "parentUuid": "4f47ed50_5a0e7ba9",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 126,
        "endChar": 0
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c254aff_735048c3",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5a424fa_4c63c9a3",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 126,
        "endChar": 0
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0956f3f6_c48aa60e",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "What value does this add on top of the already existing HTTP SOL layer?\n\nFWIW, Redfish just standardized that, so it\u0027s even in the RF standard now.",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 148,
        "endChar": 66
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce344c0f_3057cd64",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "It does re-use the existing HTTPS SOL. It\u0027s to describe that ipmitool is going to use this URI to open the SOL.",
      "parentUuid": "0956f3f6_c48aa60e",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 148,
        "endChar": 66
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3b1a5af_5220e1bf",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-16T18:14:09Z",
      "side": 1,
      "message": "Right, I\u0027m not following what the changes are here.  We have SOL, it\u0027s supported.  Is the change that ipmitool will implement redfish-standardized websockets?",
      "parentUuid": "ce344c0f_3057cd64",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 148,
        "endChar": 66
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e902c14f_cdb527f0",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T06:53:43Z",
      "side": 1,
      "message": "Yup, it\u0027s the changes to ipmitool to connect to bmcweb\u0027s SOL URI.\nWill elaborate to make it clear.",
      "parentUuid": "d3b1a5af_5220e1bf",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 148,
        "endChar": 66
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecb80c1c_7fea6efe",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e902c14f_cdb527f0",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 148,
        "endChar": 66
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "541ccff5_367f9c7f",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "Can you elaborate on how that would work given redfish uses a privilege registry?",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 57
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d1f217d_89d9fb48",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "Will elaborate",
      "parentUuid": "541ccff5_367f9c7f",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 57
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13e23409_e0de0fab",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d1f217d_89d9fb48",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 57
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7174c302_c0e6bd04",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "I see no mention of privilege registry.  If you could reply with a short sentence of what you changed before you close these in the future, it would save me time as a reviewer.",
      "parentUuid": "13e23409_e0de0fab",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 57
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39d0fcc8_13fa87f7",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "There is no change to privilege registry, bmcweb just convert the user role from Redfish into ipmi\u0027s privilege, as described in the doc.\n\nIf you think something is unclear, please suggest a rephrase. Thanks.",
      "parentUuid": "7174c302_c0e6bd04",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 57
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d57079e_69edb942",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-02T16:30:56Z",
      "side": 1,
      "message": "\u003e There is no change to privilege registry, bmcweb just convert the user role from Redfish into ipmi\u0027s privilege, as described in the doc.\n\u003e \n\u003e If you think something is unclear, please suggest a rephrase. Thanks.\n\nYou\u0027re mapping two protocols together.  If you plan on using the Redfish Session specification, you need to make sure that the rules are obeyed.  Simply passing control to another application doesn\u0027t implement Redfihs sessions appropriately.",
      "parentUuid": "39d0fcc8_13fa87f7",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 57
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01eb9369_ea901fb3",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "Any background or testing for this overhead?  In other avenues we\u0027ve never seen json serialization/deserialization show up in a profile.  We already have dbus access to ipmi, so a quick test should be pretty easy to put together.",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 64
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7915991d_4174f067",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "Yes, we did test the json based implementation, it\u0027s about 3x slower than the websocket. Will add this information.",
      "parentUuid": "01eb9369_ea901fb3",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 64
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "723f842c_ae893938",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-16T18:14:09Z",
      "side": 1,
      "message": "Please do.  I\u0027m quite surprised there\u0027s a difference in json vs binary for this case, and I suspect your tests might not have implemented http keepalive or http2.  Please verify both are enabled and used.",
      "parentUuid": "7915991d_4174f067",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 64
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "839abb7b_f8a534fe",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T06:53:43Z",
      "side": 1,
      "message": "It\u0027s not json vs binary, but HTTP request/response model vs websocket.\nAs mentioned above, we will test the json imlementation with keep-alive and compare the performance.",
      "parentUuid": "723f842c_ae893938",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 64
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "338501e7_f8255647",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Added the comparison table.",
      "parentUuid": "839abb7b_f8a534fe",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 64
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00da4ae2_3c29f0ca",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "In the websocket model you\u0027ve implemented, it\u0027s still request/response, you\u0027ve just encapsulated it in websockets.",
      "parentUuid": "338501e7_f8255647",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 64
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55eaef98_8fc515b5",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "Yes, but it\u0027s binary data in the WebSocket without HTTP\u0027s overhead.",
      "parentUuid": "00da4ae2_3c29f0ca",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 64
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38da560e_89a584a5",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-02T16:30:56Z",
      "side": 1,
      "message": "Right... it\u0027s still request/response, so you don\u0027t save anything fundamentally there.",
      "parentUuid": "55eaef98_8fc515b5",
      "range": {
        "startLine": 240,
        "startChar": 30,
        "endLine": 240,
        "endChar": 64
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "175b4677_5f29dd0a",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "Remove.  OpenBMC Doesn\u0027t own ipmitool",
      "range": {
        "startLine": 251,
        "startChar": 49,
        "endLine": 252,
        "endChar": 63
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc142a8f_e0ab6566",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Unless it\u0027s very inappropriate, I still intend to mention ipmitool here to make it a whole solution.",
      "parentUuid": "175b4677_5f29dd0a",
      "range": {
        "startLine": 251,
        "startChar": 49,
        "endLine": 252,
        "endChar": 63
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8215a3b_49c2d560",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "Please mention ipmitool in its own document, using IPMItools process (github bug maybe) and provide a link here.  OpenBMC can\u0027t \"approve\" anything in ipmi.",
      "parentUuid": "fc142a8f_e0ab6566",
      "range": {
        "startLine": 251,
        "startChar": 49,
        "endLine": 252,
        "endChar": 63
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5860771f_85991ec4",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "a8215a3b_49c2d560",
      "range": {
        "startLine": 251,
        "startChar": 49,
        "endLine": 252,
        "endChar": 63
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07e2ae3f_434a9190",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "Please add the IPMI maintainers to the review, as the design template asks.",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93f9f42b_cc36aa41",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-15T15:47:11Z",
      "side": 1,
      "message": "Why isn\u0027t this implemented as another ipmi-bridge?  Or maybe that\u0027s what you\u0027re proposing?",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 73
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32bcd5be_6e073f9c",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "The goal is to use the existing https session, and in OpenBMC it\u0027s bmcweb, that already handles the user login/privilege management. If we move to another \"ipmi-https-bridge\", it will have to implement the whole https/login/role/privilege stack, that is already done in bmcweb.\nSo reusing bmcweb to serve the `/ipmi` is proposed.\n\nBut indeed it\u0027s yet another bridge.",
      "parentUuid": "93f9f42b_cc36aa41",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 73
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98b130b3_2e3d6e46",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07e2ae3f_434a9190",
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5314cd0a_61f87496",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-16T18:14:09Z",
      "side": 1,
      "message": "\u003e whole https/login/role/privilege stack.\n\nThis is some of the confusion in my mind: You\u0027re reusing essentially all of Redfish at a protocol layer, with the addition of one new TCP implementation.  Why are we not just using Redfish?",
      "parentUuid": "32bcd5be_6e073f9c",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 73
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b539c64_5aa01ac7",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T06:53:43Z",
      "side": 1,
      "message": "It\u0027s reusing bmcweb to handle the whole user authentication and authorization.\nUsing Redfish means it\u0027s request/response model, which is 3x slower than websocket.",
      "parentUuid": "5314cd0a_61f87496",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 73
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b39b5746_1d99e15e",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "This is explained in the `Authentication` part.",
      "parentUuid": "4b539c64_5aa01ac7",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 73
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbc99c60_a3cf42f8",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "\u003e Using Redfish means it\u0027s request/response model, which is 3x slower than websocket.\n\nWould love to see those results.  Considering the websocket model here is still essentially request/response (given that dbus is request/response), I\u0027m really surprised there\u0027s a difference.",
      "parentUuid": "b39b5746_1d99e15e",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 73
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6492d6b_eda69500",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "Yes, but the binary data transferred on the WebSocke **indeed** gets better performance.\nhttp2\u0027s result is added as well.",
      "parentUuid": "bbc99c60_a3cf42f8",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 254,
        "endChar": 73
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb7df28f_47cd57cb",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "Remove.",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 261,
        "endChar": 7
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5854901b_ea28f216",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Unless it\u0027s very inappropriate, I still intend to mention ipmitool here to make it a whole solution.",
      "parentUuid": "cb7df28f_47cd57cb",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 261,
        "endChar": 7
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a50ea3a6_cd89b3bc",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-20T14:20:00Z",
      "side": 1,
      "message": "openbmc doesn\u0027t control ipmitool, so anything \"agreed\" to in this document doesn\u0027t have any impact.",
      "parentUuid": "5854901b_ea28f216",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 261,
        "endChar": 7
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1227341_1daad6a5",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-28T07:49:15Z",
      "side": 1,
      "message": "Right, but this still provides enough information and makes it easier for readers to get all the changes.",
      "parentUuid": "a50ea3a6_cd89b3bc",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 261,
        "endChar": 7
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a31eb73e_d56fa1ea",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-02T16:30:56Z",
      "side": 1,
      "message": "Then move it to the background section.",
      "parentUuid": "e1227341_1daad6a5",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 261,
        "endChar": 7
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35286d46_0f4f458c",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "Which system do you intend to test on?",
      "range": {
        "startLine": 266,
        "startChar": 7,
        "endLine": 266,
        "endChar": 13
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abf9d335_bf7e442c",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "It\u0027s tested on g220a, will add this info",
      "parentUuid": "35286d46_0f4f458c",
      "range": {
        "startLine": 266,
        "startChar": 7,
        "endLine": 266,
        "endChar": 13
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51ee2312_83241e9a",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abf9d335_bf7e442c",
      "range": {
        "startLine": 266,
        "startChar": 7,
        "endLine": 266,
        "endChar": 13
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "375616d2_640a6f97",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T15:12:07Z",
      "side": 1,
      "message": "This is a binary API at a socket level.  We need some level of non-golden-path testing (bad bytes, bad requests, etc).",
      "range": {
        "startLine": 267,
        "startChar": 0,
        "endLine": 267,
        "endChar": 32
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d57dc48f_37071d02",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-16T05:57:47Z",
      "side": 1,
      "message": "Will add this info.",
      "parentUuid": "375616d2_640a6f97",
      "range": {
        "startLine": 267,
        "startChar": 0,
        "endLine": 267,
        "endChar": 32
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c69be2a_86d1cece",
        "filename": "designs/ipmi_https_interface.md",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2025-05-20T09:23:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d57dc48f_37071d02",
      "range": {
        "startLine": 267,
        "startChar": 0,
        "endLine": 267,
        "endChar": 32
      },
      "revId": "8b64eb90f595e52fa3810ed7ec38b1ebcb920bef",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}