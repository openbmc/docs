{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4b50e0bb_1b08761b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Overall, I don\u0027t really see a design here.  I see a lot of thoughts that neglect that this component needs to interact with:\n1. DMTF - As the publish new schemas and develop new features.  Some of these are unavailable for 6 months after merge, how is that handled if schemas are static?\n2. Implementations of Redfish that are under development, and might not have complete schemas, as well as implementations of Redfish that are not OpenBMC.\n3. OpenBMC as a whole, which has a lot of the component pieces for this already built and proven, and has OEM schemas that already exist and have history (are those supported?).\n4. Implementations of HTTP/JSON/core libraries that will be extended with new features over time.\n\nThere are lots of unanswered questions surrounding those things in this design, and the wording (maybe unintentional) makes it sound like this effort is just going to rewrite everything because DMTF/Curl/Beast/Nlohmann/bmcweb http_client don\u0027t work, but fails to specify why.  If that\u0027s not the intent, lets get that written down what core components we plan on using.\n\nOverall, I think the right path here is to start implementing the redfish-\u003estruct conversion in a gerrit review (ideally starting with the DMTF one as a base), and lets look at the generated code to see if it\u0027s something that will work.  Ideally please start with an old redfish schema, and show that new redfish schemas can be parsed without re-compiling the library against the new schemas (for at least the properties that existed at the time).  As much as I dislike it, this is a requirement that the Redfish standard places on client implementations.\n\nThe other elephant in the room is that the implementation here needs to be capable of supporting schemas that aren\u0027t published, or are only published on the systems that produce them, and duplicating those schemas to OpenBMC would violate copyrights (ie, Redfish supports more than just OpenBMC).  FWIW, I think this somewhat necessitates moving away from a compile time struct generation, and more toward Redpath, which in DTMF is intended to be the solution to this exact problem, but wasn\u0027t really mentioned in the background.  If Redpath doesn\u0027t work for this use case, ideally some feedback to DMTF is in order.",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c281f13_22f3aee9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-05T18:51:11Z",
      "side": 1,
      "message": "\u003e DMTF - As the publish new schemas and develop new features. Some of these are unavailable for 6 months after merge, how is that handled if schemas are static?\n\nThe client here will depend on the schemas, similar to how bmcweb depends on the schemas.  As new versions are released, the dependency will be updated.\n\nSMCs might be running old versions.  The project will support old versions for a set amount of time and the client will be responsible for being backwards compatible (during that deprecation window).  We need to update this design document to specify the time window for backwards compatibility.\n\nSchemas are always backwards compatible; the only issue with backwards compatibility is when the BMC redfish client requires properties (or methods or whole schemas) that are only available in latest revisions.  This is the part that we will have a documented policy on timeliness.",
      "parentUuid": "4b50e0bb_1b08761b",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "264fc182_7ec8d781",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-05T19:25:30Z",
      "side": 1,
      "message": "bmcweb historically hasn\u0027t used schemas for code generation.  It does use the registries, but those are also checked in so it\u0027s easy to apply WIP DMTF changes to builds.\n\n\u003e We need to update this design document to specify the time window for backwards compatibility.\n\nDefinitely worth documenting what compatibility means here.  For example, Thermal/Power schemas are still \"supported\" by the standard, even if they might not be recommended, so would we deprecate those today?  Doesn\u0027t really need an answer, but at least some idealized goals here would be good to add.\n\n\u003e  the only issue with backwards compatibility is when the BMC redfish client requires properties (or methods or whole schemas) that are only available in latest revisions.\n\nOr if the SMC updates to a newer version than is available to the client, and we don\u0027t design the parser to handle that condition (new versions of existing schemas)",
      "parentUuid": "3c281f13_22f3aee9",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12155b33_8d0ad5cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-05T19:33:28Z",
      "side": 1,
      "message": "\u003e code generation.\n\nI should clarify, recently code was added for generating enums, but there\u0027s no architectural requirement that it be used, fallback to non schema defined structs is still available in code.\n\n\nBTW, if we can make this work, I fully support it, but specs like Redpath exist because there\u0027s a lot of corner cases with typesafe schemas on Redfish that are difficult to handle in a design.",
      "parentUuid": "264fc182_7ec8d781",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "352ecde0_dc0fdedc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-12-06T03:52:28Z",
      "side": 1,
      "message": "Adding code generation for redfish schema is useful only if it stands as a compile time contract between two services. But in this case it seems the only consumer of the generated class is redfish client service. The other end of consumer may not be even writtern in c++. I don\u0027t see any value in creating one more level of tooling side indirection . It just add to the development complexity instead. If some one really want to have type safe classes for json serialisation , it is already supported by nlohmann(https://github.com/nlohmann/json) . All you have to do is just add NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE to your application classes.",
      "parentUuid": "12155b33_8d0ad5cc",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "249da28f_3e1f22bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Let\u0027s take an example without codegen: suppose we get a `Sensor` from redfish request:\n```\n{\n  \"@odata.id\": \"/redfish/v1/Chassis/1/Sensors/sensorX\",\n  \"@odata.type\": \"#Sensor.v1_2_0.Sensor\",\n  \"Id\": \"sensorX\",\n  \"Name\": \"sensorX\",\n  \"Reading\": 12.077,\n  \"SparePartNumber\": \"XXX\",\n  \"ReadingType\": \"Voltage\",\n  \"ReadingUnits\": \"V\",\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n  },\n  \"Thresholds\": {\n    \"LowerCaution\": {\n      \"Reading\": 11.346\n    },\n    \"LowerCritical\": {\n      \"Reading\": 11.224\n    },\n    \"UpperCaution\": {\n      \"Reading\": 13.054\n    },\n    \"UpperCritical\": {\n      \"Reading\": 13.176\n    }\n  }\n  ...\n}\n```\nNow, we want to extract specific value from such response,  there is two way we can do so.\nFirst approach is to direct json access:\n```\njson sensor {jsonResponse};\nif (sensor.is_object()){\n  if (sensor.contains(\"Id\")) {\n    auto id \u003d sensor[\"Id\"].template get\u003cstring\u003e();\n    // do something with id \n  }\n  if (sensor.contains(\"ReadingType\")) {\n    auto readingType \u003d sensor[\"ReadingType\"].template get\u003cstring\u003e();\n    // either direct compare the string to map it to a enum class   \n  }\n  if (sensor.contains(\"@odata.type\")) {\n    auto odataType \u003d sensor[\"@odata.type\"].template get\u003cstring\u003e();\n    auto version \u003d getVersionFromOdataType(odataType);\n    if (version \u003e 1.9 \u0026\u0026 sensor.contains(\"SparePartNumber\")) {\n      // do something with spare part number\n    }\n  }\n  if (sensor.contains(\"Thresholds\") {\n    auto thresholds \u003d sensor[\"Thresholds];\n    if (thresholds.is_object() \u0026\u0026 thresholds.contains(\"LowerCaution\")) {\n      // do something with lower caution\n    }\n  }\n}\n```\nThe other way is to write a custom class that can be serialized and deserialized from json:\n```\nClass Sensor;\n...\njson sensorJson \u003d json::parse(jsonResponse);\nSensor sensor  \u003d sensorJson.template get\u003cSensor\u003e();\nif (auto id \u003d sensor.id(); id.hasValue()){\n  // do something with id\n}\nif (auto readingType \u003d sensor.readingType(); readingType.hasValue()){\n  // readingType already a enum class, do something with it\n}\nif (auto sparePartNumber \u003d sensor.sparePartNumber(); sensor.version() \u003e\u003d sensor.sparePartNumberVersionAdded() \u0026\u0026 sparePartNumber.hasValue()) {\n  // do something with spare part number\n}\nif (auto thresholds \u003d sensor.thresholds(); thresholds.has_value()) {\n  if (auto lowerCaution \u003d thresholds.lowerCaution(); lowerCaution.hasValue()) {\n    // do something with lower caution\n  }\n}\n```\n\nCompare with these two approach, I believe the latter one should be preferred as it provides better abstraction to prevent duplicated and tedious code (like all the OOP benefit).\n\nNow, in terms of writing the `Sensor` class, a human being would basically look at the redfish schema and translate its properties one-by-one to cpp class. This work is tedious, time consuming because there are roughly 2000+ unique class/typedef/enum/struct needed to written and in average 7 properties for each of those based on the latest redfish schema. Therefore, it would be much more efficient to write a lightweight codegen library that can take redfish schemas and turns into such data classes with static metadata (like which version is the property added/deprecated) filled in and correct dependency graph. In addition, whenever there is new version of redfish schema being published, we can just use the tool to target new set of schemas to generate class rather than having human being to figure out what change and change accordingly.",
      "parentUuid": "352ecde0_dc0fdedc",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62995aff_b05e314b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-12-07T04:18:55Z",
      "side": 1,
      "message": "This approach does come with certain limitations, as it’s not as straightforward as it might initially appear. The focus shifts from writing code to configuring metadata for code generation, which can result in class structures with specific naming conventions that may be challenging for users to search and navigate. Furthermore, code editors might offer limited support in this case, as the code is generated in the build directory. (I’ve personally encountered this challenge while working with DBus code.)\n\nIn most cases, we are only interested in a small subset of the data within a schema, rather than the entire dataset. However, the code generation approach retrieves all the data, which can lead to memory and performance inefficiencies. Ideally, we should only incur costs for the data we actually use.\n\n\nThere is an alternative approach that hasn’t been mentioned.\n```\n    JsonSerializer val(jsonData);\n    std::optional\u003cdouble\u003e CauReading;\n    std::optional\u003cdouble\u003e CritReading;\n    val.deserialize(\"Thresholds/LowerCaution/Reading\", CauReading,\n                    \"Thresholds/LowerCritical/Reading\", CritReading);\n    if (CauReading)\n    {\n        //your stuff\n    }\n    if (CritReading)\n    {\n        //your stuff\n    }\n```",
      "parentUuid": "249da28f_3e1f22bc",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f076fb3f_3b320484",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-09T17:21:33Z",
      "side": 1,
      "message": "\u003e First approach is to direct json access:\n\nThe example given here:\n1. Doesn\u0027t follow best practices (we\u0027d generally not use contains and operator[] in proximity)  we\u0027d use find), and even that isn\u0027t best practice.  In practice, the helper functions in bmcweb we have now use a loop because it\u0027s faster/generates less code.\n2. Doesn\u0027t handle errors.  This is an important part of what we\u0027re talking about: How does this function if the schemas don\u0027t match in expected ways?  I see a couple exceptions thrown, but obviously a redfish client can\u0027t just crash when it sees an unexpected schema, so examples of error handling are important here.\n3. As Abhilash points out, can already be done with nlohmann::json directly.\n4. Doesn\u0027t implement Redfish schemas correctly.  Each property can be represented in Redfish as null, or return an expected error (something like retry-after) code from the backend.  Those don\u0027t seem to be represented in the backend.  Redfish clients have to handle the following states:\n5. Has no checking of @odata.id\n\n1. Value filled in with the appropriate type\n2. Value is null\n3. Value is filled in with the wrong type (this would be a bad implementation of redfish, but happens in practice).\n4. Value is not present.\n5. Value parent key is not present.\n6. Value is correct per redfish, but not representable in the struct (uint \u003e 64 bit for example)\n\nEach of these (with the possible exception of 5, because it could be combined with 4) needs to have some representation in the type safe struct.\n\nThese are the kinds of things that need called out in this design requirements.\n\n\u003e There is an alternative approach\n\nTo be clear, this is essentially a copy of what bmcweb does for reading redfish parameters.  Please check out readJson for how it\u0027s currently solved.  If it needs to be extended for this use case, it could be, but doesn\u0027t necessarily need to be.  To be clear, readJson as it exists today is imperfect for this use case, but does handle errors correctly.",
      "parentUuid": "62995aff_b05e314b",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56bd462b_11446eee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-09T17:26:39Z",
      "side": 1,
      "message": "Apologies..... The markdown combined my two numbered lists and renumbered them, making that really confusing.  Starting at #5 was supposed to be a new list.  I would edit it if I could.",
      "parentUuid": "f076fb3f_3b320484",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2d12ebf_72014950",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-10T08:56:08Z",
      "side": 1,
      "message": "It seems to me the concerning points can be summarized as the following points:\n1. naming convention: we will keep the generated code reflects the redfish schema as much as possible and people can actually examine the generated code directly to find the needed property/metadata etc.\n2. code editors support: seems to be a minor concern but there is definitely a doable way to improve it in the future if necessary\n3. memory and performance problem: I don\u0027t think there will be much overhead for memory and performance\n4. error handling: as I mentioned in other comment and also added to the design doc, the generated data class will be able to capture expected error into \"error\" field and unexpected error/key/value into \"leftover\" field so that the caller can decide what to do with it\n\nI also want to emphasize that the generated code primarily consists of data classes designed to encapsulate Redfish JSON responses. These classes expose both valid and invalid data, as well as any associated errors. The responsibility for handling this data and determining the appropriate logic lies with the caller. As such, this library is intended to be lightweight and focused, rather than a comprehensive solution for the broader spectrum of Redfish-related challenges.",
      "parentUuid": "56bd462b_11446eee",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ae35295_51bdce4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-12-10T11:07:11Z",
      "side": 1,
      "message": "Generated types should be placed within schema-specific namespaces to prevent collisions, even if it makes the code slightly more verbose. Using std::optional or std::expected for wrapping errors and optional data serialization can result in a modern C++ style, though this might be a subjective preference.\n \nC++ Templates can already generate such code, so why create another tool for the same purpose? When comparing the usage on the call side, there may not be any significant advantage to using tool-generated code.\n\nIt’s better to compare the call-side code, including error handling, for both the generated code and a JSON serializer approach like the one used in bmcweb before making a decision.",
      "parentUuid": "d2d12ebf_72014950",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa7a7c06_a97ebc03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "\u003e Generated types should be placed within schema-specific namespaces to prevent collisions, even if it makes the code slightly more verbose. Using std::optional or std::expected for wrapping errors and optional data serialization can result in a modern C++ style, though this might be a subjective preference.\n\nYes, this is exactly what the codegen would likely do.\n\n\u003e C++ Templates can already generate such code\n\nI don\u0027t think C++ template can generate code based on json schema?",
      "parentUuid": "7ae35295_51bdce4d",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9390fc2d_ae9d0b4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-29T22:43:37Z",
      "side": 1,
      "message": "\u003e I also want to emphasize that the generated code primarily consists of data classes designed to encapsulate Redfish JSON responses. These classes expose both valid and invalid data, as well as any associated errors\n\nThis design doc doesn\u0027t say that, and doesn\u0027t give examples;  That\u0027s part of the confusion.\n\nyour examples also don\u0027t handle things like links or identifiers, which would be required for this design to succeed.",
      "parentUuid": "aa7a7c06_a97ebc03",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce9351b1_60763cb7",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1001486
      },
      "writtenOn": "2024-11-27T04:36:22Z",
      "side": 1,
      "message": "do you have any WIP code which we can take a look and test on our platform ? we are interested in the similar design and would like to contribute.",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3436ab7_89e73345",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "No WIP code is available yet. We will begin implementation and submit code for review once this design proposal has been accepted. If you\u0027re interested in contributing or collaborating, please feel free to reach out to me offline.",
      "parentUuid": "ce9351b1_60763cb7",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62fc743f_3ad4c6d3",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3436ab7_89e73345",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb5526ad_e92dd95f",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Lets remove this sentence.  In your next line you list that bmcweb can be a redfish client, so saying that it lacks the ability isn\u0027t really true, this is just a different design.",
      "range": {
        "startLine": 12,
        "startChar": 44,
        "endLine": 13,
        "endChar": 41
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d557e05_4f30abb6",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "eb5526ad_e92dd95f",
      "range": {
        "startLine": 12,
        "startChar": 44,
        "endLine": 13,
        "endChar": 41
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f202f8c8_2d451a2d",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "This is arguably just an aggregation bug that\u0027s been fixed in a couple different forks.  As written it implies that this is just not possible in the current design, which isn\u0027t true.",
      "range": {
        "startLine": 18,
        "startChar": 69,
        "endLine": 20,
        "endChar": 76
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed6bb76e_23f82f1a",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "I\u0027m uncertain whether the Redfish aggregation provided by BMCweb can accommodate event logs from SMC in subscription mode. However, since this is not the primary use case that this design is trying to solve, I will remove this line.",
      "parentUuid": "f202f8c8_2d451a2d",
      "range": {
        "startLine": 18,
        "startChar": 69,
        "endLine": 20,
        "endChar": 76
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "207e6596_aa00176a",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-10T08:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed6bb76e_23f82f1a",
      "range": {
        "startLine": 18,
        "startChar": 69,
        "endLine": 20,
        "endChar": 76
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9308b643_3d2d3cf3",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Could we also add the last couple of times this exact design has been proposed?  The Google one in dbus-sensors is the one I\u0027d start with.  Also please help to review that client.\n\nAlso... some amount of background here is required on how schemas are produced, oem schemas, Odata vs Redfish schemas, etc.  Having a background section that\u0027s 2 links isn\u0027t really sufficient for as large of a standard as redfish.",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c563b2a_ac96e146",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-05T19:02:22Z",
      "side": 1,
      "message": "There has been no work on this in a 1.5 years and the design doc has always been marked WIP.  How is this relevant?  We can use this as a potential reference point, but it doesn\u0027t even satisfy all the goals that are listed in this document.\n\nWe can add a reference to that design.",
      "parentUuid": "9308b643_3d2d3cf3",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "886e7123_0c6a9569",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-05T19:25:30Z",
      "side": 1,
      "message": "\u003e There has been no work on this in a 1.5 years and the design doc has always been marked WIP.  How is this relevant?\n\nBecause it\u0027s the exact same thing, and the folks that pushed it might have some community interest in this design/the result?  Also documenting how this is different/similar would be good.\n\n\u003e  We can use this as a potential reference point, but it doesn\u0027t even satisfy all the goals that are listed in this document.\n\nThat sentence in more detail would be an excellent thing to add.  Which goals?\n\n\u003e \n\u003e We can add a reference to that design.\n\nThank you.",
      "parentUuid": "3c563b2a_ac96e146",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5907ec87_16d6782a",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-29T22:43:37Z",
      "side": 1,
      "message": "Still seeing this as open?",
      "parentUuid": "886e7123_0c6a9569",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bf201fe_4a4bd11d",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001486
      },
      "writtenOn": "2024-11-27T04:36:22Z",
      "side": 1,
      "message": "how does the daemon handle discovery of new objects created by the SatMC ? example - if the SatMC is creating new log entries at run time then would the daemon periodically poll for for entries and populate them over dbus ?",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac3d52fe_f2e53173",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Yes, as mentioned in the later design, the daemon will periodically poll the SMC to either get an up-to-date value of existing entries and update the corresponding properties on dbus (likely in sensor monitoring use case), or get new entries and populate them over dbus (likely in event log collection use case).",
      "parentUuid": "0bf201fe_4a4bd11d",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2137f729_1c667665",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac3d52fe_f2e53173",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d6f0ab1_bac2baea",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Can we add requirements around implementing the redfish protocol to the specification, rather than whatever flavor the device you\u0027re working on happens to implement?  If we\u0027re not implementing a Redfish client to the standard, and are only operating on the bmcweb \"flavor\" there\u0027s a lot of far simpler designs here (see dbus-rest).",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50f7f34d_3d0941f6",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "The \"flavor\" really depends on the Redfish implementation of the SMC, not that the client can decide, so the design should make the daemon as lightweight and flexible as possible, and move \"flavor\" to config as much as possible so that different machine can just have different config and call it good. Take sensor monitoring for example, the daemon will need to get Redfish [Sensor](https://www.dmtf.org/sites/default/files/standards/documents/DSP0268_2024.3.html#sensor-1101) from the redfish response, but which exact redfish path to get it and how exactly it is supposed to map to a dbus sensor would live in the config if possible. (some common mapping may still live within the Cpp code).",
      "parentUuid": "5d6f0ab1_bac2baea",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56f01008_d08ca70c",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50f7f34d_3d0941f6",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa9afc13_12838751",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1001486
      },
      "writtenOn": "2024-11-27T04:36:22Z",
      "side": 1,
      "message": "does the config file allows picking the features. Example - I would like the daemon to do event log collection but not to do the sensor monitoring (the platform could have a different way to achieve this performance reasons.)",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "427cb2cd_592e625b",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Yes, that is the plan. For example, if we want the daemon to do event log collection, an \"eventLogCollection\" config would need to be created. If later we want the daemon to do sensor monitoring, a \"sensorMonitoring\" config should be added. Also, if we want to do event log collection towards a different SMC, another \"eventLogCollection\" config needs to be added with different target SMC.",
      "parentUuid": "aa9afc13_12838751",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a556dbf_dc23d1ca",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "427cb2cd_592e625b",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1965bf9_479a7a08",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Can we call this \"hostname\" please?  URLs are governed by the redfish standard, so a config file shouldn\u0027t have URLs in it.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 33
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3523872d_a676eece",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "This is not hostname but the exact redfish URLs. For example, if we need sensorX from the SMC and the url to get it is `http://201.65.75.135/redfish/v1/Chassis/10/Sensors/55` then the config should contains something like ` {\"sensorX\": \"Chassis/10/Sensors/55\"}`, and the daemon would do the polling on this exact url to retrieve the sensor data.",
      "parentUuid": "f1965bf9_479a7a08",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 33
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eaf8843b_a45a864e",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3523872d_a676eece",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 33
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf7057ef_b573f41d",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Is this daemon intended to be entity-manager enabled?  If so, this configuration information already exists and shouldn\u0027t be duplicated.\n\nNVM, I see the documentation below.  We can discuss there.",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4cd593a_65a9d789",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf7057ef_b573f41d",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "420d24a5_b0133b9d",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Can we just write this as \"Client should produce dbus interfaces that are indistinguishable from normal resources\"",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "182b360b_c06b6e41",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "420d24a5_b0133b9d",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 48,
        "endChar": 25
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d176564_c78a851c",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Any reason we wouldn\u0027t do event service?  Logging and sensor metrics are already covered, and wouldn\u0027t require polling.",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 61,
        "endChar": 36
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6894ce6a_a32c8606",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Some vendor SMC may not have event service available but polling would always feasible, thus we start with supporting polling and can add event/sensor subscription in the future if necessary.",
      "parentUuid": "1d176564_c78a851c",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 61,
        "endChar": 36
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a196e31_81986aca",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6894ce6a_a32c8606",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 61,
        "endChar": 36
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82e97e4e_98c17787",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "How is this going to work with the phosphor-logging design?  This daemon should be pushing log entries, not creating a secondary tree?",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 100
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6d242b6_0661a51c",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "The daemon will use the phosphor-logging API to push the log entries, I\u0027ll update the design to make it clear.",
      "parentUuid": "82e97e4e_98c17787",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 100
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6602bb3a_d67ae6c8",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "More detail needed on how this is going to work.  Dbus -\u003eRedfish inventory conversion is the majority of the code in bmcweb redfish.  The reverse probably needs to share mapping in some way?  Or if we want to scope this on a couple specific mappings, we could do that.",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 100
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67ae55cd_abb2db69",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "The design is proposing to make the redfish-\u003edbus mapping configurable if possible so that SMC with different redfish implementation can ends up being the same shape of Dbus that host BMC expect, so it is likely not much common code to be shared with bmcweb.",
      "parentUuid": "6602bb3a_d67ae6c8",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 100
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91685823_9d5d79cf",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67ae55cd_abb2db69",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 100
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9283e367_b035cc8b",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "This would imply that we have a single config file?  That doesn\u0027t seem right.  Config files should be per-system, right?",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 87,
        "endChar": 18
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12bbd2d8_21702a83",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "No, this sentence means that multiple config files reside within on directory. Each system would definitely have different config file, or even files if there are more than one SMCs.",
      "parentUuid": "9283e367_b035cc8b",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 87,
        "endChar": 18
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4eccc0c_947942e5",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Will slight change the wording to make it more explicit.",
      "parentUuid": "12bbd2d8_21702a83",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 87,
        "endChar": 18
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "479fd58d_ee7978b6",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "This exists in dmtf already.  Have we compared to the DMTF one?\n\nhttps://github.com/DMTF/Redfish-Schema-C-Struct-Generator\n\nThere\u0027s lots of design questions on how this is going to work.  For example, how do you handle things that are not specified with in the schema but are in the protocol spec?  How are error codes responses handled?  How are odata identifiers (that don\u0027t show up in schema) handled?  How are features like expand (that I know was called out later in this design doc) handled when the types of a NavigationReference can potentially change the result?\n\nI agree, the idea of type safe classes certainly has a lot of appeal, but the fact that not all Redfish information is available in the schema causes some hard-to-solve corner cases.  If you\u0027re interested in my attempt, here is the last time I tried to create type safe redfish to grpc (similar problem space). https://github.com/edtanous/redfish_to_grpc\n\nThat ultimately failed because of the number of corner cases in Redfish.  I\u0027m very worried that we\u0027re going to get the easy stuff implemented (read a sensor on an existing schema version), then this daemon won\u0027t be able to actually function, or will break with every new redfish revision.  Some code examples that this can even be done correctly would be appreciated so we can look at specific requirements.\n\nFWIW, These problems are why redfish created the Redpath specification: https://www.dmtf.org/sites/default/files/standards/documents/DSP0285_1.0.1.pdf\n\nWe should consider including that in the design, as it solves the problem you\u0027re trying to solve in a much more targeted way without creating dependencies on specific versions of schema",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 105,
        "endChar": 57
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf928556_cd247896",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "https://github.com/DMTF/Redfish-Schema-C-Struct-Generator generates c struct with a bunch of raw pointer and char* within the classes, I don\u0027t think it is a good practice and usage for modern c++ program. It doesn\u0027t seem to provide room for non-standard parsing.\n\nThanks for your pointer to previous work that has been done, I\u0027ll definitely take a look at it. I think it is a good suggestion for adoption Redpath for the daemon when doing the actual redfish query, though it won\u0027t be in the scope of this codegen library as it is supposed to know nothing about what/how/where to query but only know how to parse json response to cpp class vise versa.",
      "parentUuid": "479fd58d_ee7978b6",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 105,
        "endChar": 57
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae1c1743_1aa0e96b",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "I\u0027ll add Redpath as a reference and future work for this project.",
      "parentUuid": "cf928556_cd247896",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 105,
        "endChar": 57
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16bd446e_d88d5f8d",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "How does this work for Redfish resources that are not JSON and have no schema but are still required for interacting?  $metadata might be a good example, LogEntry.AdditionalDataURI might be another good example.",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 108,
        "endChar": 33
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "286defaf_8e750b88",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "If there it is not a JSON or no schema, then no class will be generated. The caller needs to figure out how to interact with such things.",
      "parentUuid": "16bd446e_d88d5f8d",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 108,
        "endChar": 33
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e237a0ed_bf06d571",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "286defaf_8e750b88",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 108,
        "endChar": 33
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46e30a63_4911d1d5",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "As someone that has done this before converting to grpc, this is difficult, please make sure to add to your requirements:\n\n1. Changes in schema versions that the client is not aware of should not break code\n2. Additional properties added should not break parsing of existing structures\n3. OEM schemas (especially incorrect ones) should not break code\n4. Must handle parsing @ identifiers and return codes in the Json response.\n5. Additional enumeration values should not break parsing.\n6. Must be capable of parsing schemas without breaking copyright (ie checking in schema files from a system the project doesn\u0027t own or have license to redistribute).\n\nBasically any one of these of these break most examples of autogenerated parsing code and FWIW is why bmcweb aggregation is designed the way it is.  I\u0027m excited to see what you can produce!\n\nMost of the above could arguably all be covered under \"Must follow the redfish specification\" but I don\u0027t like the subtlety of just saying that.",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f55be3f_969fa7bf",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "For 1,2,3,5, every codegen redfish-schema-corresponding-cpp-class would have a `leftover` member that captured everything that is either not specified or violated the schema, so the parsing will never fail unless it\u0027s not even json. The intention of this library is to provide better compile time abstraction against standard Redfish schema, while allow fallback to direct json manipulation in edge case.\n\nFor 6, in the case of schemas is not able to checked in, we can always do the codegen first against the given schemas and checked in the generated cpp code instead.\n\nFor 4, if you are referring to key that contains \"@\" char or any other non-cpp-identifier-friendly char, we could have some sort of map between json key name \u003c-\u003e cpp member variable name to guide the json deserialization and serialization. I do have prototype that works.",
      "parentUuid": "46e30a63_4911d1d5",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d0e1c03_2262cf15",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f55be3f_969fa7bf",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12fd4ce1_018c8733",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "This kind of abstraction isn\u0027t really documented in the design.  Why wouldn\u0027t the daemon just be responsible for all of it?  As stated in earlier comments, you\u0027re not creating a generalized redfish/http client, so there\u0027s no need for a library here.",
      "range": {
        "startLine": 114,
        "startChar": 56,
        "endLine": 116,
        "endChar": 75
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97731c49_44fc36cf",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "The library itself is just codegen cpp classes that can be serialized and deserialized from json that conform to Redfish schema. It may also contains extra metadata such as which version this property is added or deprecated etc. The reason why this part is separated out is that we have interested to use this lib for internal tooling in Meta, and a separate lib would make it easier to import.",
      "parentUuid": "12fd4ce1_018c8733",
      "range": {
        "startLine": 114,
        "startChar": 56,
        "endLine": 116,
        "endChar": 75
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc0c9899_ead38c6b",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97731c49_44fc36cf",
      "range": {
        "startLine": 114,
        "startChar": 56,
        "endLine": 116,
        "endChar": 75
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32332b20_dd2a32c9",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "What does an \"SMC relative path\" mean?",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 137,
        "endChar": 28
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f3577d6_be790698",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-10T08:13:38Z",
      "side": 1,
      "message": "change to \"SMC-specific path\", meaning the SMC vendor-flavored redfish URL/path.",
      "parentUuid": "32332b20_dd2a32c9",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 137,
        "endChar": 28
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80adc6ad_b46d8c2a",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Redfish as a spec allows this, and I don\u0027t see anything in this design that would fix this?",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 140,
        "endChar": 12
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bee2ae36_1f24ab44",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "The redfish client daemon will act as a translator to translate SMC vendor spec to BMC vendor spec according to the config. For example, the config can specify that if we get message id X from SMC, change it to message id Y when putting into the dbus path.",
      "parentUuid": "80adc6ad_b46d8c2a",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 140,
        "endChar": 12
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d69ad5ea_ee952fa6",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 140,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bee2ae36_1f24ab44",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 140,
        "endChar": 12
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1c1c613_56d25516",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Can this sentence be rephrased?  I have no idea what \"SMC aware\" means in this context.",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 142,
        "endChar": 32
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c54e63d1_64c2959d",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d1c1c613_56d25516",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 142,
        "endChar": 32
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d88a9b0_925969f8",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": ".......  Yes.... they do?",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 144,
        "endChar": 23
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "267019c6_4a6a93ed",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "I\u0027m not sure if this is supported but it is not a important feature for this design use case anyway, I\u0027ll remove this line.",
      "parentUuid": "5d88a9b0_925969f8",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 144,
        "endChar": 23
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8862d9ae_6df85e31",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Remove \"centralized\".  This would be the second redfish client.",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31d9fad3_f1592bc2",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 150,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8862d9ae_6df85e31",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 32
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72ccdb61_d1acadb7",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "I\u0027m not following this.  There are existing patches adding this to dbus-sensors that do essentially what this design proposes and don\u0027t seem to duplicate code aside from the redfish json parser, but this design intends to duplicate that, so that\u0027s fine.  Please review them.",
      "range": {
        "startLine": 153,
        "startChar": 21,
        "endLine": 154,
        "endChar": 71
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "750cd976_ad05333a",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-10T08:13:38Z",
      "side": 1,
      "message": "If you are referring to [Redfish Sensor Design Proposal](https://gerrit.openbmc.org/c/openbmc/docs/+/58954), I have added it to the background reference session. Since this design hasn\u0027t been accepted, I would assume there shouldn\u0027t be any related patches being added, so this design proposal should not add duplicated code.",
      "parentUuid": "72ccdb61_d1acadb7",
      "range": {
        "startLine": 153,
        "startChar": 21,
        "endLine": 154,
        "endChar": 71
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d64e280_f62588ab",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-12T05:41:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "750cd976_ad05333a",
      "range": {
        "startLine": 153,
        "startChar": 21,
        "endLine": 154,
        "endChar": 71
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cae62210_0638cac0",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "While I sympathize to this, I don\u0027t see how putting this in something like dbus-sensors like you proposed would cause this?  We\u0027d duplicate as much code as we wanted?",
      "range": {
        "startLine": 156,
        "startChar": 9,
        "endLine": 157,
        "endChar": 24
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8c93371_2f4313db",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-11T21:55:51Z",
      "side": 1,
      "message": "This section is titled: Implement Redfish client within corresponding feature repositories\n\n100% agreement that if we put all the code in one spot, either in a new repository or dbus-sensors, we don\u0027t have the duplication.  But the paragraph is \"why not put it into a bunch of function-level repositories?\".",
      "parentUuid": "cae62210_0638cac0",
      "range": {
        "startLine": 156,
        "startChar": 9,
        "endLine": 157,
        "endChar": 24
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84c70a9b_3b70a4a5",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Right, this is intentional, otherwise how would you create the inventory tree correctly?",
      "range": {
        "startLine": 167,
        "startChar": 43,
        "endLine": 169,
        "endChar": 24
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "212be1ff_69fa6b52",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-11T21:59:12Z",
      "side": 1,
      "message": "This might not be worded as clearly as desired, but this is with respect to entity-manager configs like \"nvidia_hmc\".  Multiple NV customers can use the same hardware in their own machine and want separate Redfish configuration applied.  Right now there is no way to specify these vendor-tunings in entity-manager (and while that is a great feature to add in the future, it isn\u0027t something that can be contained in this work immediately).",
      "parentUuid": "84c70a9b_3b70a4a5",
      "range": {
        "startLine": 167,
        "startChar": 43,
        "endLine": 169,
        "endChar": 24
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea571209_2417fae5",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "This isn\u0027t true.  Configurations are modifyable at runtime, and if we\u0027re handling redfish to the specification, shouldn\u0027t require a lot of config, right?",
      "range": {
        "startLine": 169,
        "startChar": 27,
        "endLine": 170,
        "endChar": 56
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9c1d048_8ebdfd39",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-12-11T21:59:12Z",
      "side": 1,
      "message": "I\u0027m not understanding this statement.  (Maybe see my response on line 169)",
      "parentUuid": "ea571209_2417fae5",
      "range": {
        "startLine": 169,
        "startChar": 27,
        "endLine": 170,
        "endChar": 56
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e3da34a_81bdea95",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "We would duplicate the http client implementation that other designs have proposed making common:\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/67077\n\nplease add that to your background and impacts section.",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97cf78cc_218d58f8",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Sure, we can coverage to a single http client implementation once the HttpLibrary has been merged.",
      "parentUuid": "4e3da34a_81bdea95",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82de1db3_96894669",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 175,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-10T08:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97cf78cc_218d58f8",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2607954b_af235c87",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "?  Flash impact?  start up impact?  It\u0027s kind of hard to say \"no\" impact.  \"minimal\" might be the better word here.",
      "range": {
        "startLine": 177,
        "startChar": 68,
        "endLine": 178,
        "endChar": 14
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "565f5437_70db0aab",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2607954b_af235c87",
      "range": {
        "startLine": 177,
        "startChar": 68,
        "endLine": 178,
        "endChar": 14
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3f1b35a_cba8abeb",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 184,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "I see no mention of any dependencies here.  Surely we\u0027re not reimplementing HTTP parsing, json parsing, etc?  What impacts will those new dependencies cause?\n\nI would expect to see some amount of design for:\n\n1. HTTP library choise (Existing ones in the project are boost beast or libredfish (which wraps libcurl).\n2. Json parsing library (existing is nlohmann::json).",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "983e371e_293b6293",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 184,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-07T01:13:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a3f1b35a_cba8abeb",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25428875_62d81170",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1001289
      },
      "writtenOn": "2024-11-23T02:23:35Z",
      "side": 1,
      "message": "```suggestion\n### Does this project require a new repository?\n```",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65ec6335_a7f874cb",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-10T08:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25428875_62d81170",
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c7bf1f3_7f4613eb",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-03T19:10:11Z",
      "side": 1,
      "message": "Xinyuan, while we\u0027re happy you\u0027re pushing this, you do not appear to meet the requirements for maintainership yet, as a quick search shows this review as your only patch.  Patrick is obviously qualified.",
      "range": {
        "startLine": 194,
        "startChar": 0,
        "endLine": 194,
        "endChar": 12
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35de794b_2cd0ea80",
        "filename": "designs/redfish-client.md",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1001802
      },
      "writtenOn": "2024-12-10T08:13:38Z",
      "side": 1,
      "message": "I\u0027ll remove myself and have Patrick as the sole maintainer.",
      "parentUuid": "1c7bf1f3_7f4613eb",
      "range": {
        "startLine": 194,
        "startChar": 0,
        "endLine": 194,
        "endChar": 12
      },
      "revId": "92d09288cf929812fed257f8ac6fdff5908fcf4c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}