{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cb05e45c_3fe6a821",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-07-18T18:18:04Z",
      "side": 1,
      "message": "At a high level, it\u0027s still not clear to me why we can\u0027t work this into the existing firmware update components within OpenBMC. I\u0027d really like to avoid another phosphor-state-manager/x86-power-control, hwmon/dbus-sensors, inventory-manager/entity-manager, fan-control/pid-control ... type split. It just causes a lot of confusion within the community. I think you\u0027ll find that as you try to really make this design work, you\u0027ll need a lot of the same complexity that already exists in the current firmware update repos.",
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d30b31e6_1a88f7ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000546
      },
      "writtenOn": "2022-08-17T14:39:41Z",
      "side": 1,
      "message": "We have also proposed the following design docs related to firmware updates and custom flash tool.\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/37950 - Software Update for Multiple Devices Support\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/56037- OME-BIC(Bridge IC) Management Software (This is for requesting new repository for our custom OEM changes)\n\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/51950 - OEM-BIOS Firmware update design document.\n\nIs this design supports multiple devices from multi hosts of firmware update ?\n\nCan we discuss and merge our design docs based on our requirements of firmware update and flashing tool ?\n\n\n\n",
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9f57ee6_d613c1d7",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "Might want to call out the effort here.  Technically if your time is free, it\u0027s not expensive, but I get your meaning.",
      "range": {
        "startLine": 10,
        "startChar": 6,
        "endLine": 10,
        "endChar": 15
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d2f0b6_0d136135",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "?  Why not?  systemctl for example does it by simply having a daeamon, then the CLI talks to the daemon to do any \"work\"",
      "range": {
        "startLine": 12,
        "startChar": 74,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc519ef6_14457a81",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "Assuming it\u0027s not already a daemon, like fwupd.",
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f770f6f9_8f9bb804",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "Might want to phrase \"Isn\u0027t generalized\"",
      "range": {
        "startLine": 23,
        "startChar": 8,
        "endLine": 23,
        "endChar": 15
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c053d7c6_edfffb4e",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "This is kind of a stretch.  Given that a well behaved redfish API has a progress interface via task service, this would imply that you need some form of bmc-specific communication with the update CLI, or you jump directly from 0 to 100%",
      "range": {
        "startLine": 27,
        "startChar": 24,
        "endLine": 28,
        "endChar": 24
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d672968_6f24b224",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "Please make this more concrete.  What does \"user friendly\" mean?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 35,
        "endChar": 66
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "748b117c_cc1bef7b",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "Isn\u0027t this an implementation detail of the device being updated?  In the google case, yes, we use a lot of the same signature verification across, but this doesn\u0027t generalize to a redfish API that would exist outside the system.",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 64
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa8dc31e_9be110f8",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-07-13T18:28:49Z",
      "side": 1,
      "message": "yeah, this is probably up to the Update tool to verify the image.\n\nI have https://gerrit.openbmc.org/c/openbmc/docs/+/55287/ that might be related to set the \"requirement\" for what the update tool should do. Might be kind of useful.",
      "parentUuid": "748b117c_cc1bef7b",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 64
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bed819d_6103d7f5",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "????  It seems like going the opposite direction, as it\u0027s implementing a totally different daemon, which is contrary to one daemon per device/transport.",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 144,
        "endChar": 49
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e256ff08_06d8df62",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "This kind of implies that we shouldn\u0027t accept code upstream that uses this then?",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 79
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adbbbd4c_5b857402",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "These parameters break the primary principals of entity-manager.\n\n1. They hardcode linux specifics (commands).\n2. They hardcode software resources into an EM config file.  EM config files should represent entities that physically exist.\n\nGenerally you would model this with \n\nType: \"ADMxxxVR\"\n\nin your exposes record, and that\u0027s it.  Software should know what update mechanisms exist for that device type, and if part of that involves calling shell, so be it.\n\nAlso, because exposes records are user facing, we can\u0027t be calling exec on arbitrary user-provided runtime strings, as it would break a lot of security assumptions.\n\n\nMaybe most of these need to go into a lookup table, similar to what we use in PSU sensor for mapping device -\u003e linux device?",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 172,
        "endChar": 68
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64558a32_b2a54db4",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 172,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-07-13T18:28:49Z",
      "side": 1,
      "message": "why do we need to pull the firmware version? Can\u0027t we just fetch it when it is requested?",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 172,
        "endChar": 70
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6209940_86557912",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 176,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "This would imply that they need to be different exposes records if you can have one or both capabilities, but I think there\u0027s going to be change due to the comment above.",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 176,
        "endChar": 48
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b2cfaca_db8f2334",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 201,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "This woudl imply that we\u0027re launching and destroying a process every 10 seconds, which is an anti-pattern.  Dbus-sensors used to do this, and the facebook openbmc stack did this for sensor reading, and it caused problems.  We probably need to drop support for this.  If you need to get an instantaneous version number, you need to implement a daemon.",
      "range": {
        "startLine": 201,
        "startChar": 7,
        "endLine": 201,
        "endChar": 19
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed0d13fc_cfb5cbb0",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "?  What would be hosting this file?  Can we use a more realistic example?",
      "range": {
        "startLine": 210,
        "startChar": 23,
        "endLine": 210,
        "endChar": 34
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd6505d8_8acbee4e",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "Why not?  Presumably we could still have a single \"simple update\" daemon, but that just calls library code instead of a CLI?  If we\u0027re importing tools without a proper library interface we might want to be worried.",
      "range": {
        "startLine": 251,
        "startChar": 42,
        "endLine": 251,
        "endChar": 69
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e40fe33d_8aa63f6d",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "?  If it\u0027s not necessary, then just delete it?  I don\u0027t necessarily disagree with the conclusion here, but the path to get there is a little hazy.",
      "range": {
        "startLine": 255,
        "startChar": 19,
        "endLine": 255,
        "endChar": 44
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "546d8f05_876670f7",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 267,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "\"care should be taken\" isn\u0027t really a good enough statement.\n\nAre there any standards/specs we need to meet with regards to firmware update?",
      "range": {
        "startLine": 265,
        "startChar": 73,
        "endLine": 267,
        "endChar": 29
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eba8d984_1c2b548d",
        "filename": "designs/shell-based-fw-update-daemon.md",
        "patchSetId": 4
      },
      "lineNbr": 271,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-13T05:46:44Z",
      "side": 1,
      "message": "Why couldn\u0027t it go in one of the existing daemons?",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 271,
        "endChar": 34
      },
      "revId": "cc30ed3e6a822d02475418b1bec59e7a7a117ecd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}