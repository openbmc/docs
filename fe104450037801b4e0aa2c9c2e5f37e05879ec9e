{
  "comments": [
    {
      "key": {
        "uuid": "fb1033dd_b52f5b82",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-04T03:45:09Z",
      "side": 1,
      "message": "split all the paragraphs based on the line limit.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 644
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fba3953_7ef1d7f9",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "*sigh*.  There are a hundred interfaces exactly like this.  They really had to go invent yet another one?  They couldn\u0027t reuse something modern like PLDM or even something ancient like IPMB?",
      "range": {
        "startLine": 9,
        "startChar": 4,
        "endLine": 9,
        "endChar": 259
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72e8f2f0_fe16b84a",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "Lol........  if we don\u0027t invent new things we aren\u0027t innovating.... right?  😊",
      "parentUuid": "4fba3953_7ef1d7f9",
      "range": {
        "startLine": 9,
        "startChar": 4,
        "endLine": 9,
        "endChar": 259
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "806d425e_ef7dcbde",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb1033dd_b52f5b82",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 644
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebbbdb17_bd0792ed",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Hi, Patrick, unifying industry standards produced by different communities is definitely something big and way beyond the scope of this change. I\u0027ll keep your suggestion in mind and share with the CMIS community when I got chance. Actually this doc is an attempt to fit the CMIS into the current OpenBMC design and explore how we can propose better system software design in the future.",
      "parentUuid": "4fba3953_7ef1d7f9",
      "range": {
        "startLine": 9,
        "startChar": 4,
        "endLine": 9,
        "endChar": 259
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34515484_71b6d45c",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2021-10-05T16:49:14Z",
      "side": 1,
      "message": "minor nit: whitespace",
      "range": {
        "startLine": 14,
        "startChar": 374,
        "endLine": 14,
        "endChar": 375
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04441bd2_2c9fadb5",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34515484_71b6d45c",
      "range": {
        "startLine": 14,
        "startChar": 374,
        "endLine": 14,
        "endChar": 375
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99e149a3_2cc93aca",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "You are proposing a new daemon here?  Put that up front.  Why can\u0027t it be handled by any existing daemons?  Are you expecting this to be in a new repository or an existing one?",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d47c4666_eeb472d3",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "No.  It should use interrupts.  We should not keep going into this \"we\u0027re going to poll GPIOs\" mode.",
      "range": {
        "startLine": 17,
        "startChar": 84,
        "endLine": 17,
        "endChar": 107
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f004bd57_4169983f",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "nit: Can you break this third and fourth sentence into its own requirement?  It seems distinct from \"must report presence\".",
      "range": {
        "startLine": 17,
        "startChar": 170,
        "endLine": 17,
        "endChar": 487
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "284f77cc_59c05063",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "+1.  No polling unless there\u0027s a very good reason to do so (ie GPIO is not interrupt capable would be a good reason).",
      "parentUuid": "d47c4666_eeb472d3",
      "range": {
        "startLine": 17,
        "startChar": 84,
        "endLine": 17,
        "endChar": 107
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00171e0d_193991aa",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "FWIW, we should add those questions to the template;  They come up a lot.",
      "parentUuid": "99e149a3_2cc93aca",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86cebe8e_f77180e3",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000521
      },
      "writtenOn": "2021-10-11T17:02:01Z",
      "side": 1,
      "message": "The intent was to accommodate board designs where there is a GPIO expander that does not support triggering a pin on a GPIO edge transition or that GPIO interrupt notification pin is not connected to the BMC.\n\nAs an example, see TCA6408A - it has an interrupt pin but that doesn\u0027t mean that the pin is connected to a GPIO on the BMC.",
      "parentUuid": "284f77cc_59c05063",
      "range": {
        "startLine": 17,
        "startChar": 84,
        "endLine": 17,
        "endChar": 107
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b038a70_a44d1e02",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f004bd57_4169983f",
      "range": {
        "startLine": 17,
        "startChar": 170,
        "endLine": 17,
        "endChar": 487
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3420822_6c896a4f",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d47c4666_eeb472d3",
      "range": {
        "startLine": 17,
        "startChar": 84,
        "endLine": 17,
        "endChar": 107
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0a4e2a6_db4d1bc9",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "I mentioned in Line 11: \"This design doc is to propose a management daemon ...\"\n\nI apologize for not making this clear enough and have added an overview diagram for this design proposal. \n\n\"Why can\u0027t it be handled by any existing daemons\" -- As you can see, the CMIS doesn\u0027t follow any existing spec/design, especially the firmware upgrade part. So we plan to create a new repository.",
      "parentUuid": "99e149a3_2cc93aca",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 17,
        "endChar": 53
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b73d04af_8bcc0606",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-12T15:01:36Z",
      "side": 1,
      "message": "Re-open this comment as Jason brought up a good point.",
      "parentUuid": "e3420822_6c896a4f",
      "range": {
        "startLine": 17,
        "startChar": 84,
        "endLine": 17,
        "endChar": 107
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24d93d2e_538ffccf",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "nit: would it make more sense to just call the actual items \"identifier\" ect, in a list.  That would make a much more readable requirement.",
      "range": {
        "startLine": 18,
        "startChar": 524,
        "endLine": 18,
        "endChar": 664
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8a40200_b8ec658a",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24d93d2e_538ffccf",
      "range": {
        "startLine": 18,
        "startChar": 524,
        "endLine": 18,
        "endChar": 664
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8a18153_256e6fc8",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "Absolutely not.  There is zero need for any other process to know about CMIS.  Create existing, standardized dbus objects to abstract everyone else.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 138
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e15d43d_9a73ef5f",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "I\u0027m really not following this Patrick.  What Item interface would we use for a CMIS module?  Granted, I wonder if we should be calling out each of the module types as their own inventory item. (ie Item.SfpModule, Item.qsfpmodule, ect) and not lumping all CMIS compliant modules into one would be better, but some of the module specific properties (OUI for example) I don\u0027t really see the problem with them being their own interface.  Obviously this interface overstepped into the Asset interface, and that should be fixed, but I don\u0027t think that entirely negates the need for this specific information.",
      "parentUuid": "a8a18153_256e6fc8",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 138
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fdf6142_1cee8e0c",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-12T15:01:36Z",
      "side": 1,
      "message": "Agree with Ed. I\u0027ve moved the vendor_name/part_number/serial_number properties to existing interfaces, but there are still a couple of properties left. The \"xyz/openbmc_project/Inventory/Item/CmisModule/Module.interface\" seems to be necessary.\n\nWhat do you think, Patrick?",
      "parentUuid": "2e15d43d_9a73ef5f",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 138
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "502c08d4_808ab3ae",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "Should this be an enum?",
      "range": {
        "startLine": 38,
        "startChar": 12,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2fdb3f3_555d3bc7",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Thanks for bring this up, Ed!\n\nAll contents in this code snippet are defined in CMIS 4.0 Section 8.3 Upper Memory -- Page 00h (Table 8-15). There are only two data types: integer and ASCII. I can see your point to make this as an enum, but isn\u0027t an integer more consistent with other fields?",
      "parentUuid": "502c08d4_808ab3ae",
      "range": {
        "startLine": 38,
        "startChar": 12,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "150eeec4_a4a37893",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-29T22:21:03Z",
      "side": 1,
      "message": "I\u0027m not quite following here.  this is defined as an int, but has empty string as a default?  That\u0027s incorrect.\n\nThe table you mention has a description of \"Identifier - Type of Serial Module - See SFF-8024. \"\n\nFollowing up with SFF-8024, table 4-3 shows a list of identifiers that are generally used and would be put into the enum.   In general, we try to keep the dbus interfaces self-describing, and do our best to not tie them to a specification.  As you\u0027ve defined it, I would have to reference SFF-8024 for the valid types that this int could produce, which would be counter to the end state of having this interface be self describing, even if the enum values were made to match the spec.",
      "parentUuid": "d2fdb3f3_555d3bc7",
      "range": {
        "startLine": 38,
        "startChar": 12,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15fdc23d_1f49b651",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "OUIs are usually defined as a byte lookup table?  (sorry, haven\u0027t actually read the CMIS spec yet).  So should this be a byte/integer value?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 18
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "592eb83c_60645245",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Thanks for bring this up, Ed! Yes, the CMIS 4.0 Section 8.3 Upper Memory - Page 00h (Table 8-15) defines that this field should be \"3 bytes\". Changing this to \"integer\" now.",
      "parentUuid": "15fdc23d_1f49b651",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 18
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5908d295_22e82e78",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "This should go into the Asset interface, Manufacturer property.",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93cfdcfc_52d8fb37",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5908d295_22e82e78",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e374122_2b80cec8",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "Same, as above, goes into the asset interface, Model property.",
      "range": {
        "startLine": 48,
        "startChar": 12,
        "endLine": 48,
        "endChar": 22
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "566a9b92_3fed9dc8",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e374122_2b80cec8",
      "range": {
        "startLine": 48,
        "startChar": 12,
        "endLine": 48,
        "endChar": 22
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eabc97c5_158e8a1a",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "Same as above, Asset.SerialNumber.",
      "range": {
        "startLine": 52,
        "startChar": 12,
        "endLine": 52,
        "endChar": 24
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2b15d86_60c956e2",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eabc97c5_158e8a1a",
      "range": {
        "startLine": 52,
        "startChar": 12,
        "endLine": 52,
        "endChar": 24
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3494e06b_487b3732",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "I don\u0027t think we have an interface for this one, but it seems like something that might live in a generic version interface?  Patrick, thoughts?\n\nAlso, in CMIS is this a byte again?  Should this be represented as a byte on dbus?",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 26
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "318413d2_62d58166",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Same as above, per CMIS 4.0 Section 8.3 Upper Memory -- Page 00h (Table 8-15), this should be \"two bytes ASCII\", so I used type \"string\" here. This is the field we frequently communicate with vendors, so a string like \"2C\" is much easier than an integer \"0x3243\".\n\nI take a second look into OpenBMC interfaces, it seems that we may be able to reuse the \"xyz/openbmc_project/Inventory/Decorator/Revision.interface.yaml\" interface...",
      "parentUuid": "3494e06b_487b3732",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 26
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e3cb822_b4080415",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-29T22:21:03Z",
      "side": 1,
      "message": "Considering that the spec also has \"A value of all zero in the field indicates that the vendor Rev is unspecified.\"  That\u0027s another good reason to rely on another interface.",
      "parentUuid": "318413d2_62d58166",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 26
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1780231_bfed1a20",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2021-10-05T16:49:14Z",
      "side": 1,
      "message": "minor nit: whitespace",
      "range": {
        "startLine": 63,
        "startChar": 47,
        "endLine": 63,
        "endChar": 51
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b94c7dc_22068940",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1780231_bfed1a20",
      "range": {
        "startLine": 63,
        "startChar": 47,
        "endLine": 63,
        "endChar": 51
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59a943df_56376a4d",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "This should really use some of the existing interfaces.  Also, it seems unlikely that \"UnderDebug\" would be needed here at an interface level.  The module is just \"Unavailable\"",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 78,
        "endChar": 200
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28f8451f_fa58cb3a",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "The most relevant interface I can find is the \"xyz/openbmc_project/State/Decorator/OperationalStatus.interface.yaml\", but that one only supports a boolean variable. \n\nThe purpose of this enumeration is to provide finer granularities for module states. For example, uninitialized/firmware upgrade/debugging all can make the module \"unavailable\", but they have significant meaning to other systems (human intervention or not). Can we enrich the OperationalStatus interface to store those different state? Or should we merge this module-level status with the below lane-level staus?\n\n@Ed Tanous, @Patrick Williams",
      "parentUuid": "59a943df_56376a4d",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 78,
        "endChar": 200
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e738277b_54d0fd9c",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-29T22:21:03Z",
      "side": 1,
      "message": "\u003e The most relevant interface I can find is the \"xyz/openbmc_project/State/Decorator/OperationalStatus.interface.yaml\", but that one only supports a boolean variable. \n\nThe point here is that \"upgrading firmware\" \"ready\" and \"under debug\" are not states that are only present on CMIS interfaces, so they should be available through common interfaces, to ensure that we\u0027re reusing our interfaces where possible.\n\n\u003e \n\u003e The purpose of this enumeration is to provide finer granularities for module states. For example, uninitialized/firmware upgrade/debugging all can make the module \"unavailable\", but they have significant meaning to other systems (human intervention or not). Can we enrich the OperationalStatus interface to store those different state?\n\nThere\u0027s already discussions happening on this topic.  I would recommend removing status from this interface for the moment, and jumping in on those discussions in the other commit.\n\n\u003e Or should we merge this module-level status with the below lane-level staus?\n\nI don\u0027t think so, but I\u0027m not sure I understand the question.\n\n\u003e \n\u003e @Ed Tanous, @Patrick Williams",
      "parentUuid": "28f8451f_fa58cb3a",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 78,
        "endChar": 200
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "158667ed_ef955db8",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "I think we should refrain from using the word Telemetry in this context.  There is something else called Telemetry which, based on the next paragraph, is not what you have in mind.  (See designs/telemetry.md).\n\nThis mostly looks like sensor readings.",
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cb484ce_5c8d60e0",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "+1, Telemetry has a lot of overloads.  Lets call this sensors.",
      "parentUuid": "158667ed_ef955db8",
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e4979ae_cb7aa31f",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2cb484ce_5c8d60e0",
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49b166f1_a4c43b38",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "Is this a different new daemon or the same one?  Can we get a summary at the beginning of all the new daemons if you have multiple?  Maybe an ascii-art picture?",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 12
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdb8a017_b9fe5f27",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "+1, I suspect this can just be changed to \"the daemon\" because you\u0027ll likely want all of the CMIS code in one spot.",
      "parentUuid": "49b166f1_a4c43b38",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 12
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb5d09bf_5d411cac",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "The proposal purpose was mentioned at Line 11. I add a couple of ASCII figures at the beginning of this doc. Please take another look.",
      "parentUuid": "49b166f1_a4c43b38",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 12
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b850ee9_9d8018fd",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "Just FYI, I don\u0027t think we have DBM set up as a sensor measurement unit yet, so we\u0027ll need to get that plumbed into PDI.",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 91,
        "endChar": 75
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b137ff3_1105ef4b",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4b850ee9_9d8018fd",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 91,
        "endChar": 75
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19686048_1de2a588",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "I don\u0027t think this is a good data abstraction.  Bits that somebody else has to pick apart isn\u0027t too useful.\n\n_Who_ is interested in this information?  I think you should identify the end-to-end flow of this information so we have a better idea how it should be modeled.\n\nCan we create a generic PHY interface (or something along those lines)?",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 95,
        "endChar": 146
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "689dce2a_894ed324",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "\u003e I don\u0027t think this is a good data abstraction.  Bits that somebody else has to pick apart isn\u0027t too useful.\n\n+1\n\n\u003e \n\u003e _Who_ is interested in this information?  I think you should identify the end-to-end flow of this information so we have a better idea how it should be modeled.\n\u003e \n\u003e Can we create a generic PHY interface (or something along those lines)?\n\n+1, these should likely be called out per-PHY, with a \"link up\" or \"link down\" type interface.  We shouldn\u0027t be bitpacking on dbus in this way.\n\nAlso, functionally, as this interface is defined, there\u0027s no way to know how many bits of the enum are valid.  SFP+ will presumably have one lane.  QSFP will have 4.  From the dbus interface as defined there\u0027s no way to know the difference.",
      "parentUuid": "19686048_1de2a588",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 95,
        "endChar": 146
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92b3da9e_a41f9c70",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Hi, Patrick and Ed,\n\nThanks very much for keeping an eye on this! \n\nI agree that we should re-use the existing \"xyz/openbmc_project/Sensor/Value.interface.yaml\" for temperature and supply voltage. \n\nAfter taking another look at the CMIS register maps, I realize that my last version was inaccurate about the Tx/Rx power part: actually all the Tx/Rx power/loss-of-signal/loss-of-lock are per-lane sensor/flag. They are documented in CMIS-4.0 Section 8.8.2 Lane-Specific Flags and 8.8.3 Lane-Specific Monitors. \n\nAnd Ed has a very good point that different type of module may have different number of lanes. Is an array of struct a best fit for this:\n\nstruct PerLaneStatus {\n  int lane_id;\n  double tx_power;\n  double rx_power;\n  bool tx_loss_of_signal;\n  bool rx_loss_of_signal;\n  bool tx_loss_of_lock;\n  boll rx_loss_of_lock;\n}\n\nI also updated the below interface for this.",
      "parentUuid": "689dce2a_894ed324",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 95,
        "endChar": 146
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32cb0fb7_28dd46bd",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-29T22:21:03Z",
      "side": 1,
      "message": "\u003e Hi, Patrick and Ed,\n\u003e \n\u003e Thanks very much for keeping an eye on this! \n\u003e \n\u003e I agree that we should re-use the existing \"xyz/openbmc_project/Sensor/Value.interface.yaml\" for temperature and supply voltage. \n\u003e \n\u003e After taking another look at the CMIS register maps, I realize that my last version was inaccurate about the Tx/Rx power part: actually all the Tx/Rx power/loss-of-signal/loss-of-lock are per-lane sensor/flag. They are documented in CMIS-4.0 Section 8.8.2 Lane-Specific Flags and 8.8.3 Lane-Specific Monitors. \n\u003e \n\u003e And Ed has a very good point that different type of module may have different number of lanes. Is an array of struct a best fit for this:\n\u003e \n\u003e struct PerLaneStatus {\n\u003e   int lane_id;\n\u003e   double tx_power;\n\u003e   double rx_power;\nIMO still need to be sensors, with an association back to the module.\n\n\n\u003e   bool tx_loss_of_signal;\n\u003e   bool rx_loss_of_signal;\n\u003e   bool tx_loss_of_lock;\n\u003e   boll rx_loss_of_lock;\n\u003e }\n\u003e \n\nI wonder if we just need a \"LaneStatus\" schema.  In theory a CMIS module could have zero lanes, right?\n\n\u003e I also updated the below interface for this.",
      "parentUuid": "92b3da9e_a41f9c70",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 95,
        "endChar": 146
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e582142_1de5d67c",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "👍",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 162
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74f36e89_59c74992",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2e582142_1de5d67c",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 162
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8c917d0_e8756b13",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "To repeat the above, lets not call this Telemetry, as the term is already overloaded.  CmisModuleStatus maybe?",
      "range": {
        "startLine": 101,
        "startChar": 46,
        "endLine": 101,
        "endChar": 55
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f998646c_e66505c6",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Ack. Changed this to CmisModuleLaneStatus.interface",
      "parentUuid": "c8c917d0_e8756b13",
      "range": {
        "startLine": 101,
        "startChar": 46,
        "endLine": 101,
        "endChar": 55
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5c5dc48_ea155cb3",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "These should be sensors.",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 113,
        "endChar": 63
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff89e2cd_1e1a28ce",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Ack. Please see my other comments.",
      "parentUuid": "b5c5dc48_ea155cb3",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 113,
        "endChar": 63
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aedcf79_c8504c95",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "What, if any, coordination is there with Entity Manager for these devices?",
      "range": {
        "startLine": 136,
        "startChar": 92,
        "endLine": 136,
        "endChar": 167
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ced80c8c_06b2bc9d",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Per Ed\u0027s suggestion, I added a new item in the requirements section:\n\n\"CMIS module should be dynamically configured using Entity-manager reactor models to identify the location of GPIO pins.\"",
      "parentUuid": "0aedcf79_c8504c95",
      "range": {
        "startLine": 136,
        "startChar": 92,
        "endLine": 136,
        "endChar": 167
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d48006ed_95c0e9a4",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "How is this done?",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 210
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b5e25f1_6b5c2518",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "Do BMCs generally have control of the reset pin on a phy module?  I thought that was up to the controller generally?  At the very least, this might need to be configurable.",
      "parentUuid": "d48006ed_95c0e9a4",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 210
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c83f082_27167df9",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Hi, Patrick and Ed,\n\nI added a system diagram at the beginning of the doc. The module reset and power model are controlled by GPIO pins.",
      "parentUuid": "4b5e25f1_6b5c2518",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 210
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97cd6c86_5890f88a",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-29T22:21:03Z",
      "side": 1,
      "message": "GPIO pins to the BMC isn\u0027t always the most common though.",
      "parentUuid": "1c83f082_27167df9",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 210
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41e66ac3_f32c09db",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "The kernel has mutexes to block operations across subsystems all the time.  Why is this a problem?",
      "range": {
        "startLine": 141,
        "startChar": 207,
        "endLine": 141,
        "endChar": 269
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c77b112e_2681d240",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "This is never justification for not writing a kernel driver.  Alternatively, you\u0027re providing an i2c driver in userspace and not reusing a bunch of the kernel subsystems that would allow you to easily present this information (ex. hwmon) so we\u0027re having to reinvent a bunch of pieces.  That isn\u0027t good either.\n\nI think we should have a bigger discussion with some kernel experts on where this belongs.",
      "range": {
        "startLine": 141,
        "startChar": 271,
        "endLine": 141,
        "endChar": 427
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75e28b8a_86dd67bc",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "Why would it be hard?  Isn\u0027t there firmware upgrade / microcode loading APIs already?\n\nWhat does \"support features like... debugging\" mean?  There isn\u0027t anything in this document about that.",
      "range": {
        "startLine": 141,
        "startChar": 69,
        "endLine": 141,
        "endChar": 153
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73ab1676_0066080b",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-04T22:12:44Z",
      "side": 1,
      "message": "This is the first time in the whole doc that I\u0027ve come to realize that this is connected over i2c.  Please put that earlier.",
      "range": {
        "startLine": 141,
        "startChar": 182,
        "endLine": 141,
        "endChar": 196
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e4fe338_6be1e7df",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "\u003e Why would it be hard?  Isn\u0027t there firmware upgrade / microcode loading APIs already?\n\nIs there examples of smbus devices that have this interface already?  I thought that was one of the primary issues with the pmbus kernel support, is that these kinds of things were significantly difficult features to add, but relatively trivial to add to userspace.\n\nI would be in support of a userspace implementation of this.\n\n\u003e \n\u003e What does \"support features like... debugging\" mean?  There isn\u0027t anything in this document about that.",
      "parentUuid": "75e28b8a_86dd67bc",
      "range": {
        "startLine": 141,
        "startChar": 69,
        "endLine": 141,
        "endChar": 153
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8253f50_ddf3b4b4",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-08T22:51:10Z",
      "side": 1,
      "message": "You didn\u0027t read the whole CMIS spec cover to cover? 😋",
      "parentUuid": "73ab1676_0066080b",
      "range": {
        "startLine": 141,
        "startChar": 182,
        "endLine": 141,
        "endChar": 196
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a73a400c_6e2e4c10",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "I probably used an imprecise word at Line 9: \"modules with host to module communication based on a Two-Wire Interface (TWI)\". Apologize for this and I\u0027ve already made this more clear at the beginning.",
      "parentUuid": "73ab1676_0066080b",
      "range": {
        "startLine": 141,
        "startChar": 182,
        "endLine": 141,
        "endChar": 196
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4040cf33_3a220ee9",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Please see my comments below. I\u0027m not saying kernel isn\u0027t able to make this, it\u0027s just a matter of ease of implementing and testing (especially firmware upgrade).",
      "parentUuid": "41e66ac3_f32c09db",
      "range": {
        "startLine": 141,
        "startChar": 207,
        "endLine": 141,
        "endChar": 269
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a463a76e_fbcdf901",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Hi, Patrick,\n\nI agree that both kernel driver and user space daemon can serve the same purpose. More input from kernel driver experts are definitely welcome!\n\n@Andrew Jeffery, @Jeremy Kerr",
      "parentUuid": "c77b112e_2681d240",
      "range": {
        "startLine": 141,
        "startChar": 271,
        "endLine": 141,
        "endChar": 427
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcd35ad0_0415c8f6",
        "filename": "designs/cmis-compliant-module-manager.md",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1001073
      },
      "writtenOn": "2021-10-11T22:47:16Z",
      "side": 1,
      "message": "Agree with Ed. Especially, the CMIS 4.0 proposed the new Command Data Block based firmware upgrade. I\u0027ve seen it was used in other domains before, so there shouldn\u0027t be existing APIs for it.\n\nRegarding the \"support features like... debugging\": sorry for not making this more clear. I\u0027ve added one more item in the \"Requirements\" section. Basically, we expect the management daemon to stop its access to the module and yield the raw i2c read/write access to human for debugging purpose. The debugging tools are likely vendor-specific and not going to be upstreamed.",
      "parentUuid": "3e4fe338_6be1e7df",
      "range": {
        "startLine": 141,
        "startChar": 69,
        "endLine": 141,
        "endChar": 153
      },
      "revId": "fe104450037801b4e0aa2c9c2e5f37e05879ec9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}