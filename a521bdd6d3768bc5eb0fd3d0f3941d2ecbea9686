{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8b64bc72_5c7a439f",
        "filename": "designs/no-fru-device-hw-detect.md",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-09-19T16:34:18Z",
      "side": 1,
      "message": "You don\u0027t plan on having \u0027FRU_Device_Alternative\u0027 in the D-Bus service or interface names right?  There\u0027s already systems out there that don\u0027t probe using fru-device interfaces, for example all of IBMs systems which probe against an IBM unique EEPROM format (e.g. https://github.com/openbmc/entity-manager/blob/master/configurations/rainier_4u_chassis.json#L24)",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 31
      },
      "revId": "a521bdd6d3768bc5eb0fd3d0f3941d2ecbea9686",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3477aee_9e8be130",
        "filename": "designs/no-fru-device-hw-detect.md",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-09-19T16:43:27Z",
      "side": 1,
      "message": "I wasn\u0027t aware of the IBM probes, that\u0027s useful info thanks! \n\nThe actual name of the service and interface is still very open to suggestions. Maybe something like \u0027uboot-deviceID\u0027?",
      "parentUuid": "8b64bc72_5c7a439f",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 31
      },
      "revId": "a521bdd6d3768bc5eb0fd3d0f3941d2ecbea9686",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb7ef28f_c815d754",
        "filename": "designs/no-fru-device-hw-detect.md",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-09-19T18:03:32Z",
      "side": 1,
      "message": "Did you already consider just hosting the new interface from within uboot-env-manager?  That seems like it would save some work, plus it already claims a service name.",
      "parentUuid": "d3477aee_9e8be130",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 31
      },
      "revId": "a521bdd6d3768bc5eb0fd3d0f3941d2ecbea9686",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf4c4a28_6fe3c0ed",
        "filename": "designs/no-fru-device-hw-detect.md",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-09-19T18:36:00Z",
      "side": 1,
      "message": "To clarify- are we talking about hosting the entire service + daemon source in uboot-env-manager, or are we talking about hosting the service + daemon in Entity-Manager, but then adding dbus objects to the the existing uboot-env-manager service name?\n\nre code in env-mgr: I thought it would make logical sense to keep this \u0027fru-like\u0027 data daemon with the existing FRUDevice daemon. In Gen10, we still had an I2C-accessible device, and (probably) would have been modifying FRUDevice to parse HPE\u0027s blobs if the device hadn\u0027t gone away in Gen11.",
      "parentUuid": "eb7ef28f_c815d754",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 31
      },
      "revId": "a521bdd6d3768bc5eb0fd3d0f3941d2ecbea9686",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c1a18c2_6a50a048",
        "filename": "designs/no-fru-device-hw-detect.md",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-09-20T20:40:07Z",
      "side": 1,
      "message": "I was talking about just putting your code inside uboot-env-mgr, to just read whatever variables you want on startup and put them on D-Bus as read only properties. It would be less code, and one less service file to deal with. I\u0027m not sure what the maintainers of that repo would think about that though.",
      "parentUuid": "bf4c4a28_6fe3c0ed",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 31
      },
      "revId": "a521bdd6d3768bc5eb0fd3d0f3941d2ecbea9686",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6570519a_85264d13",
        "filename": "designs/no-fru-device-hw-detect.md",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1001354
      },
      "writtenOn": "2023-09-20T21:33:20Z",
      "side": 1,
      "message": "Based on your earlier comment, I\u0027ve changed interface \u0026 daemon names in the documentation to \u0027uBootHWID,\u0027 pending further naming suggestions.\n\nI think it\u0027s worth noting that the service file being proposed for Entity-Manager should only startup if an image has explicitly imported u-boot-env-mgr (no public recipes do at this time) and the service there is running first. \n\nI also have the impression that adding new HW discovery \u0027channels\u0027 to Entity-Manager alongside the existing frudevice daemon (which is focused on HW discovery via i2c EEPROM reads) *might* set good precedent re: having hardware discovery daemons grouped in one spot, with one daemon per channel used for discovery.\n\n(I am taking a closer look at how that IBM code you linked earlier implements things in general btw- thanks again for that link)",
      "parentUuid": "2c1a18c2_6a50a048",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 31
      },
      "revId": "a521bdd6d3768bc5eb0fd3d0f3941d2ecbea9686",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ddc6b2d_9675d1f4",
        "filename": "designs/no-fru-device-hw-detect.md",
        "patchSetId": 6
      },
      "lineNbr": 50,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-09-20T21:48:00Z",
      "side": 1,
      "message": "At IBM so far we never completely moved off of the original inventory manager phosphor-inventory-manager.  So we have a service that reads EEPROMs with IBM format contents and fills in d-bus properties based on the values in phosphor-inventory-manager, which EM then probes.\n\nI don\u0027t have a problem with it going alongside fru-device if that\u0027s where people think it should go.",
      "parentUuid": "6570519a_85264d13",
      "range": {
        "startLine": 50,
        "startChar": 9,
        "endLine": 50,
        "endChar": 31
      },
      "revId": "a521bdd6d3768bc5eb0fd3d0f3941d2ecbea9686",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}