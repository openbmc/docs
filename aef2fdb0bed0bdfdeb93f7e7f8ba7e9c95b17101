{
  "comments": [
    {
      "key": {
        "uuid": "29878834_b0715ac0",
        "filename": "designs/guard_on_bmc.md",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2020-03-24T21:48:09Z",
      "side": 1,
      "message": "I need to know if an error ID has an outstanding guard record.  So I would just get all the objects that have the Guard interface and search those for my error ID?",
      "revId": "aef2fdb0bed0bdfdeb93f7e7f8ba7e9c95b17101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ed99a50_fbd3bbec",
        "filename": "designs/guard_on_bmc.md",
        "patchSetId": 6
      },
      "lineNbr": 135,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:32:57Z",
      "side": 1,
      "message": "Commandline arguments that aren\u0027t optional shouldn\u0027t have options.",
      "range": {
        "startLine": 135,
        "startChar": 16,
        "endLine": 135,
        "endChar": 25
      },
      "revId": "aef2fdb0bed0bdfdeb93f7e7f8ba7e9c95b17101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf740484_56443cd8",
        "filename": "designs/guard_on_bmc.md",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:32:57Z",
      "side": 1,
      "message": "As above.",
      "range": {
        "startLine": 137,
        "startChar": 15,
        "endLine": 137,
        "endChar": 25
      },
      "revId": "aef2fdb0bed0bdfdeb93f7e7f8ba7e9c95b17101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc2b8e37_93c378ad",
        "filename": "designs/guard_on_bmc.md",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:32:57Z",
      "side": 1,
      "message": "Please fill this out. Your document states the the host owns the guard records - how does it create them? How does it retrieve them? How do the answers to these impact the BMC infrastructure? What trade-offs do we need to make? How might someone implement the infrastructure and what effects does the answer have on this proposal?",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 148,
        "endChar": 26
      },
      "revId": "aef2fdb0bed0bdfdeb93f7e7f8ba7e9c95b17101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55793cd8_eea6fde5",
        "filename": "designs/guard_on_bmc.md",
        "patchSetId": 6
      },
      "lineNbr": 150,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:32:57Z",
      "side": 1,
      "message": "What new components are needed? How does a system integrator enable the guard infrastructure? What existing applications need to be modified? Are there any security impacts?",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 10
      },
      "revId": "aef2fdb0bed0bdfdeb93f7e7f8ba7e9c95b17101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fb8f0e8_7032c64c",
        "filename": "designs/guard_on_bmc.md",
        "patchSetId": 6
      },
      "lineNbr": 155,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-03-25T06:32:57Z",
      "side": 1,
      "message": "This sounds like manual testing. How are you planning to automate it? What about unit tests for affected codebases?",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 155,
        "endChar": 60
      },
      "revId": "aef2fdb0bed0bdfdeb93f7e7f8ba7e9c95b17101",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}