{
  "comments": [
    {
      "key": {
        "uuid": "3f17cce5_f447139c",
        "filename": "designs/device-tree-gpio-naming.md",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-11-03T18:44:48Z",
      "side": 1,
      "message": "It was noted elsewhere that pin-hole is actually just one word, pinhole so clean up the name and doc for this.",
      "range": {
        "startLine": 97,
        "startChar": 5,
        "endLine": 97,
        "endChar": 13
      },
      "revId": "f0dabe9a33267b48ca23dee341b22106a9fcbb21",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3858c181_49e492d1",
        "filename": "designs/device-tree-gpio-naming.md",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-11-02T23:04:43Z",
      "side": 1,
      "message": "I think we need a `Reset` section. This could go there, as could `factory-reset-toggle`, `cfam-reset` and possibly others.",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 98,
        "endChar": 76
      },
      "revId": "f0dabe9a33267b48ca23dee341b22106a9fcbb21",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca61693b_cb8a1630",
        "filename": "designs/device-tree-gpio-naming.md",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-03T14:50:27Z",
      "side": 1,
      "message": "If the BMC is hung, how does this do anything?  I would have expected you to wire this up to one of the external watchdog signals if you intended the BMC to be rebooted...\n\nCan we clarify here what \"pin hole reset\" means also since it is not a standard term?  You put some information in the commit message.",
      "revId": "f0dabe9a33267b48ca23dee341b22106a9fcbb21",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2a5fed5_822f84b7",
        "filename": "designs/device-tree-gpio-naming.md",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-11-03T18:44:48Z",
      "side": 1,
      "message": "I see a couple of issues with this. \n1) This gpio is not what you use to cause a reset, it\u0027s an indication that a reset occurred (hence my \"indicator\" pattern). Part of Patricks confusion below is around this, I need to update the documentation here.\n2) The other resets do not follow a standard naming pattern (other then *reset*)\n3) They are very specific to POWER systems (at least the cfam-reset) which is why having them in the \"Special\" section seems better to me.",
      "parentUuid": "3858c181_49e492d1",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 98,
        "endChar": 76
      },
      "revId": "f0dabe9a33267b48ca23dee341b22106a9fcbb21",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb2e8af0_b7a01de3",
        "filename": "designs/device-tree-gpio-naming.md",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-11-03T18:44:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca61693b_cb8a1630",
      "revId": "f0dabe9a33267b48ca23dee341b22106a9fcbb21",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1c98dcb_96302b8c",
        "filename": "designs/device-tree-gpio-naming.md",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2021-11-04T22:08:18Z",
      "side": 1,
      "message": "\u003e I see a couple of issues with this. \n\u003e 1) This gpio is not what you use to cause a reset, it\u0027s an indication that a reset occurred (hence my \"indicator\" pattern). Part of Patricks confusion below is around this, I need to update the documentation here.\n\nAh!\n\n\u003e 2) The other resets do not follow a standard naming pattern (other then *reset*)\n\nBut that\u0027s what I was trying to address before the problem got worse.\n\n\u003e 3) They are very specific to POWER systems (at least the cfam-reset) which is why having them in the \"Special\" section seems better to me.\n\nOkay.",
      "parentUuid": "f2a5fed5_822f84b7",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 98,
        "endChar": 76
      },
      "revId": "f0dabe9a33267b48ca23dee341b22106a9fcbb21",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ff5eae8_8ebd8836",
        "filename": "designs/device-tree-gpio-naming.md",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-11-04T23:15:13Z",
      "side": 1,
      "message": "I suppose the right way is to expose this as a watchdog history device, but if we can come up with a better name than indicator I can go along with gpio \n\nAre there plans to do more than a unique error log?\n\nPs where is the host status running gpio?  Ahh 47662  Not in a category, but an indicator as much as this one.",
      "parentUuid": "e1c98dcb_96302b8c",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 98,
        "endChar": 76
      },
      "revId": "f0dabe9a33267b48ca23dee341b22106a9fcbb21",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3c21e7c_6e0229b5",
        "filename": "designs/device-tree-gpio-naming.md",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2021-11-05T15:25:51Z",
      "side": 1,
      "message": "AndrewJ\n\u003e But that\u0027s what I was trying to address before the problem got worse.\n\u003e 1. We\u0027re trying to define a class of things based on single instance of such a thing\n\nI think this is the crux of the issue. Either we try and define a pattern up front for a use case, so the initial one follows a rule, and follow on changes follow the same rule, or we end up where we are with \"reset\", no pattern. Chicken or Egg. I\u0027d prefer a rule that only ever applies to a single GPIO name then not having a rule and getting bitten later when we find a common use case.\n\n\u003e 2. Any input GPIO is an indicator\n\nYeah, valid point. I guess in the end this becomes somewhat of a last resort. It\u0027s not an LED, power, button, ....  But I am definitely up for whatever here.\n\n\u003e For instance, is `-record` any better? I feel it might give a better translation of it capturing something that\u0027s happened in the past.\n\nYeah, I like that. The GPIO is giving a record of something that happened in the past.\n\nMilton\n\u003e Are there plans to do more than a unique error log?\n\nIBM\u0027s plan is to create an info error indicating it occurred and to not run any automated power on recovery functions (i.e. if customer pin hole reset a system, they do not want firmware automatically powering the system on).\n\n\u003e Ps where is the host status running gpio?  Ahh 47662  Not in a category, but an indicator as much as this one.\n\nYeah, interesting point, looks like https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/47662/4/designs/device-tree-gpio-naming.md is going in a direction of just making a special category for host-ready. I\u0027m not sure how well this review matches with that though. What we have in this review, is a GPIO that tells you why something happened in the past. The host status is more of a \"is the host running now\".",
      "parentUuid": "bb2e8af0_b7a01de3",
      "revId": "f0dabe9a33267b48ca23dee341b22106a9fcbb21",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}