{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "80dcc980_d60e3e29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2023-11-14T21:26:48Z",
      "side": 1,
      "message": "Thanks for the review.",
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b20556e7_f94ad6a1",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "I\u0027m having trouble understanding the purpose of this adjective here.\n\n- Clearly the daemon isn\u0027t the only entity with dbus access or it would just be talking to itself.\n- Clearly the daemon needs to do more than access dbus or it couldn\u0027t do the update (ie. it also needs hardware access).\n\nShould we drop that word or does it have some meaning in this context I\u0027m not grasping.",
      "range": {
        "startLine": 37,
        "startChar": 29,
        "endLine": 37,
        "endChar": 33
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eacd3d3c_fca2ab46",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 39,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "Where did this number come from?  That seems rather specific.  Is there some spec that requires this?",
      "range": {
        "startLine": 39,
        "startChar": 32,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77eb2901_71a8c894",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "There is probably _some_ imposition, such as PLDM-based updates should use PLDM package format, right?  But maybe that isn\u0027t a requirement of the overall software design.",
      "range": {
        "startLine": 45,
        "startChar": 8,
        "endLine": 45,
        "endChar": 21
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84806537_532bbe72",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 47,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "We probably need some words here about distinguishing between multiple CPLD entities of the same type, right?  Updating multiple devices is (relatively) easy; updating a specific device out of N that are the same model is harder.",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 53
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8083f6c_a11778e4",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "I would say this is nice-to-have rather than a requirement.",
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a7c7c50_fa80ebe5",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "BMC reboot or managed host reboot?  We should clarify (or is it both?).",
      "range": {
        "startLine": 49,
        "startChar": 46,
        "endLine": 49,
        "endChar": 60
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3d4b5e8_64aa8a73",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 121,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "may.  Otherwise this is false for at least PLDM-based updates.",
      "range": {
        "startLine": 121,
        "startChar": 32,
        "endLine": 121,
        "endChar": 37
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d2163cc_c83d8bab",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 146,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "See https://github.com/openbmc/phosphor-dbus-interfaces/blob/800f708024fa74404f325b04892e276fdc118c62/requirements.md#directed-associations-should-be-named-with-participle-verbs .\n\nWe should update these association names since we\u0027re writing new code anyhow.",
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90b2dfd5_81a6f8b8",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 168,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "This is worded in a way that probably matches what you intend but someone who really understands the implementation might question.\n\nI think the desire is that bmcweb creates an open file descriptor to a tmpfs location and then immediately deletes it (before writing to it).  This file descriptor is what is passed along.\n\nThe image is thus still in tmpfs (and in memory) but inaccessible by any process that doesn\u0027t have the file descriptor.",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 168,
        "endChar": 78
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be640a6b_01f88fac",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 171,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "I\u0027m not positive how it does.  bmcweb still needs access to _some_ tmpfs, right?",
      "range": {
        "startLine": 170,
        "startChar": 40,
        "endLine": 171,
        "endChar": 28
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df3b09b2_34e1dd1c",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 172,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "Did the numbering of your requirements get messed up?",
      "range": {
        "startLine": 172,
        "startChar": 33,
        "endLine": 172,
        "endChar": 68
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f46cdb61_a88617fb",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 177,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "Even image verification might take too long for the dbus return.  What are we really wanting done?",
      "range": {
        "startLine": 177,
        "startChar": 32,
        "endLine": 177,
        "endChar": 67
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d79fd15a_8f5f13ee",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 180,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "SEL is an IPMI concept.\n\nWe should specify that we are creating a phosphor-logging event (which is mapped to Redfish assuming that whoever built the image has the appropriate bmcweb option turned on).",
      "range": {
        "startLine": 180,
        "startChar": 6,
        "endLine": 180,
        "endChar": 21
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40fdbb92_793c7e4c",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 184,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "What is your design?  If this is an alternative, it probably belongs in the alternatives section.  Or is this a \"we don\u0027t really know what we\u0027re doing until we get to the implementation\"?",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 184,
        "endChar": 88
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd978f03_e10d6d97",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 191,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-11-14T09:16:48Z",
      "side": 1,
      "message": "Could we keep the previous MANIFEST design so that it is consistent and could use the common logic to parse the image (e.g. tarball)?\nThe file to update by the specific daemon could still be vendor defined, but we always add the MANIFEST and signatures to make a tarball.",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 191,
        "endChar": 32
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9e421c9_0225e912",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 191,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2023-11-14T21:26:48Z",
      "side": 1,
      "message": "@Lei Yu,\nBMC Code update will continue to use the same image format as being used today. In general, Software Update as a design concept will not impose any restriction for any specific image format.",
      "parentUuid": "fd978f03_e10d6d97",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 191,
        "endChar": 32
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e33c0b4_a38e4d32",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 200,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "I think this became Requirement 9 during an edit?  Check on all the requirement numbers.",
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "178e4cf2_3b962222",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 208,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "Is this really a requirement and/or design?  Can\u0027t any daemon implement the update in some async manner and [potentially] support multiple devices in parallel?\n\nDo we need a method for a daemon to report the equivalent of EBUSY?",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 208,
        "endChar": 8
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1edceb4f_e76b5fb4",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 224,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "Is this something that exists?  Do you have a link to a design for this?",
      "range": {
        "startLine": 224,
        "startChar": 22,
        "endLine": 224,
        "endChar": 40
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5360bbcc_fc8987a1",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 303,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "could",
      "range": {
        "startLine": 303,
        "startChar": 49,
        "endLine": 303,
        "endChar": 52
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77c14c63_a393917a",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 307,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "You\u0027ll probably need a mentor to start with since this would be your first maintainership.",
      "range": {
        "startLine": 307,
        "startChar": 57,
        "endLine": 307,
        "endChar": 76
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f569f45d_fe897144",
        "filename": "designs/code-update.md",
        "patchSetId": 10
      },
      "lineNbr": 324,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-12-18T17:24:19Z",
      "side": 1,
      "message": "We\u0027ll probably need to figure out what to do here when we make the TOF request for new repos.  What happens if nobody makes the openpower-pnor-code-mgmt change?  Is it busted or do we just have deprecated code floating around in bmcweb?",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 324,
        "endChar": 106
      },
      "revId": "28171bdedeefb434b30650052864a795293befca",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}