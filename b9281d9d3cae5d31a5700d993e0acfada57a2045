{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1f42895b_4f2ab383",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2025-05-09T14:34:59Z",
      "side": 1,
      "message": "Hi Reviewers,\n\nI\u0027ve pushed the changes related to the SPDM implementation into the docs folder since we don\u0027t have a dedicated repository yet. I thought we could review the code here for now. If you feel this implementation doesn\u0027t belong in this location, please let me know how you\u0027d prefer to proceed.\n\nThanks!",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0867c83_eaf89a93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-05-12T02:35:51Z",
      "side": 1,
      "message": "I understand that the docs repo isn\u0027t the intended destination here, but I am not sure this is an effective way to get consensus on the new code proposed.\n\nWhat we *do* want in the docs repo is a proposal for the layout of the new SPDM infrastructure. Things like:\n\n - what are the main interfaces exposed?\n - what is the requester/responder structure?\n - what parts of SPDM does this intend to support?\n - how are applications that use these interfaces typically structured?\n \nThere are very few related references to SPDM in the docs repo, perhaps we can define the design before reviewing code?",
      "parentUuid": "1f42895b_4f2ab383",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3dc8aee9_4d6168da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2025-05-12T04:41:30Z",
      "side": 1,
      "message": "@ratankgupta31@gmail.com @hosmanechinmay@gmail.com - This is not the correct way to contribute within the OpenBMC community, and your recent actions are inconsistent with the community\u0027s established guidelines and expectations.\n\nSpecifically:\n1. You initiated 1:1 conversations with Google rather than using the OpenBMC mailing list, which goes against our principles of open and transparent collaboration.\n2. You did not participate in earlier community discussions about SPDM on Discord.\n3. If your intention was to contribute existing downstream code, the appropriate course of action would have been to engage earlier. Waiting until someone else raises the topic and then stepping in undermines the collaborative nature of the project.\n4. Now, by attempting to push your downstream code `here`, you\u0027re further disregarding the guidelines \u0026 wasting everyones time. Every one knows that NVIDIA has some downstream spdm daemon.\n\nDuring last week\u0027s Technical Oversight Forum (TOF), it was unanimously decided that an SPDM repository will be created, and Patrick and I will serve as maintainers for it.\n\nYou are welcome—and encouraged—to contribute your code once the repository is properly set up. Going forward, please adhere to the OpenBMC community guidelines. We expect open communication, community alignment, and proper process—not behavior that sidesteps established norms and wastes the community’s time. Let’s avoid a repeat of this and work toward a more collaborative approach.",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6984a547_584da7a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2025-05-12T06:11:56Z",
      "side": 1,
      "message": "@manojkiran.eda@gmail.com: What are our recent actions?\n\nWe have encouraged our partners to upstream their code to the community once their designs were merged into the OpenBMC project.\n\nRegarding the question of why we approached them directly (1:1) instead of raising it publicly in the community—there is no strict right or wrong approach. Sometimes direct outreach is more effective, while at other times, public discussion works better. It\u0027s a matter of individual preference and communication style.\n\n\n\u003e You did not participate in earlier community discussions about SPDM on Discord.\n\nThere have been many conversations on Discord that may have escaped my attention. However, when the issue to create the SPDM repository was opened, I actively requested and were involved multiple times for its creation.\nhttps://github.com/openbmc/technical-oversight-forum/issues/48 but no one reponded from TOF and still the open queries are unanswered.\n\n\n\u003e If your intention was to contribute existing downstream code, the appropriate course of action would have been to engage earlier. Waiting until someone else raises the topic and then stepping in undermines the collaborative nature of the project.\n\nOur downstream code is different from what has been submitted. Please verify your claims. The code we have contributed aligns with the OpenBMC merged SPDM design.\n\nWe had been coordinating with Google to contribute the code, but due to delays, we decided to push it ourselves to prevent others from duplicating effort.\n\n\u003e Now, by attempting to push your downstream code here, you\u0027re further disregarding the guidelines and wasting everyone\u0027s time. Everyone knows that NVIDIA has its own downstream SPDM daemon.\n\nPlease refer to this thread for more context:\nhttps://github.com/openbmc/technical-oversight-forum/issues/48\n\nI have also reached out to multiple TOF members requesting the creation of the SPDM repository.\n\nAdditionally, if a decision was made during last week’s meeting, it would have been helpful if someone from the TOF had updated the GitHub issue accordingly. That way, I would have been aware and wouldn’t have proceeded with pushing the changes here.\n\nI think as a community we are not perfect and trying to be perfect.",
      "parentUuid": "3dc8aee9_4d6168da",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca44d3c3_b27bf906",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2025-05-12T06:11:56Z",
      "side": 1,
      "message": "Hi jeremy, It is already covered here in the doc itself.\nhttps://github.com/openbmc/docs/blob/master/designs/redfish-spdm-attestation.md",
      "parentUuid": "d0867c83_eaf89a93",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6994ff8a_d2a3d311",
        "filename": "spdm_prototype/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1001516
      },
      "writtenOn": "2025-05-09T17:38:08Z",
      "side": 1,
      "message": "0.58 is bit old. We will have to move to newer version.",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df405910_68b69440",
        "filename": "spdm_prototype/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1001516
      },
      "writtenOn": "2025-05-09T17:38:08Z",
      "side": 1,
      "message": "Other repos in openbmc is moved to c++23.",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3ce42f6_7403366e",
        "filename": "spdm_prototype/spdmd/spdmd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1001516
      },
      "writtenOn": "2025-05-09T17:38:08Z",
      "side": 1,
      "message": "We will need readme file to explain overall code structure, build process and other details.",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc60bc96_74040435",
        "filename": "spdm_prototype/spdmd/spdmd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001516
      },
      "writtenOn": "2025-05-09T17:38:08Z",
      "side": 1,
      "message": "Service file for spdm daemon is not included.",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fac2f9cf_60f03ded",
        "filename": "spdm_prototype/spdmd/spdmd_app.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-09T14:34:50Z",
      "side": 1,
      "message": "New daemons should be using the sdbusplus::async support.",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4850e88a_7551fa2f",
        "filename": "spdm_prototype/spdmd/spdmd_app.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-12T16:26:23Z",
      "side": 1,
      "message": "sdbusplus::async doesn\u0027t have socket support yet, and SPDM over TCP is one of the targets for SPDM, so I don\u0027t think sdbusplus::async works for all use cases yet.\n\nIs there somewhere where broad agreement that new daemons must use sdbusplus::async was reached?  I know that\u0027s Metas drive, and that\u0027s great to see.",
      "parentUuid": "fac2f9cf_60f03ded",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c982c8fe_5a85799c",
        "filename": "spdm_prototype/spdmd/spdmd_app.hpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1001516
      },
      "writtenOn": "2025-05-09T17:38:08Z",
      "side": 1,
      "message": "Missing doc string",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66f8f50b_bce6629c",
        "filename": "spdm_prototype/spdmd/spdmd_app.hpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1001516
      },
      "writtenOn": "2025-05-09T17:38:08Z",
      "side": 1,
      "message": "As per upstream design D-Bus objects should be /ComponentIntegrity and /TrustedComponent, so we don\u0027t need this root path.",
      "revId": "b9281d9d3cae5d31a5700d993e0acfada57a2045",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}