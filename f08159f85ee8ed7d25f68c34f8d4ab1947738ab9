{
  "comments": [
    {
      "key": {
        "uuid": "b812b564_3825b957",
        "filename": "designs/oem/ibm/acf-authentication.md",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-08-19T22:46:57Z",
      "side": 1,
      "message": "Add: 4. The authentication function must operate in a highly restricted operational environment where no devices (such as USB storage) can be brought into the console area, and no connection to the internet can be assumed.",
      "revId": "f08159f85ee8ed7d25f68c34f8d4ab1947738ab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7869c5f6_4044895b",
        "filename": "designs/oem/ibm/acf-authentication.md",
        "patchSetId": 2
      },
      "lineNbr": 218,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-07-28T21:01:23Z",
      "side": 1,
      "message": "There appears to be some space vs tab damage.",
      "revId": "f08159f85ee8ed7d25f68c34f8d4ab1947738ab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8d764a3_b93f7e5e",
        "filename": "designs/oem/ibm/acf-authentication.md",
        "patchSetId": 2
      },
      "lineNbr": 218,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-07-28T22:13:30Z",
      "side": 1,
      "message": "The format looks okay (as intended) to me (modulo my art skills).\nFor example, line 208 shows three lines, from left to right, showing:\n- The public key goes into the firmware associated with to the BMC.\n- The ACF is loaded onto the BMC via the admin account.\n- The password goes to the service login.\n\nWhat happens if you view the diagram on another monospaced medium?",
      "parentUuid": "7869c5f6_4044895b",
      "revId": "f08159f85ee8ed7d25f68c34f8d4ab1947738ab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "882baecd_e14624f0",
        "filename": "designs/oem/ibm/acf-authentication.md",
        "patchSetId": 2
      },
      "lineNbr": 218,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-03T23:48:09Z",
      "side": 1,
      "message": "I agree when I downloaded it.  Not sure why gerrit is showing damage",
      "parentUuid": "a8d764a3_b93f7e5e",
      "revId": "f08159f85ee8ed7d25f68c34f8d4ab1947738ab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "670d6c38_5a005e00",
        "filename": "designs/oem/ibm/acf-authentication.md",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-08-19T22:46:57Z",
      "side": 1,
      "message": "Authentication based on [Universal 2nd Factor (U2F)](https://en.wikipedia.org/wiki/Universal_2nd_Factor), specifically pam_u2f, was considered.\n\nIn its original formulation, U2F requires a device to authenticate the second factor.  However, because IBM BMCs may operate in an environment where no devices are allowed, the BMC would have an internal server for pam_u2f to authenticate with.  The server would perform the ACF password authentication function.\n\nAlso, the regular U2F flow checks the password before checking the second factor.  That is, it is geared toward adding a 2nd factor to the normal password authentication path.  However, this design requires the password to be different for each scheduled maintenance window.  To make this work with pam_u2f, the ACF upload function would have to set the service user\u0027s password.\n\nFor these reasons, pam_u2f is not a good fit for this design, and the functions above were put into the pam_ibmacf module.",
      "revId": "f08159f85ee8ed7d25f68c34f8d4ab1947738ab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "550b060b_202784c9",
        "filename": "designs/oem/ibm/acf-authentication.md",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-20T11:45:15Z",
      "side": 1,
      "message": "\u003e However, this design requires the password to be different for each scheduled maintenance window.  To make this work with pam_u2f, the ACF upload function would have to set the service user\u0027s password.\n\nThat\u0027s exactly what a U2F challenge/response is though; the equivalent of a unique password.  You could set the password on the service account to \u0027bob\u0027 for all it matters as long as the U2F challenge is required.",
      "parentUuid": "670d6c38_5a005e00",
      "revId": "f08159f85ee8ed7d25f68c34f8d4ab1947738ab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5fef556_9664681e",
        "filename": "designs/oem/ibm/acf-authentication.md",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-20T11:50:24Z",
      "side": 1,
      "message": "Patrick, How would you get around no electronics in or out of the data center, let alone attached to a USB port?",
      "parentUuid": "550b060b_202784c9",
      "revId": "f08159f85ee8ed7d25f68c34f8d4ab1947738ab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e23f739_e189739b",
        "filename": "designs/oem/ibm/acf-authentication.md",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-25T21:10:19Z",
      "side": 1,
      "message": "I\u0027m not suggesting a U2F device in the machine; I\u0027m suggesting using the algorithm for U2F challenge verification.\n\nThe inside-IBM service token creator machine would create a U2F compliant challenge-response based on the date+serial number (just like you want here) and we use the U2F protocol on the machine to accept the U2F token.  They\u0027re approximately 28 alpha-numeric characters long.\n\nWhen you insert a U2F machine into a USB port it basically just emulates a keyboard.  You touch the strip on it and it \"types\" a bunch of characters.  There is nothing in U2F that requires the device is physically present as a \"real\" emulated keyboard.  In fact, at both FB and Amazon, I regularly used U2F devices in my laptop to authenticate services inside of an SSH session.",
      "parentUuid": "b5fef556_9664681e",
      "revId": "f08159f85ee8ed7d25f68c34f8d4ab1947738ab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}