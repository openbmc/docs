{
  "comments": [
    {
      "key": {
        "uuid": "8d3cd974_645cf26d",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "This is changing the scope of the requirements from something that arrives at MCTP as an answer to something that assumes MCTP and defines downstream requirements. I think this should be a separate section, not replace the current existing set of requirements.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 65,
        "endChar": 22
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "004a7470_d1cabc45",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "This seems to be switching the document to be about the design of a daemon rather than the broader picture of the use of MCTP in OpenBMC?",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 24
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fdf6204_89e03195",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "This feels like the wrong way around? An MCTP service could leverage libmctp, but libmctp isn\u0027t something that any other entity provides.",
      "range": {
        "startLine": 69,
        "startChar": 2,
        "endLine": 69,
        "endChar": 48
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09d3e316_2ff0d5b8",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "This isn\u0027t my intention. The kernel-based socket interface will support all modes of operation (root bus owner, intermediate bridge or endpoint). My understanding was that Intel plan to use the proposed D-Bus interface in the short-term to deal with shortfalls in the current demux-daemon. Is that still true? The kernel-based socket implementation will not have any of the current limitations (lack of device discoverability).",
      "range": {
        "startLine": 103,
        "startChar": 67,
        "endLine": 104,
        "endChar": 49
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30dee673_f9bbf849",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "On the PMCI call we agreed that libmctp would contain the set of commands defined in the base specification, yes?",
      "range": {
        "startLine": 111,
        "startChar": 4,
        "endLine": 111,
        "endChar": 27
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32092c23_3ec8a917",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "Are you going to handle routing between interfaces? How will that work?",
      "range": {
        "startLine": 238,
        "startChar": 0,
        "endLine": 241,
        "endChar": 7
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe6a6afa_9cd398c7",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 245,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s necessary to state that here.",
      "range": {
        "startLine": 243,
        "startChar": 47,
        "endLine": 245,
        "endChar": 26
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "412c1314_97201b1f",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 260,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "Has anyone prototyped this? What does this service file look like?",
      "range": {
        "startLine": 257,
        "startChar": 76,
        "endLine": 260,
        "endChar": 64
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f65d41e_bce4ff19",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "This feels like the wrong abstraction. I don\u0027t think these details should be exposed on DBus. Has anyone prototyped this?",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 280,
        "endChar": 64
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "041a6305_72f64eb0",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "I\u0027d prefer more details about what properties/methods/signals are being proposed given they are a public interface.",
      "range": {
        "startLine": 282,
        "startChar": 0,
        "endLine": 283,
        "endChar": 52
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b28fba4c_67103439",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 287,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "Again, would prefer more details here.",
      "range": {
        "startLine": 285,
        "startChar": 0,
        "endLine": 287,
        "endChar": 11
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37cdec20_97c47cba",
        "filename": "designs/mctp.md",
        "patchSetId": 3
      },
      "lineNbr": 290,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2020-02-24T04:39:14Z",
      "side": 1,
      "message": "This is an implementation detail. I don\u0027t think it belongs in a document which should be talking about architecture and design of public interfaces.",
      "range": {
        "startLine": 289,
        "startChar": 0,
        "endLine": 290,
        "endChar": 43
      },
      "revId": "7db1fa5bebcec80df0cf5b56c982b1fedf7f9d43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}