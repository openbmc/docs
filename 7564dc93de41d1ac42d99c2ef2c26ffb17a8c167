{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3481ecfe_0d95aed7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-09T23:45:01Z",
      "side": 1,
      "message": "@rushtotom@gmail.com I couldn\u0027t review the flow sequence as the flow diagram is not being rendered in your current document. I will wait for you to update the original design document to review it.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9df7277_8b787b42",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "This is incorrect statement. As long as you provide the correct targetURI list, the PLDM package with diverse component types will be routed to the appropriate backends which can process the component images targeted for them. \nYou need to be more clear in terms of your use case and define it precisely.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "595a7458_86eb9335",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Update the problem description to define the usecase.",
      "parentUuid": "a9df7277_8b787b42",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "351265b8_251cd4db",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "This is already proposed https://gerrit.openbmc.org/c/openbmc/docs/+/74653 and you have reviewed it too. So, why are you stating this in \"lacks orchestration capabilities\"?",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7854633_de956ebb",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Update the problem description to define the usecase. The code-update-manager usecase is described in the latest patchset.",
      "parentUuid": "351265b8_251cd4db",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33a2c3da_45909f85",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "This is about adding another property to the proposed platform configuration at https://gerrit.openbmc.org/c/openbmc/docs/+/75500. So, feel free to raise a PR on top of that stack or let me know and i can do that too.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29ca7c42_54d324ca",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Update the problem description to define the usecase. The code-update-manager usecase is described in the latest patchset.",
      "parentUuid": "33a2c3da_45909f85",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32abd99c_19be763b",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "This is already proposed in https://gerrit.openbmc.org/c/openbmc/docs/+/75500 and you have reviewed it and provided comments there. So, why are you stating this in \"lacks orchestration capabilities\"?",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a7ea202_a561cfe6",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Update the problem description to define the usecase. The code-update-manager usecase is described in the latest patchset.",
      "parentUuid": "32abd99c_19be763b",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "811693d9_a85d40e5",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "Why do you mean by \"global write protection\" and what are you trying to protect? We already have ActivationBlocksTransition interface.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1f8d90d_e1fc9f8f",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Global write protection is a security feature to ensure there are write access to the SPI flash other than when code update is happening.",
      "parentUuid": "811693d9_a85d40e5",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b662f2fa_e8660802",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "Again this is incorrect statement with respect to current code design. The solution at https://github.com/openbmc/docs/blob/master/designs/code-update.md already adds supports for TargetURIs.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65f0ac92_8a5dcf8a",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Current code update flow uses Targets Redfish property to route PLDM\npackage to pldmd or specific CodeUpdater. An alternate Redfish API usage\nis if no Targets are specified, BMC matches the components in the single\nPLDM package to the PLDM and Non-PLDM devices and updates all the\napplicable devices. Additionally, if Targets are present, then the\nspecific Targets are updated using the firmware in the single composite\nPLDM package.",
      "parentUuid": "b662f2fa_e8660802",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ce246e9_b0117b1e",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "\u003e ForceUpdate\n\nThis was proposed as a requirement in the https://github.com/openbmc/docs/blob/master/designs/code-update.md but it was removed from initial requirements as there was some push back. I need to dig to figure out who opposed it. But there is no limitation in the design that it cannot be added.\nThis was dropped from initial requirements and considered a followup enhancement. Please refer to PDI changes for this -\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/69992/1/yaml/xyz/openbmc_project/Software/Update.interface.yaml.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71744922_18a4f6b0",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "I see ForceUpdate in review, will add Targets to match the RF API.\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/69992/1",
      "parentUuid": "5ce246e9_b0117b1e",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcba529a_2438e30a",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-10T23:59:48Z",
      "side": 1,
      "message": "That is not the intent of Update D-Bus Interface. This interface is implemented for each updateable software entity. So, you cannot add the Target list here. TargetList is consumed by BMCWeb and BMCWeb is the one which initiates update using update interface based on Target List.",
      "parentUuid": "71744922_18a4f6b0",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7efebd19_5f27edff",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-02-14T05:17:32Z",
      "side": 1,
      "message": "1. In the multi-part image section [1], the proposal is to have a logical firmware device as the target, if there are multiple components how can one of the components be updated with a single package (containing multiple components)? I think we are lacking in the current design for this usecase with a single package.\n\n*While performing the firmware device update, the client may target the logical firmware device which further knows how to update the corresponding child components for supplied component images.[1] https://github.com/openbmc/docs/blob/master/designs/code-update.md#multi-part-images*\n\n2. If the bmcweb has to offload to code-update-manager as described in this proposal, it would need to pass the update arguments like package, force update and Targets. If Targets has to be a separate interface, we can explore that possibility.",
      "parentUuid": "dcba529a_2438e30a",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d23c62f9_69adbe67",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-02-28T00:35:09Z",
      "side": 1,
      "message": "\u003e 1. In the multi-part image section [1], the proposal is to have a logical firmware device as the target, if there are multiple components how can one of the components be updated with a single package (containing multiple components)? \n\nThe TargetURIs shall contain the FirmwareInventory targetURI for the component, client wants to update. The BMCWeb will call the StartUpdate interface on the specific target(device/component) based on TargetURI. For BMCWeb its just another target, doesn\u0027t matter if its a component or device.\n\n\u003e I think we are lacking in the current design for this usecase with a single package.\n\u003e \n\u003e *While performing the firmware device update, the client may target the logical firmware device which further knows how to update the corresponding child components for supplied component images.[1] https://github.com/openbmc/docs/blob/master/designs/code-update.md#multi-part-images*\n\n\n\u003e \n\u003e 2. If the bmcweb has to offload to code-update-manager as described in this proposal, it would need to pass the update arguments like package, force update and Targets. \n\nThe Redfish Target URI list cannot be passed further as they get terminated at BMCWeb. The list of D-Bus objectPaths for the updateable targets where the StartUpdate interface resides needs to be passed further.\n\nForceUpdate, Package are generic properties whereas TargetURI is redfish specific property.\n\n\u003e If Targets has to be a separate interface, we can explore that possibility.\n\nThat could be one of the possible options, so we can discuss and explore. Can you please raise gerrit PRs for all the DBus interfaces you are proposing and provide reference in the design, that way it will become clear what are the properties and their corresponding types, service object paths etc.",
      "parentUuid": "7efebd19_5f27edff",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00345453_b81dd11a",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-03-11T07:02:39Z",
      "side": 1,
      "message": "\u003eThe TargetURIs shall contain the FirmwareInventory targetURI for the component, client wants to update. The BMCWeb will call the StartUpdate interface on the specific target(device/component) based on TargetURI. For BMCWeb its just another target, doesn\u0027t matter if its a component or device.\n\nCan you explain how the TargetURI would look like? There is a logical firmware URI to send the multi part image to the updater, but how does the updater know how to update a single component(if there are multiple components targeted for that device). I think if we terminate TargetURIs at the bmcweb, we cannot solve this.\n\n\u003e That could be one of the possible options, so we can discuss and explore.\n\nI will raise a gerrit MR for the TargetURI as a separate interface from the StartUpdate interface so that it can be forwarded to the code-update-manager.",
      "parentUuid": "d23c62f9_69adbe67",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e42d77cd_a16aa3bc",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-03-18T06:27:55Z",
      "side": 1,
      "message": "@paligill@gmail.com I have raised the D-Bus interface, please review.\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/78905",
      "parentUuid": "00345453_b81dd11a",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2670088_33e5323d",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-04-02T22:42:04Z",
      "side": 1,
      "message": "\u003e Can you explain how the TargetURI would look like? There is a logical firmware URI to send the multi part image to the updater, but how does the updater know how to update a single component(if there are multiple components targeted for that device). I think if we terminate TargetURIs at the bmcweb, we cannot solve this.\n\nEach component has to expose its own Version, Update interface etc on /xyz/openbmc_project/software/... path. On Redfish side, each component will have its own FirmwareInventory URI that will be show the FirmwareVersion (in Redfish) being run by that component. So, when targeting a specific component for update, the FirmwareInventory URI for the specific component needs to be used. So, as i mentioned above for BMCWeb its just another target.",
      "parentUuid": "e42d77cd_a16aa3bc",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f745cdaf_0a5cee11",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-04-11T10:39:55Z",
      "side": 1,
      "message": "On the same page, resolving the comment",
      "parentUuid": "d2670088_33e5323d",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c09e5533_6db15e41",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "The images are kept in memory when they are received in BMCWeb and then passed via mem-fd to the backend. This was one of the main requirements imposed by @Ed (BMCWeb mainatiner). There is nothing in design which restricts you from moving that image to filesystem in your backend.\nWhich step in flow are you referring to when you say \"keeps the images in the memory, this does not account for the case where memory is insufficient\"?",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c09cb46_72994155",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "https://github.com/openbmc/docs/blob/master/designs/code-update.md#keep-images-in-memory\n\n`Keep images in memory` was misleading, I will update the design document to mention it is flexible.",
      "parentUuid": "c09e5533_6db15e41",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2752c30b_0d1fcf20",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "Already supports adding Targets via TargetURIs.\n\nPlease state your requirement precisely what you are referring here?",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4224aedf_8c6d01b7",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Latest patchset should address this.",
      "parentUuid": "2752c30b_0d1fcf20",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68724ba4_2f977a3b",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "Already supported with PDI changes, refer https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/69992/1/yaml/xyz/openbmc_project/Software/Update.interface.yaml.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10af2892_5c4ab974",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "I see ForceUpdate in review, will add Targets to match the RF API.\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/69992/1",
      "parentUuid": "68724ba4_2f977a3b",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4df0d39c_0438a895",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "There is no restriction imposed by https://github.com/openbmc/docs/commits/master/designs/code-update.md. What are you referring to here?",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81d07aca_a9345836",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4df0d39c_0438a895",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9f1cad4_0a61e6e0",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "Already supported in https://github.com/openbmc/docs/commits/master/designs/code-update.md. What are you referring to here?",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0813e7b2_554a00dc",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d9f1cad4_0a61e6e0",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9bfdd27_8f2f4a6d",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "Already being done by Wiwynn team for the PLDM firmware implementation they are doing for the proposed design in https://github.com/openbmc/docs/blob/master/designs/code-update.md.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da4ce4d9_258c5ae0",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "- List of components updated\n- Update task on completion of Transfer, Verification and Apply Stages.\n- Step needed for activating the image like power cycle, device reset etc.\n\nPlease share relevant Gerrit patches, I will review this series, let me know if there are other ones.https://gerrit.openbmc.org/c/openbmc/pldm/+/75390/78",
      "parentUuid": "d9bfdd27_8f2f4a6d",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d8a9357_05cff744",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "If its apply immediately, the device reset should should automatically be taken care by your post update condition unless you want user to explicitly trigger it.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01a06078_ab64fd3d",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "The RF task should indicate the firmware update activation for the component, apply immediately is one of them there are other activation mechanisms like AC power cycle/DC power cycle/inband reset etc.",
      "parentUuid": "4d8a9357_05cff744",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abdafa80_c7748511",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-07T18:49:54Z",
      "side": 1,
      "message": "Already supported in https://github.com/openbmc/docs/commits/master/designs/code-update.md.\n\nPlease fold your extra requirements into existing design doc and make your changes there. Don\u0027t create a complete new doc as its creating confusion on what you are proposing.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9904875e_62a8b39e",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-23T09:08:17Z",
      "side": 1,
      "message": "Addressed with the latest patchset.",
      "parentUuid": "abdafa80_c7748511",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44507084_6f84c33d",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-03-13T12:51:36Z",
      "side": 1,
      "message": "Is this still Modify, or Existing?",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8a2c2c7_3ad71ad0",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-03-14T06:49:57Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "44507084_6f84c33d",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08b1e8f8_3b04b6ba",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-09T23:45:01Z",
      "side": 1,
      "message": "Not sure whats the purpose of this new interface as its not evident from description? JFYI: I already have a PR for software collection interface in review https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/74853 which might be equivalent to this.",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1790d111_8a4a88b9",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-31T09:38:50Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "08b1e8f8_3b04b6ba",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3ea2991_5bceef6d",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2025-01-09T23:45:01Z",
      "side": 1,
      "message": "FYI: The change to integrate Update interface into PLDM is already being worked and in review by Wiwynn team https://gerrit.openbmc.org/c/openbmc/pldm/+/74774",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a07c51e8_ebde5999",
        "filename": "designs/code_update_design_new.md",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2025-01-31T09:38:50Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d3ea2991_5bceef6d",
      "revId": "7564dc93de41d1ac42d99c2ef2c26ffb17a8c167",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}