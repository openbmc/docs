{
  "comments": [
    {
      "key": {
        "uuid": "3dcf370b_de2ece45",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-09-30T01:36:46Z",
      "side": 1,
      "message": "NIT: have you thought about the which schema\u0027s you would use to receive repair actions. \nIt is not critical for this doc, I am just curious.",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8b5a6cd_c3a6e3b8",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "Good question; here are some of the schemas that I think we could potentially use:\n- Use JobService/Job schema for general repair tasks\n- Use TaskService/Task schema for long-running repair tasks\n- Or maybe for a simpler approach (but not within bmcweb OEM policy at https://github.com/openbmc/bmcweb/blob/master/OEM_SCHEMAS.md ?), add an OemAction in the schema for the specific component we want to repair. For example, add an OemAction in the Memory schema for initiating DIMM repairs.",
      "parentUuid": "3dcf370b_de2ece45",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b72d0b61_d02d943a",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-10-13T23:39:10Z",
      "side": 1,
      "message": "- JobService is defined in the redfish schema, but not implemented in bmcweb (the current implementation of redfish for openbmc)\n\n- TaskService sounds reasonable, can you check with Ed (edtanous) to make sure that bmcweb is onboard.\n\n- If the answer is a non standard google OemAction. It might be a mistake for openbmc to host this repo.",
      "parentUuid": "e8b5a6cd_c3a6e3b8",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53faa7ca_1ae66f27",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-18T19:21:40Z",
      "side": 1,
      "message": "Thanks. I will mark this comment as resolved as it\u0027s not critical for the current version of this doc, but will follow up on this topic.",
      "parentUuid": "b72d0b61_d02d943a",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ad39b50_6b428342",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-20T02:37:01Z",
      "side": 1,
      "message": "Also another idea is for the client to POST (create) to a Redfish LogEntryCollection for a LogService. We would be giving extra meaning to POST (create) -- not just creating a log entry but actually triggering an action based on what we receive in that new entry. But maybe it\u0027s simpler than creating a job, etc. Also I looked into Tasks more and it seems like the client can\u0027t directly POST (create) to a TaskCollection to request a Task, but rather the client makes a request to another service which then can create a Task if the request is for a long-running operation.",
      "parentUuid": "53faa7ca_1ae66f27",
      "range": {
        "startLine": 30,
        "startChar": 37,
        "endLine": 30,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19a8e82f_8109cc64",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-07T13:02:25Z",
      "side": 1,
      "message": "Has there been any look into phosphor-debug-collector?  Most of what is necessary for crashdump is conceptually very similar to what IBM does in something they call a \"system dump\".  It seems to me like adding support for crashdump to phosphor-debug-collector would be relatively straight-forward and then the rest of the infrastructure would be done for you.",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62ddf57d_a0d70c21",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-09-30T01:36:46Z",
      "side": 1,
      "message": "I don\u0027t know much about phosphor-debug-collector, but it is a reasonable question.",
      "parentUuid": "19a8e82f_8109cc64",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd99a0dd_a74efad5",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "Sounds good, the back-end implementation of the fault log could live in the phosphor-debug-collector module.",
      "parentUuid": "62ddf57d_a0d70c21",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dea547f7_290a399c",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-10-13T23:39:10Z",
      "side": 1,
      "message": "The way I understand it, Patrick is advocating for you to not make a daemon/module, but rather add the needed functionality to an existing daemon. Which is a very reasonable thing to do.\n\nIf you want to change phosphor-debug-collector, you need to update the doc (and not write a new daemon/module) you need to update this doc to reflect this design decision.\n\nI suspect you need to do more research on phosphor-debug-collector to know if that is a viable option or not.",
      "parentUuid": "cd99a0dd_a74efad5",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8f6b986_864ebdfc",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-18T19:21:40Z",
      "side": 1,
      "message": "Yes I\u0027m thinking we can add a new dump type (fault log) into an existing phosphor-debug-collector daemon (specifically the one with main() function in dump_manager_main.cpp). The new fault log would contain dump files that are collected in a variety of ways in a variety of formats. So we would create a new fault log dump entry class (deriving from the \"Entry\" class in dump_entry.hpp) that adds a \"dump type\" member variable to identify the type of data that an entry\u0027s corresponding dump file contains.\n\nI am open to feedback on whether this sounds reasonable.",
      "parentUuid": "dea547f7_290a399c",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6a4a103_539d6ed3",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-20T02:37:01Z",
      "side": 1,
      "message": "Updated the design doc with details from this comment thread.",
      "parentUuid": "c8f6b986_864ebdfc",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dbe454a_fee75827",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-09-30T01:36:46Z",
      "side": 1,
      "message": "Are there any updates to the proposal since 2021-01-14. \n\nThe link take me to a two page document that has a list of 9 high level requirements, and a block diagram. Is there anything more descriptive.",
      "range": {
        "startLine": 56,
        "startChar": 56,
        "endLine": 56,
        "endChar": 64
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91eedcfe_afd6562b",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "While the doc is still quite short, there have been some additions; I will post the link when it becomes available.",
      "parentUuid": "1dbe454a_fee75827",
      "range": {
        "startLine": 56,
        "startChar": 56,
        "endLine": 56,
        "endChar": 64
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "112a13d2_17a1d433",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-20T02:37:01Z",
      "side": 1,
      "message": "It seems to be taking some time to get the link to the new doc version publicly available. I will resolve this comment for now, but I will add the new link when I receive it.",
      "parentUuid": "91eedcfe_afd6562b",
      "range": {
        "startLine": 56,
        "startChar": 56,
        "endLine": 56,
        "endChar": 64
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7711473_eede213b",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-09-03T21:53:15Z",
      "side": 1,
      "message": "This URL can be trimmed, to remove the \"view?usp\u003dsharing\" suffix, and it will still work correctly in Google Drive.",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9b6e2b6_5b410456",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7711473_eede213b",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "761053e8_8166e232",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-09-03T21:53:15Z",
      "side": 1,
      "message": "Redfish should always be capitalized, I think.",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20b45cc8_b7203f14",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "761053e8_8166e232",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61e086ef_b68c02a2",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-09-30T01:36:46Z",
      "side": 1,
      "message": "NIT: that term does not have the same context to openbmc",
      "range": {
        "startLine": 108,
        "startChar": 34,
        "endLine": 108,
        "endChar": 44
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c5578b3_47d0b16c",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "Do you have a suggestion on a better term to use?",
      "parentUuid": "61e086ef_b68c02a2",
      "range": {
        "startLine": 108,
        "startChar": 34,
        "endLine": 108,
        "endChar": 44
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09662c6b_0a6c4ffc",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-10-13T23:39:10Z",
      "side": 1,
      "message": "\"In order to monitor memory out of band, a system...\" \nsome openbmc folk are oems, and they are selling machines with openbmc\u0027s on them.",
      "parentUuid": "5c5578b3_47d0b16c",
      "range": {
        "startLine": 108,
        "startChar": 34,
        "endLine": 108,
        "endChar": 44
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9ce4c73_7c9aca94",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-18T19:21:40Z",
      "side": 1,
      "message": "Thanks, will fix.",
      "parentUuid": "09662c6b_0a6c4ffc",
      "range": {
        "startLine": 108,
        "startChar": 34,
        "endLine": 108,
        "endChar": 44
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2566dbf_1be81cc0",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-20T02:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9ce4c73_7c9aca94",
      "range": {
        "startLine": 108,
        "startChar": 34,
        "endLine": 108,
        "endChar": 44
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9233646b_573b493d",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-09-30T01:36:46Z",
      "side": 1,
      "message": "How would the host kernel write information to the bmc, for the hw-fault-monitor to read?",
      "range": {
        "startLine": 120,
        "startChar": 55,
        "endLine": 121,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c12ffdb4_6b05c198",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "Added clarification.",
      "parentUuid": "9233646b_573b493d",
      "range": {
        "startLine": 120,
        "startChar": 55,
        "endLine": 121,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0eaf2e8e_64b577c9",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-10-13T23:39:10Z",
      "side": 1,
      "message": "Maybe I need more context. \n\nIf there is an fault on the host the host can save that fault information to the bmc. \nWhy would we want that? the host can either save it\u0027s own fault log, or send the fault to a service?",
      "parentUuid": "c12ffdb4_6b05c198",
      "range": {
        "startLine": 120,
        "startChar": 55,
        "endLine": 121,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "243d92f0_56368733",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-18T19:21:40Z",
      "side": 1,
      "message": "Our goal is to build a BMC-centric logging system, so that data center monitoring tools can get various fault logs from a single interface (bmcweb Redfish logs). Also, we\u0027d like to have the fault info in BMC so that in the future the hardware fault monitor can use it to activate preventive actions on platforms without interrupting the OS, such as soft post-package repair or adaptive double-device data correction.",
      "parentUuid": "0eaf2e8e_64b577c9",
      "range": {
        "startLine": 120,
        "startChar": 55,
        "endLine": 121,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f777116e_d9f93bea",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-20T02:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "243d92f0_56368733",
      "range": {
        "startLine": 120,
        "startChar": 55,
        "endLine": 121,
        "endChar": 48
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c79eacfd_546476a0",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-09-03T21:53:15Z",
      "side": 1,
      "message": "It looks like \"OverwritePolicy\u003dunknown\" is a snippet of text that would appear in a configuration file. If so, surround it with `backticks` like this, so that it will properly display as file/command/example text, not ordinary prose text.",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e93c2318_c263605f",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c79eacfd_546476a0",
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a190d38a_3fc5e530",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-09-30T01:36:46Z",
      "side": 1,
      "message": "For my understanding, How will hw-fault-monitor\u0027s overwrite policy differ most from bmcwebs?",
      "range": {
        "startLine": 155,
        "startChar": 9,
        "endLine": 155,
        "endChar": 15
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15aba1b4_7c52b2de",
        "filename": "designs/hw-fault-monitor.md",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2021-10-11T22:22:48Z",
      "side": 1,
      "message": "It looks like existing bmcweb LogServices are using `WrapsWhenFull` as their overwrite policy. (The possible values defined for LogService.v1_2_0 in are `NeverOverWrites`, `Unknown`, and `WrapsWhenFull`). We would like to use a custom policy to save fault info for first errors and most severe errors (as mentioned briefly in the Requirements section).",
      "parentUuid": "a190d38a_3fc5e530",
      "range": {
        "startLine": 155,
        "startChar": 9,
        "endLine": 155,
        "endChar": 15
      },
      "revId": "73634a00c258f34b075bf8703eee495533d5a973",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}