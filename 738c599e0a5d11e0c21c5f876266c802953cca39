{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d62a4520_811f8ced",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 335,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-03-07T09:42:54Z",
      "side": 1,
      "message": "nit: Why only type 2 and 5? The discovery can be generic for all PLDM types.",
      "range": {
        "startLine": 335,
        "startChar": 31,
        "endLine": 335,
        "endChar": 77
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1dd89c0_b66e0e87",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 335,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-09T14:51:29Z",
      "side": 1,
      "message": "The discovery is generic for all PLDM types. The description here points out that the implementation of PLDM platform monitoring and control will communicate to the endpoint which supports PLDM type 2 and Type 5.",
      "parentUuid": "d62a4520_811f8ced",
      "range": {
        "startLine": 335,
        "startChar": 31,
        "endLine": 335,
        "endChar": 77
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccee1d33_1882929d",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 335,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-03-21T08:17:56Z",
      "side": 1,
      "message": "got it.",
      "parentUuid": "f1dd89c0_b66e0e87",
      "range": {
        "startLine": 335,
        "startChar": 31,
        "endLine": 335,
        "endChar": 77
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcd0e38d_538508d7",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-02-28T14:44:07Z",
      "side": 1,
      "message": "TID# is settable value. And it doesn\u0027t have much meaning in the user view. Between S0DIMM0Temp and DIMM0Temp_TID1, I think the first one is better. So I think pldmd should handle the prefix/sub-fix configuration to map from TID with a String which will be added to sensor name.\nIn above example TID#1 will be mapped with the Prefix S0.",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83e2ebfa_caddd590",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-02-28T19:27:52Z",
      "side": 1,
      "message": "Including TID# in sensor name is a simpler method to avoid the duplicated sensor name in the system.\nI think the prefix/sub-fix naming(e.g. slot# in the example, S0DIMM0Temp) would be better to use the information in Entity Association PDR(containerID, entityInstanceNumer and entity type) instead of creating a new configuration file to map TID and prefix/sub-fix.",
      "parentUuid": "dcd0e38d_538508d7",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a31f363b_ee7ca146",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000410
      },
      "writtenOn": "2022-04-04T08:56:38Z",
      "side": 1,
      "message": "Right, another way is to expose a location decorator on the MCTP EID object and consume it in upper layer applications.",
      "parentUuid": "83e2ebfa_caddd590",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64d9540e_56958451",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-04-28T19:51:53Z",
      "side": 1,
      "message": "I suspect that we have many cases where we\u0027re going to want to map these sensors into something practically named (for instance to feed into fan control).  Is there any mechanism to supply configuration from EM (or provided in pldmd) to give better names on these?",
      "parentUuid": "a31f363b_ee7ca146",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2299b2f0_1a82551a",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-04-29T13:21:23Z",
      "side": 1,
      "message": "The case was not covered by the proposal at first. Yes, having the feature would be easier for writing config file for fan control(the temp inputs array of pid type property in entity-manager JSON file)\n\nWould it be okay to supply a config file to \u0027pldmd\u0027? The config file defines rules how to mapping sensor# in a PLDM terminus to practical name. Each rule has FRU matching keywords like what entity-manager does. \u0027pldmd\u0027 can decide which rule should apply to which PLDM terminus. For the case that more than one the same PLDM terminus installed in platform, the sensor names for second and following terminus will be have a suffix instance# of PLDM terminus.\n\nThe cons: It is introducing another config file to increase maintenance effort.\nThe pros: It avoids the dependency on EM and the D-Bus calls.",
      "parentUuid": "64d9540e_56958451",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89dd8513_34327853",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-05-02T07:26:30Z",
      "side": 1,
      "message": "\u003e I suspect that we have many cases where we\u0027re going to want to map \n\u003e these sensors into something practically named (for instance to feed \u003e into fan control).  Is there any mechanism to supply configuration \n\u003e from EM (or provided in pldmd) to give better names on these?\nThe idea of using location decorator(https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Decorator/LocationCode.interface.yaml) mentioned by Sumanth might be helpful here. Since, PLDM will always have a transport layer below, it might be always good if that transport can give the information related to physical location of the device. And it is easy and straightforward for a transport layer to expose this info. \n\nEg: In MCTP over I2C binding, mctpd will have the information about the device slave address or bus number in which it is connected to. With an entity manager config we can easily name and map that bus as say \u0027PCIe slot 1\u0027 and expose it as LocationCode. Now pldmd can consume the same and prepend to sensor name, then fan control can easily map corresponding fans with the same.\n\nIf PLDM has static EID config, then this info can be part of that config as well.",
      "parentUuid": "2299b2f0_1a82551a",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cd944d2_fa14776c",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-05-03T12:41:53Z",
      "side": 1,
      "message": "\u003e Eg: In MCTP over I2C binding, mctpd will have the information about the device slave address or bus number in which it is connected to. With an entity manager config we can easily name and map that bus as say \u0027PCIe slot 1\u0027 and expose it as LocationCode. Now pldmd can consume the same and prepend to sensor name, then fan control can easily map corresponding fans with the same.\n\nThe MCTP endpoint D-Bus interface(https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/MCTP/Endpoint.interface.yaml) doesn\u0027t have properties for its transport layer physical media type/address of its transport layer. It might be good to expose this info here to implement the idea of location decorator mentioned by Sumanth. \n\nIn MCTP over I2C binding, the Slave address for endpoint can be fixed or dynamic assignment(SMBus ARP). Entity manager config can easily map endpoint for fixed address but hard for dynamic assignment. If we can assumed that all PCI slots in system has its dedicated I2C bus number(might be connected to different BMC\u0027s I2C bus or divided by I2C-MUX), then using I2C bus number should be enough for pldmd to map sensor name.",
      "parentUuid": "89dd8513_34327853",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e72c76ec_61b5068e",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000479
      },
      "writtenOn": "2022-05-16T06:59:00Z",
      "side": 1,
      "message": "\u003e In MCTP over I2C binding, the Slave address for endpoint can be fixed or dynamic assignment(SMBus ARP). Entity manager config can easily map endpoint for fixed address but hard for dynamic assignment. If we can assumed that all PCI slots in system has its dedicated I2C bus number(might be connected to different BMC\u0027s I2C bus or divided by I2C-MUX), then using I2C bus number should be enough for pldmd to map sensor name.\n\nI am not sure, but I supose the PCIe slots will be behind a mux with dynamic bus address assignment or with a fixed bus address.\nIn Intel platforms they are behind a mux, and entity-manager takes care of bus address assignment. But since mux address is static, entity manager can easily map the given bus address to PCIe Slot 1, PCIe Slot 2 etc..",
      "parentUuid": "9cd944d2_fa14776c",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83f27b79_57d9007c",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 357,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-08-12T07:39:18Z",
      "side": 1,
      "message": "I wonder why we just not make this simple by allow user configure the mapping between on TID with on string which they want. If it is not exist just use #TID. This is what we did in Ampere.\nhttps://github.com/ampere-openbmc/pldm/commit/b3fb4db63d5b19089bee83cc773439e799a8823d\n\nAbout Entity Association PDR, it is optional.",
      "parentUuid": "e72c76ec_61b5068e",
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74c66e07_19fcb06f",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 368,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-17T18:59:43Z",
      "side": 1,
      "message": "doing",
      "range": {
        "startLine": 368,
        "startChar": 6,
        "endLine": 368,
        "endChar": 10
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2a52908_44d644c8",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 368,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-17T20:07:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "74c66e07_19fcb06f",
      "range": {
        "startLine": 368,
        "startChar": 6,
        "endLine": 368,
        "endChar": 10
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01b3c2bb_fb7b9e38",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 370,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-17T18:59:43Z",
      "side": 1,
      "message": "space at the beginning",
      "range": {
        "startLine": 370,
        "startChar": 1,
        "endLine": 370,
        "endChar": 20
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "516b5d44_cecc695d",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 370,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-17T20:07:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "01b3c2bb_fb7b9e38",
      "range": {
        "startLine": 370,
        "startChar": 1,
        "endLine": 370,
        "endChar": 20
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b7a58be_d55ced8b",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 376,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-17T18:59:43Z",
      "side": 1,
      "message": "extra space",
      "range": {
        "startLine": 376,
        "startChar": 56,
        "endLine": 376,
        "endChar": 58
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a69564ca_ab41ad2b",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 376,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-17T20:07:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8b7a58be_d55ced8b",
      "range": {
        "startLine": 376,
        "startChar": 56,
        "endLine": 376,
        "endChar": 58
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f91e164_2b6260fc",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 383,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-17T18:59:43Z",
      "side": 1,
      "message": "than",
      "range": {
        "startLine": 383,
        "startChar": 40,
        "endLine": 383,
        "endChar": 44
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5f6171f_473f9e64",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 383,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-17T20:07:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1f91e164_2b6260fc",
      "range": {
        "startLine": 383,
        "startChar": 40,
        "endLine": 383,
        "endChar": 44
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fade863_9a9c9a9c",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 386,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-17T18:59:43Z",
      "side": 1,
      "message": "media?",
      "range": {
        "startLine": 386,
        "startChar": 66,
        "endLine": 386,
        "endChar": 72
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1800eb48_d33cb593",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 386,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-17T20:07:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4fade863_9a9c9a9c",
      "range": {
        "startLine": 386,
        "startChar": 66,
        "endLine": 386,
        "endChar": 72
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c93a231a_056e703b",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 390,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-17T18:59:43Z",
      "side": 1,
      "message": "nit: link the doc?",
      "range": {
        "startLine": 390,
        "startChar": 27,
        "endLine": 390,
        "endChar": 34
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72080646_913c0a1a",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 390,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-17T20:07:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c93a231a_056e703b",
      "range": {
        "startLine": 390,
        "startChar": 27,
        "endLine": 390,
        "endChar": 34
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "584d1527_bfd7fd94",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 399,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-17T18:59:43Z",
      "side": 1,
      "message": "nit: lower case",
      "range": {
        "startLine": 399,
        "startChar": 60,
        "endLine": 399,
        "endChar": 61
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30c7cd01_8d93d3a1",
        "filename": "designs/pldm-stack.md",
        "patchSetId": 13
      },
      "lineNbr": 399,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-17T20:07:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "584d1527_bfd7fd94",
      "range": {
        "startLine": 399,
        "startChar": 60,
        "endLine": 399,
        "endChar": 61
      },
      "revId": "738c599e0a5d11e0c21c5f876266c802953cca39",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}