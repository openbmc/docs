{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a34598b8_928c16f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-03-25T16:02:25Z",
      "side": 1,
      "message": "LGTM",
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "950246da_1b86e78d",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-03-29T23:20:19Z",
      "side": 1,
      "message": "nit: cannot",
      "range": {
        "startLine": 37,
        "startChar": 60,
        "endLine": 37,
        "endChar": 67
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be7540c6_dc89777c",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "950246da_1b86e78d",
      "range": {
        "startLine": 37,
        "startChar": 60,
        "endLine": 37,
        "endChar": 67
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9a27078_f0b0a573",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-03-29T21:18:59Z",
      "side": 1,
      "message": "NIT:\nnot disallow \u003d\u003e allow",
      "range": {
        "startLine": 54,
        "startChar": 68,
        "endLine": 54,
        "endChar": 75
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d765fabf_be8c2657",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Reworded this",
      "parentUuid": "f9a27078_f0b0a573",
      "range": {
        "startLine": 54,
        "startChar": 68,
        "endLine": 54,
        "endChar": 75
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c8b8a10_50d42ac9",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 62,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-03-29T23:20:19Z",
      "side": 1,
      "message": "nit: \"for\" instead of \"from\"?",
      "range": {
        "startLine": 61,
        "startChar": 51,
        "endLine": 62,
        "endChar": 29
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "735a3784_78a73be8",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 62,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0c8b8a10_50d42ac9",
      "range": {
        "startLine": 61,
        "startChar": 51,
        "endLine": 62,
        "endChar": 29
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ead9edc4_dda8c812",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-03-29T23:20:19Z",
      "side": 1,
      "message": "nit: \"This is to\"",
      "range": {
        "startLine": 63,
        "startChar": 9,
        "endLine": 63,
        "endChar": 16
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4691e1c_22ef0ffa",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 63,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ead9edc4_dda8c812",
      "range": {
        "startLine": 63,
        "startChar": 9,
        "endLine": 63,
        "endChar": 16
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dab208e4_80e95bde",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 65,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-03-29T23:20:19Z",
      "side": 1,
      "message": "I am wondering what type of manipulation will be allowed. Will locally-running services be allowed to add content to the backing store, or is the backing store supposed to hold data provided exclusively by services *external* to the BMC?",
      "range": {
        "startLine": 64,
        "startChar": 28,
        "endLine": 65,
        "endChar": 46
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20993532_b9653c56",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 65,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Reworded it, to clarify. A locally-running service is free to do whatever it wants with the backing storage. It can add, modify, delete, and so on. The backing store can be used simultaneously, by either a locally-running process or an externally-running HTTP client, or both, or multiple copies of both. By design, there is no locking.",
      "parentUuid": "dab208e4_80e95bde",
      "range": {
        "startLine": 64,
        "startChar": 28,
        "endLine": 65,
        "endChar": 46
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90d75ebc_43e50714",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 67,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-03-29T21:18:59Z",
      "side": 1,
      "message": "Is it required to be in-memory, or is that just a recommendation.\nIt is possible that others will want to store persistent information.",
      "range": {
        "startLine": 67,
        "startChar": 50,
        "endLine": 67,
        "endChar": 60
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b31987cf_da4e7340",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 67,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Storing permanent information is beyond the scope of this design, for now.",
      "parentUuid": "90d75ebc_43e50714",
      "range": {
        "startLine": 67,
        "startChar": 50,
        "endLine": 67,
        "endChar": 60
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8eb9dcf_eae17dd0",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "Some missing requirements:\n\nMust be able to store and produce schemas that are to the redfish standard.\n\nMust be able to avoid security compromises during normal operations (escaping a directory via .. for example).\n\nUser must be able to set a given Id through the API\n\nIf the user does not provide an Id one musty be generated.\n\nUser must be able to add resources at any point in the Redfish tree.",
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1a52c2f_7b087016",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Being able to store and produce schemas goes way beyond the intended design, and could probably use another design document all on its own for that, if that is a direction we wish to go down. I thought you did not want ExternalStorer doing any schema manipulation on its own, but rather, obeying schemas that others had already written.\n\nAs for security compromises, see the Impacts section for that, I called attention to the security requirements there.\n\nAs for setting the ID, and auto-generating an ID if not provided, that\u0027s an API detail, and it\u0027s in the companion API document.\n\nAs for adding resources at any point in the Redfish tree, isn\u0027t that not allowed by schema? The point of a schema is to restrict what can be done arbitrarily, so that data remains organized.",
      "parentUuid": "f8eb9dcf_eae17dd0",
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f94d34a0_0e040373",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "Please in the definition of each, add the term for the Redfish item that that thing produces so those with knowlege of the redfish spec can comment.\n\nI beleive it\u0027s hook \u003d Route\nInstance \u003d Resource\nEntry \u003d Attribute/property.",
      "range": {
        "startLine": 99,
        "startChar": 64,
        "endLine": 99,
        "endChar": 75
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14599360_c44a4cb2",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Hmm, the entire point here was to avoid confusion with existing Redfish terminology. Also, an instance is a container, not an individual resource. An entry is a JSON object that can itself contain many properties, not just a single property.",
      "parentUuid": "f94d34a0_0e040373",
      "range": {
        "startLine": 99,
        "startChar": 64,
        "endLine": 99,
        "endChar": 75
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ebef106_ab3516ae",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 115,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "I think this can be removed;  Every schema includes an oem section, which is designed for user-defined content.",
      "range": {
        "startLine": 113,
        "startChar": 55,
        "endLine": 115,
        "endChar": 21
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "061646d9_5fd7da8d",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 115,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "The point I was making is that the Redfish object hierarchy can\u0027t just be altered at will, the schemas limit where we are allowed to make changes, so care has to be taken as to where to instantiate the ExternalStorer hooks at. The \"Oem\" section, if it is freeform, would be a good place for an ExternalStorer hook, if desired.",
      "parentUuid": "1ebef106_ab3516ae",
      "range": {
        "startLine": 113,
        "startChar": 55,
        "endLine": 115,
        "endChar": 21
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df94465a_950ca89a",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "nit, rephrase to \"content must be inserted to the schema\"",
      "range": {
        "startLine": 115,
        "startChar": 22,
        "endLine": 116,
        "endChar": 23
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27d77616_3b7cd326",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "In the final version, the hook doesn\u0027t contain a URL, given that the user can put things into the tree at any location correct?",
      "range": {
        "startLine": 116,
        "startChar": 47,
        "endLine": 116,
        "endChar": 57
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd64828e_cc6381dc",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Reworded it slightly.",
      "parentUuid": "df94465a_950ca89a",
      "range": {
        "startLine": 115,
        "startChar": 22,
        "endLine": 116,
        "endChar": 23
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ced778e5_1497326e",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "No, the hook will always contain a URL fragment, as the top layer. Things would get added underneath that fragment. When we have more locations we want to add ExternalStorer functionality to, we can instantiate additional ExternalStorer hook objects as needed.",
      "parentUuid": "27d77616_3b7cd326",
      "range": {
        "startLine": 116,
        "startChar": 47,
        "endLine": 116,
        "endChar": 57
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2257002b_fbde3e9d",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 117,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-03-29T21:18:59Z",
      "side": 1,
      "message": "What will this redfish URL ExternalStorer schema look like? \nDo you have an example?",
      "range": {
        "startLine": 117,
        "startChar": 20,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4599c3f_89ca0aee",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 117,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "ExternalStorer, by design, will not introduce any new schemas. It will conform to existing schemas. The first example is LogServices (see the companion API document for that).",
      "parentUuid": "2257002b_fbde3e9d",
      "range": {
        "startLine": 117,
        "startChar": 20,
        "endLine": 117,
        "endChar": 29
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a0dca12_6a993fe6",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 118,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-03-29T23:20:19Z",
      "side": 1,
      "message": "nit: by the",
      "range": {
        "startLine": 118,
        "startChar": 49,
        "endLine": 118,
        "endChar": 52
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ff98669_bb88206f",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 118,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7a0dca12_6a993fe6",
      "range": {
        "startLine": 118,
        "startChar": 49,
        "endLine": 118,
        "endChar": 52
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31256a7a_0f054f1f",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 133,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-03-29T21:18:59Z",
      "side": 1,
      "message": "Above you mentioned how external store would handle overuse of memory. \n\u003e if this limit would be exceeded .. old content will be silently dropped, as needed.\n\nHowever, this does not appear to be address in your design. How do you plan to drop the old data silently?",
      "range": {
        "startLine": 133,
        "startChar": 29,
        "endLine": 133,
        "endChar": 61
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a31a23b_d7911e22",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 133,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "By \"silently\", I mean doing so without disturbing the user in any way. If the user attempts to store new content and there isn\u0027t room, then old content will be removed to make room, and the user\u0027s write request will be considered successful.",
      "parentUuid": "31256a7a_0f054f1f",
      "range": {
        "startLine": 133,
        "startChar": 29,
        "endLine": 133,
        "endChar": 61
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24bd73dc_a65cc6b9",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 134,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "Please go one level deeper than this, (ie /run/bmcweb/redfish) in case the BMC in the future chooses to use this folder for other things.",
      "range": {
        "startLine": 134,
        "startChar": 2,
        "endLine": 134,
        "endChar": 12
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc6b54db_a01a5854",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 134,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "That will have a pretty big blast radius through the API document, but could be done. If going that way, I would prefer to use /run/bmcweb/redfish/v1 directory, as it would provide visual consistency with what\u0027s used by the URL path.",
      "parentUuid": "24bd73dc_a65cc6b9",
      "range": {
        "startLine": 134,
        "startChar": 2,
        "endLine": 134,
        "endChar": 12
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eea988cc_d3f4580a",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 149,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "The text in this section needs to be rearranged a bit, and a new section written here.  The section is designed to tease out \"what other things did you think about doing instead of this?\"  and talking about the pros and cons of each.  For example, storing in memory might be an alternative, not using redfish at all (ie webdav as you mention earlier) might be an alternative.\n\nCan you take a look at this section, and try to make another attempt at it please?",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55fad77a_e036ee01",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 149,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Sorry, can\u0027t write a new section, as arbitrarily adding a new section would violate the \"schema\" enforced by the design document template!\n\nThe pros and cons of some alternatives are mentioned below.",
      "parentUuid": "eea988cc_d3f4580a",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 26
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c98d6af_0e4ca44b",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 153,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "This documentation is documenting the long term intent;  This statement was a short term decision intended to be able to make progress, but ultimately, this needs to be supported on every collection and the design doc should say that.",
      "range": {
        "startLine": 153,
        "startChar": 46,
        "endLine": 153,
        "endChar": 62
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91d33819_c0b30572",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 153,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "I thought the understanding was that we would not make a global change to all Redfish container objects, but rather, add support for ExternalStorer on an as-needed basis. This philosophy is similar to what was done for dbus-sensors devices: instead of trying to add a wildcard approach that would try to support every device supported by Linux, deliberately take a slower pace, adding devices to an allowlist and then only supporting those, once they are known to actually be tested and needed by somebody.",
      "parentUuid": "9c98d6af_0e4ca44b",
      "range": {
        "startLine": 153,
        "startChar": 46,
        "endLine": 153,
        "endChar": 62
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68a86fea_6e7d367a",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "This sentence is kind of unrelated to this design doc.  I think it would be an improvement to just remove it.",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 157,
        "endChar": 65
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79462128_8faa4c3d",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 157,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "This sentence is very useful, as it backs up what I said in the previous comment.",
      "parentUuid": "68a86fea_6e7d367a",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 157,
        "endChar": 65
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df624639_7a6167cd",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-03-29T23:20:19Z",
      "side": 1,
      "message": "nit: cannot",
      "range": {
        "startLine": 166,
        "startChar": 72,
        "endLine": 166,
        "endChar": 79
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac6d6525_836e21d6",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "df624639_7a6167cd",
      "range": {
        "startLine": 166,
        "startChar": 72,
        "endLine": 166,
        "endChar": 79
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3bcdfd3_2d72fe47",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 169,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "You should mention industry alignment in this section.  Nobody in the server managability industry (that I\u0027m aware of at least) uses webdav, nor are there manageability schemas for it.",
      "range": {
        "startLine": 167,
        "startChar": 16,
        "endLine": 169,
        "endChar": 5
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "358a514b_a1a89e4c",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 169,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "WebDAV was kind of a straw man here. I wanted to give an example of a more general protocol that would intentionally not try to organize anything into schemas.",
      "parentUuid": "e3bcdfd3_2d72fe47",
      "range": {
        "startLine": 167,
        "startChar": 16,
        "endLine": 169,
        "endChar": 5
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7124a35_cd99197b",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 181,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "This should go in your requirements section.",
      "range": {
        "startLine": 178,
        "startChar": 20,
        "endLine": 181,
        "endChar": 58
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9df0466f_ac11c2a8",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 181,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "The design document template said to mention security impacts in this section, and this is a security impact. Should security be redundantly mentioned in two different places?",
      "parentUuid": "e7124a35_cd99197b",
      "range": {
        "startLine": 178,
        "startChar": 20,
        "endLine": 181,
        "endChar": 58
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02802212_97a20a34",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 183,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "I don\u0027t think there\u0027s any evidence that tmpfs is slower than dbus;  I would expect anything in this feature to be faster, not slower.",
      "range": {
        "startLine": 183,
        "startChar": 12,
        "endLine": 183,
        "endChar": 48
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3bfb2ce_af9d8443",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 183,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "I meant to compare performance with caching, versus performance of having to go through the filesystem anew for every lookup. I\u0027m not sure how D-Bus would fit into this.",
      "parentUuid": "02802212_97a20a34",
      "range": {
        "startLine": 183,
        "startChar": 12,
        "endLine": 183,
        "endChar": 48
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29d883f0_8908b792",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "Other impacts?  How do platforms disable this code?  What binary size impact does it have?  Does the interface need limited to certain channels?  (probably needs another requirement).  How does a developer disable the feature if it\u0027s not desired?",
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d0785ed_e68d3428",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "I\u0027m not sure what you mean. What is meant by \"channels\" in this context? Do you think we should add a definition flag, or other global feature toggle, to provide a way to globally disable ExternalStorer throughout bmcweb if not desired?",
      "parentUuid": "29d883f0_8908b792",
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dd65ddd_3ebeafd3",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 192,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "nit, because the filesystem is internal, a functional test has no way to test it aside from looking at the resulting tree and making the assumption that the files were persisted properly.  This can probably be removed.",
      "range": {
        "startLine": 191,
        "startChar": 64,
        "endLine": 192,
        "endChar": 41
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f90a949_19467626",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 192,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "That would be just what a functional test would do, though. Looking at the resulting filesystem, to see what changed, is a great way to verify that an operation worked as intended.",
      "parentUuid": "4dd65ddd_3ebeafd3",
      "range": {
        "startLine": 191,
        "startChar": 64,
        "endLine": 192,
        "endChar": 41
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20542eb1_839c9ef7",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 194,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "Please rewrite this, it implies that other developers will be writing these tests, which I\u0027m sure is not what you intended.  There should be tests that test the BMC capabilities.",
      "range": {
        "startLine": 192,
        "startChar": 69,
        "endLine": 194,
        "endChar": 27
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c0de7ef_553818de",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 194,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "If another developer is using ExternalStorer as part of their feature, then they would probably want to test their feature, and in their test, making sure ExternalStorer worked for them, as intended, based on whatever they were trying to achieve. I thought this was how an integration test worked.",
      "parentUuid": "20542eb1_839c9ef7",
      "range": {
        "startLine": 192,
        "startChar": 69,
        "endLine": 194,
        "endChar": 27
      },
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dd4605e_86a56985",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 197,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:42:11Z",
      "side": 1,
      "message": "Please be slightly more specific here, I suspect you\u0027re going to write robot tests for this feature?  We should explicitly call out the harness we intend to use.",
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23d35de4_40f01428",
        "filename": "designs/external-storer.md",
        "patchSetId": 7
      },
      "lineNbr": 197,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-03-31T09:54:20Z",
      "side": 1,
      "message": "I\u0027m not sure what you mean by \"robot tests\". As for explicitly calling out the intended harness, isn\u0027t that an implementation detail, not for a design doc?",
      "parentUuid": "5dd4605e_86a56985",
      "revId": "d9c6fd23b6e0d7f5fecf1bd829044224ca3d39f8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}