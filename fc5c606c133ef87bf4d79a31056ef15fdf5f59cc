{
  "comments": [
    {
      "key": {
        "uuid": "8ae35800_38f4416a",
        "filename": "security/network-security-considerations.md",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-12T20:55:36Z",
      "side": 1,
      "message": "Comment copied from https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/22404:\nAdd a threat for network flooding, like too many connections coming too frequently which cause the BMC to become unresponsive (like a denial of service (DoS) attack).  For which the traditional defense is rate limiting provided by a kernel-based firewall, followed by black listing the offending IP address, again using firewall rules.",
      "revId": "fc5c606c133ef87bf4d79a31056ef15fdf5f59cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9398c26a_306b78a0",
        "filename": "security/network-security-considerations.md",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-11T15:07:18Z",
      "side": 1,
      "message": "What certificates does OpenBMC automatically generate?  And what technology is used for each?\nI see a HTTP TLS cert generated here: https://github.com/openbmc/bmcweb/#configuration",
      "revId": "fc5c606c133ef87bf4d79a31056ef15fdf5f59cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb762d99_d4659e41",
        "filename": "security/network-security-considerations.md",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2019-10-15T17:06:57Z",
      "side": 1,
      "message": "Looking at that section, they mention a 256-bit NIST curve and SHA 256, so this must be ECC/ECDSA.",
      "parentUuid": "9398c26a_306b78a0",
      "revId": "fc5c606c133ef87bf4d79a31056ef15fdf5f59cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49f0e393_dadc2813",
        "filename": "security/network-security-considerations.md",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-10-12T20:55:36Z",
      "side": 1,
      "message": "New paragraph per https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/22404:\nTalk about how Redfish Roles are related to OpenBMC Privilege Roles.",
      "revId": "fc5c606c133ef87bf4d79a31056ef15fdf5f59cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc3e92af_18014d55",
        "filename": "security/network-security-considerations.md",
        "patchSetId": 1
      },
      "lineNbr": 247,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-12-11T20:34:45Z",
      "side": 1,
      "message": "Mention Avahi, which implements Zeroconf DNS service discovery.",
      "revId": "fc5c606c133ef87bf4d79a31056ef15fdf5f59cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c63c174a_f056d907",
        "filename": "security/network-security-considerations.md",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-12-11T20:34:45Z",
      "side": 1,
      "message": "Mention slpd-lite",
      "revId": "fc5c606c133ef87bf4d79a31056ef15fdf5f59cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdfbac11_4afa9d85",
        "filename": "security/network-security-considerations.md",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-12-11T20:34:45Z",
      "side": 1,
      "message": "Add new level 2 subsection here to discuss firmware downloads via the network.\nLink to https://github.com/openbmc/docs/blob/master/code-update/code-update.md\nBriefly discuss the three download techniques: scp, TFTP REST API, TFTP.\nMention digital signature validation, currently in review here:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/9025\n\nNote: This section primarily discussed \"firmware downloads via the network\".  The overall BMC threat model should also discuss firmware update scenarios in general, including provisioning, downloads via host interfaces, etc.",
      "revId": "fc5c606c133ef87bf4d79a31056ef15fdf5f59cc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}