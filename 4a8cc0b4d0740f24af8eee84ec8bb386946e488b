{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bb76fa07_520b7993",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-30T01:31:28Z",
      "side": 1,
      "message": "Another formatting comment :)",
      "revId": "4a8cc0b4d0740f24af8eee84ec8bb386946e488b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83e67f70_73dd60a4",
        "filename": "designs/cper-records.md",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-05-30T01:31:28Z",
      "side": 1,
      "message": "Named references need to use square brackets, so `[UEFI Specification][cper_spec]`. Parentheses are for inline references (where you provide the URL directly).\n\nYou can see what you have results in a link in the rendering, but the URL makes no sense:\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/docs/+/refs/changes/77/71577/6/designs/cper-records.md\n\nPlease audit the rest of the document and fix throughout.",
      "range": {
        "startLine": 16,
        "startChar": 36,
        "endLine": 16,
        "endChar": 47
      },
      "revId": "4a8cc0b4d0740f24af8eee84ec8bb386946e488b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76268e75_a38d3d90",
        "filename": "designs/cper-records.md",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-30T04:53:02Z",
      "side": 1,
      "message": "I did test this on the github parser, and it renders just fine:\n\nhttps://github.com/edtanous/docs/blob/cper/designs/cper-records.md\n\nI guess I assumed that github was the markdown dialect we were using, but you\u0027re right, gitiles and github look like they do something different.  grrrrr",
      "parentUuid": "83e67f70_73dd60a4",
      "range": {
        "startLine": 16,
        "startChar": 36,
        "endLine": 16,
        "endChar": 47
      },
      "revId": "4a8cc0b4d0740f24af8eee84ec8bb386946e488b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "176bd923_905b1d1c",
        "filename": "designs/cper-records.md",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-30T05:10:29Z",
      "side": 1,
      "message": "Wait, I misunderstood what you were saying, and github has the wrong link too.  ACK.  Will fix (tomorrow)",
      "parentUuid": "76268e75_a38d3d90",
      "range": {
        "startLine": 16,
        "startChar": 36,
        "endLine": 16,
        "endChar": 47
      },
      "revId": "4a8cc0b4d0740f24af8eee84ec8bb386946e488b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d366e17f_e0ae58ae",
        "filename": "designs/cper-records.md",
        "patchSetId": 6
      },
      "lineNbr": 80,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-29T20:18:40Z",
      "side": 1,
      "message": "My recollection is that there are a few new dependencies that the current libcper pulls in also, which do not have recipes in upstream already.  Are those recipes going to be sent upstream or are we owning those also?",
      "revId": "4a8cc0b4d0740f24af8eee84ec8bb386946e488b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db2ee244_55f415f8",
        "filename": "designs/cper-records.md",
        "patchSetId": 6
      },
      "lineNbr": 80,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-29T21:23:22Z",
      "side": 1,
      "message": "I\u0027ll submit whatever is needed to openembedded, not a big deal.  I know there was a question of the base64 implementation, which has been replaced with yet another base64 implementation in the meson-dev branch that this doc will pull.\n\nMy intent once this is somewhere we can work on it is to either pull one of the existing single-file solutions already in openbmc to replace the hard dependency, or upstream the base64 recipe to open embedded.  Base64 decoding doesn\u0027t seem like the kind of thing that\u0027s worth taking a dependency on a library for such a small piece of code\n\nThe intent is not to add any recipes aside from libcper into meta-phosphor or openbmc/openbmc.",
      "parentUuid": "d366e17f_e0ae58ae",
      "revId": "4a8cc0b4d0740f24af8eee84ec8bb386946e488b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}